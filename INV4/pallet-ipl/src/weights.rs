
//! Autogenerated weights for `pallet_ipl`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-06-03, STEPS: `20`, REPEAT: 10, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("solo-dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/invarch-collator
// benchmark
// --chain
// solo-dev
// --execution
// wasm
// --wasm-execution
// compiled
// --pallet
// pallet-ipl
// --extrinsic
// set_permission
// --steps
// 20
// --repeat
// 10
// --json-file=./weights/ipl/ipl.json
// --output
// ../InvArch-Frames/INV4/pallet-ipl/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_ipl`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_ipl::WeightInfo for WeightInfo<T> {
	// Storage: Ipl Ipl (r:1 w:0)
	// Storage: Ipl Permissions (r:0 w:1)
	fn set_permission() -> Weight {
		(14_678_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
}
