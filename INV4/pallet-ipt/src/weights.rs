
//! Autogenerated weights for `pallet_ipt`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-06-06, STEPS: `20`, REPEAT: 10, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("solo-dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/invarch-collator
// benchmark
// --chain
// solo-dev
// --execution
// wasm
// --wasm-execution
// compiled
// --pallet
// pallet-ipt
// --extrinsic
// vote_multisig
// --steps
// 20
// --repeat
// 10
// --json-file=./weights/ipt/ipt.json
// --output
// ../InvArch-Frames/INV4/pallet-ipt/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_ipt`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_ipt::WeightInfo for WeightInfo<T> {
	// Storage: Ipt Multisig (r:1 w:1)
	// Storage: Ipt Ipt (r:1 w:0)
	// Storage: Ipt Balance (r:1 w:0)
	// Storage: Ipt SubAssets (r:1 w:0)
	// Storage: Ipl Ipl (r:1 w:0)
	fn vote_multisig() -> Weight {
		(33_352_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
}
