var searchIndex = new Map(JSON.parse('[\
["invarch_primitives",{"doc":"","t":"PGFPFFGPPGPGPFPPNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Bool","BoolOrWasm","CallInfo","Child","CoreInfo","IpfInfo","IpsType","Normal","One","OneOrPercent","Parent","Parentage","Replica","SubTokenInfo","Wasm","ZeroPoint","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","account","author","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","data","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","frozen_tokens","function","id","into","into","into","into","into","into","into","into","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","metadata","metadata","metadata","minimum_support","owner","pallet","required_approval","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"invarch_primitives"],[269,"dyn_clone::sealed"],[270,"core::clone"],[271,"parity_scale_codec::error"],[272,"core::result"],[273,"parity_scale_codec::codec"],[274,"parity_scale_codec::codec"],[275,"parity_scale_codec::codec"],[276,"core::fmt"],[277,"core::fmt"],[278,"core::any"],[279,"scale_info::ty"]],"d":["","","","Child IP (Id of the immediate parent, Account Id of the â€¦","Core IP Set struct","IPF Info","Normal or replica IPS","Normal IPS (original)","Represents 100%","Voting weight of an IPT","Parent IP (Account Id of itself)","Entity is parent or child?","IP Replica (Id of the original IP)","","","Represents 0% - 99% inclusive","","","","","","","","","IPS parentage","Original IPF author","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","IPF data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","IPS metadata","IPF metadata","","Aye vote percentage required to execute a multisig call.","IPF owner","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[7,0,0,4,0,0,0,6,3,0,4,0,6,0,7,3,3,4,6,7,8,9,10,11,8,9,3,4,6,7,8,9,10,11,3,4,6,7,8,9,10,11,3,4,6,7,8,9,10,11,3,4,6,7,8,9,10,11,9,3,4,6,7,8,9,10,11,3,4,6,7,8,9,10,11,3,4,6,7,8,9,10,11,3,4,6,7,8,9,10,11,3,4,6,7,8,9,10,11,3,4,6,7,8,9,10,11,3,3,3,4,4,4,6,6,6,7,7,7,8,8,8,9,9,9,10,10,10,11,11,11,3,4,6,7,8,9,10,11,3,4,6,7,8,9,10,11,3,4,6,7,8,9,10,11,3,4,6,7,8,9,10,11,8,11,10,3,4,6,7,8,9,10,11,3,4,6,7,8,9,10,11,8,9,10,8,9,11,8,3,4,6,7,8,9,10,11,3,4,6,7,8,9,10,11,3,4,6,7,8,9,10,11,3,4,6,7,8,9,10,11,3,4,6,7,8,9,10,11,3,4,6,7,8,9,10,11,3,4,6,7,8,9,10,11,3,4,6,7,8,9,10,11,3,4,6,7,8,9,10,11,3,4,6,7,8,9,10,11],"f":"````````````````{{cb}d{}}0000000``{ce{}{}}000000000000000{ff}{{{h{ce}}}{{h{ce}}}jj}{{{l{c}}}{{l{c}}}j}{{{n{c}}}{{n{c}}}j}{{{A`{ce}}}{{A`{ce}}}jj}{{{Ab{ceg}}}{{Ab{ceg}}}jjj}{{{Ad{ce}}}{{Ad{ce}}}jj}{{{Af{c}}}{{Af{c}}}j}{{ce}d{}{}}0000000`{c{{Aj{fAh}}}Al}{c{{Aj{{h{eg}}Ah}}}AlAnAn}{c{{Aj{{l{e}}Ah}}}AlAn}{c{{Aj{{n{e}}Ah}}}AlAn}{c{{Aj{{A`{eg}}Ah}}}AlAnAn}{c{{Aj{{Ab{egi}}Ah}}}AlAnAnAn}{c{{Aj{{Ad{eg}}Ah}}}AlAnAn}{c{{Aj{{Af{e}}Ah}}}AlAn}{{{Bb{B`}}}{{Aj{cAh}}}{}}0000000{{Bd{Bb{B`}}}{{Aj{cAh}}}{}}0000000{{Bdc}{{Aj{eAh}}}Al{}}0000000{{fc}d{BfBh}}{{{h{ce}}g}dBjBj{BfBh}}{{{l{c}}e}dBj{BfBh}}{{{n{c}}e}dBj{BfBh}}{{{A`{ce}}g}dBjBj{BfBh}}{{{Ab{ceg}}i}dBjBjBj{BfBh}}{{{Ad{ce}}g}dBjBj{BfBh}}{{{Af{c}}e}dBj{BfBh}}{{ff}Bl}{{{h{ce}}{h{ce}}}BlBnBn}{{{l{c}}{l{c}}}BlBn}{{{n{c}}{n{c}}}BlBn}{{{A`{ce}}{A`{ce}}}BlBnBn}{{{Ab{ceg}}{Ab{ceg}}}BlBnBnBn}{{{Ad{ce}}{Ad{ce}}}BlBnBn}{{{Af{c}}{Af{c}}}BlBn}{{ce}Bl{}{}}00000000000000000000000{{fC`}Cb}{{{h{ce}}C`}CbCdCd}{{{l{c}}C`}CbCd}{{{n{c}}C`}CbCd}{{{A`{ce}}C`}CbCdCd}{{{Ab{ceg}}C`}CbCdCdCd}{{{Ad{ce}}C`}CbCdCd}{{{Af{c}}C`}CbCd}{cc{}}0000000{ce{}{}}000000000000000```00000000{{}Cf}0000000```````{fCf}{{{h{ce}}}CfBjBj}{{{l{c}}}CfBj}{{{n{c}}}CfBj}{{{A`{ce}}}CfBjBj}{{{Ab{ceg}}}CfBjBjBj}{{{Ad{ce}}}CfBjBj}{{{Af{c}}}CfBj}{{c{Bb{B`}}}{{Ch{B`}}}{}}0000000::::::::{c{{Aj{e}}}{}{}}000000000000000{cCj{}}0000000{{}Cl}0000000========================","c":[],"p":[[5,"Private",269],[1,"unit"],[6,"OneOrPercent",0],[6,"Parentage",0],[10,"Clone",270],[6,"IpsType",0],[6,"BoolOrWasm",0],[5,"CoreInfo",0],[5,"IpfInfo",0],[5,"SubTokenInfo",0],[5,"CallInfo",0],[5,"Error",271],[6,"Result",272],[10,"Input",273],[10,"Decode",273],[1,"u8"],[1,"slice"],[1,"u32"],[10,"Output",273],[10,"Sized",274],[10,"Encode",273],[1,"bool"],[10,"PartialEq",275],[5,"Formatter",276],[8,"Result",276],[10,"Debug",276],[1,"usize"],[5,"Vec",277],[5,"TypeId",278],[5,"Type",279]],"b":[]}],\
["pallet_checked_inflation",{"doc":"Checked Inflation Pallet","t":"PPKGPEMCCCPPKGPNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNIRGKRIRRGGPIRPIIPPIPPFRRIINNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNCNNNNNNNNNNNNNNEEENNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNOOOOOOOOOOOOHHFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFKNNNNNNNMNNNNMNNNNNNN","n":["FixedPerEra","FixedYearly","GetInflation","InflationMethod","Rate","WeightInfo","get_inflation_args","inflation","pallet","weights","FixedPerEra","FixedYearly","GetInflation","InflationMethod","Rate","blake2_128","blake2_128_concat","blake2_256","borrow","borrow_mut","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","encode_to","from","from_mut","from_mut","from_ref","from_ref","get_inflation_args","get_inflation_args","identity","into","into_mut","into_ref","size_hint","to_keyed_vec","try_from","try_into","twox_128","twox_256","twox_64_concat","type_id","type_info","unchecked_into","unique_saturated_into","vzip","BalanceOf","BlocksPerEra","Call","Config","Currency","CurrentEra","DealWithInflation","ErasPerYear","Error","Event","HaltChanged","Halted","Inflation","InflationMinted","Module","NegativeImbalanceOf","NewEra","NewYear","NextEraStartingBlock","NoHaltChange","OverInflationDetected","Pallet","RuntimeEvent","WeightInfo","YearStartIssuance","YearlyInflationPerEra","__clone_box","__clone_box","__clone_box","before_all_runtime_migrations","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","count","crate_version","current_era","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deposit_event","dispatch_bypass_filter","dispatchables","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","halt_unhalt_pallet","halt_unhalt_pallet","identity","identity","identity","index","inflation_per_era","infos","integrity_test","internal_halt_unhalt","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","is_feeless","is_halted","mint","module_name","name","name_hash","new_call_variant_halt_unhalt_pallet","new_call_variant_set_first_year_supply","next_era_starting_block","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_initialize","on_runtime_upgrade","set_first_year_supply","set_first_year_supply","size_hint","size_hint","size_hint","storage_info","storage_types","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","warnings","whitelisted_storage_keys","with_weight","year_start_issuance","halt","current_issuance","current_issuance","era","expected_issuance","expected_new_issuance","is_halted","minted","next_era_starting_block","next_era_starting_block","starting_issuance","year_start_issuance","halt_unhalt_pallet","set_first_year_supply","CurrentEra","Halted","NextEraStartingBlock","YearStartIssuance","YearlyInflationPerEra","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","SubstrateWeight","WeightInfo","borrow","borrow_mut","from","from_mut","from_mut","from_ref","from_ref","halt_unhalt_pallet","halt_unhalt_pallet","into","into_mut","into_ref","set_first_year_supply","set_first_year_supply","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"pallet_checked_inflation"],[10,"pallet_checked_inflation::inflation"],[48,"pallet_checked_inflation::pallet"],[259,"pallet_checked_inflation::pallet::Call"],[260,"pallet_checked_inflation::pallet::Event"],[271,"pallet_checked_inflation::pallet::dispatchables"],[273,"pallet_checked_inflation::pallet::storage_types"],[358,"pallet_checked_inflation::weights"],[380,"alloc::vec"],[381,"parity_scale_codec::error"],[382,"core::result"],[383,"parity_scale_codec::codec"],[384,"parity_scale_codec::codec"],[385,"core::any"],[386,"scale_info::ty"],[387,"dyn_clone::sealed"],[388,"sp_weights::weight_v2"],[389,"frame_support::traits::metadata"],[390,"frame_support::dispatch"],[391,"core::fmt"],[392,"core::fmt"],[393,"frame_support::dispatch"],[394,"sp_storage"],[395,"frame_support::dispatch"]],"d":["The inflation is a fixed amount per era.","The inflation is a fixed amount per year.","Getter trait for the inflation amount to be minted in each â€¦","Inflation methods.","The inflation is calculated as a percentage (<code>Perbill</code>) of â€¦","","Returns the inflation amount to be minted per era.","Available inflation methods and resulting inflation amount â€¦","The <code>pallet</code> module in each FRAME pallet hosts the most â€¦","Autogenerated weights for <code>pallet_checked_inflation</code>","The inflation is a fixed amount per era.","The inflation is a fixed amount per year.","Getter trait for the inflation amount to be minted in each â€¦","Inflation methods.","The inflation is calculated as a percentage (<code>Perbill</code>) of â€¦","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Returns the inflation amount to be minted per era.","Returns the inflation amount to be minted per era based on â€¦","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","The balance type of this pallet.","Number of blocks per era.","Contains a variant per dispatchable extrinsic that this â€¦","Configuration trait of this pallet.","The currency (token) used in this pallet.","The current era. Starts from 1 and is reset every year.","The <code>NegativeImbalanceOf</code> the currency, i.e. the amount of â€¦","Number of eras per year.","The <code>Error</code> enum of this pallet.","The <code>Event</code> enum of this pallet","Halt status changed.","Whether the inflation process is halted.","The inflation method and its amount.","Tokens minted due to inflation.","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","The opaque token type for an imbalance. This is returned â€¦","Beginning of a new era.","Beginning of a new year.","Block that the next era starts at.","The pallet is already in the state that the user is trying â€¦","Total supply of the token is higher than expected by â€¦","The <code>Pallet</code> struct, the main type that implements traits â€¦","The overarching event type.","Weight information for extrinsics in this pallet.","Total token supply at the very beginning of the year â€¦","The number of tokens minted at the beginning of every era â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An auto-generated getter for <code>CurrentEra</code>.","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined â€¦","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","Halts or unhalts the inflation process.","See <code>Pallet::halt_unhalt_pallet</code>.","","","","","An auto-generated getter for <code>YearlyInflationPerEra</code>.","","","Internal function to set the halt status to storage.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","An auto-generated getter for <code>Halted</code>.","Internal function for minting tokens to the currency due â€¦","","","","Create a call with the variant <code>halt_unhalt_pallet</code>.","Create a call with the variant <code>set_first_year_supply</code>.","An auto-generated getter for <code>NextEraStartingBlock</code>.","","","","","","","","","This call is used for configuring the inflation mechanism â€¦","See <code>Pallet::set_first_year_supply</code>.","","","","","Auto-generated docs-only module listing all (public and â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An auto-generated getter for <code>YearStartIssuance</code>.","","","","","","","","","","","","","Halts or unhalts the inflation process.","This call is used for configuring the inflation mechanism â€¦","The current era. Starts from 1 and is reset every year.","Whether the inflation process is halted.","Block that the next era starts at.","Total token supply at the very beginning of the year â€¦","The number of tokens minted at the beginning of every era â€¦","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Weights for <code>pallet_checked_inflation</code> using the Substrate â€¦","Weight functions needed for <code>pallet_checked_inflation</code>.","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Storage: CheckedInflation Halted (r:1 w:1) Proof: â€¦","Calls <code>U::from(self)</code>.","","","","Storage: CheckedInflation YearStartIssuance (r:0 w:1) â€¦","","","","","",""],"i":[6,6,0,0,6,0,1,0,0,0,6,6,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,1,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,23,0,0,23,0,23,23,0,0,22,0,23,22,0,0,22,22,0,26,22,0,23,23,0,0,21,22,24,21,26,22,24,26,22,24,26,22,24,21,26,22,24,21,26,22,24,21,22,24,21,22,24,21,21,21,21,26,22,24,26,22,24,26,22,24,26,22,24,21,24,0,26,22,24,21,22,24,21,21,21,22,22,22,24,24,24,21,26,22,24,21,26,22,24,21,21,26,26,22,22,24,24,21,21,26,26,22,22,24,24,24,24,24,24,24,21,24,26,22,24,21,21,21,21,21,21,26,22,24,21,26,22,24,21,26,22,24,24,21,21,21,21,21,24,24,21,21,21,21,21,21,21,21,21,21,24,26,22,24,21,0,26,22,24,21,22,24,21,26,22,24,21,26,22,24,0,0,0,26,22,24,26,22,24,26,22,24,21,26,22,24,26,22,24,21,26,22,24,21,26,22,24,21,26,22,24,0,21,26,21,42,43,44,45,44,43,46,43,47,45,47,43,0,0,0,0,0,0,0,48,49,50,51,52,48,49,50,51,52,48,49,50,51,52,48,48,49,49,50,50,51,51,52,52,48,48,49,49,50,50,51,51,52,52,48,49,50,51,52,48,49,50,51,52,48,49,50,51,52,48,49,50,51,52,48,49,50,51,52,48,49,50,51,52,48,49,50,51,52,48,49,50,51,52,48,49,50,51,52,0,0,53,53,53,53,53,53,53,54,53,53,53,53,54,53,53,53,53,53,53,53],"f":"``````{{bd}}````````{c{{h{f}}}{}}{c{{j{f}}}{}}1{ce{}{}}0{c{{A`{{l{e}}n}}}AbAd}{{{Af{f}}}{{A`{cn}}}{}}{{d{Af{f}}}{{A`{cn}}}{}}{{dc}{{A`{en}}}Ab{}}{{{l{c}}e}AhAj{AlAn}}{cc{}}60069{{ld}}8777{{{l{c}}}B`Aj}{{c{Af{f}}}{{j{f}}}{}}{c{{A`{e}}}{}{}}0<<;{cBb{}}{{}Bd}<<<``````````````````````````{{cBf}Ah{}}00{{}Bh}{c{{h{f}}}{}}00{c{{j{f}}}{}}00111{ce{}{}}0000000{{{Bj{c}}}{{Bj{c}}}{}}{{{Bl{c}}}{{Bl{c}}}Bn}{{{C`{c}}}{{C`{c}}}Bn}{{ce}Ah{}{}}00{{}B`}{{}Cb}{{}d}{{}c{}}{c{{A`{{Cd{e}}n}}}Ab{}}{c{{A`{{Bl{e}}n}}}AbBn}{c{{A`{{C`{e}}n}}}AbBn}{{{Af{f}}}{{A`{cn}}}{}}00{{d{Af{f}}}{{A`{cn}}}{}}00{{dc}{{A`{en}}}Ab{}}00{{{Bl{c}}}AhBn}{{{C`{c}}e}CfBn{}}`{{{Cd{c}}e}Ah{}{AlAn}}{{{Bl{c}}e}AhBn{AlAn}}{{{C`{c}}e}AhBn{AlAn}}{{{Bj{c}}{Bj{c}}}Ch{}}{{{Bl{c}}{Bl{c}}}ChBn}{{{C`{c}}{C`{c}}}ChBn}{{ce}Ch{}{}}00000000{{{Bj{c}}Cj}Cl{}}{{{Cd{c}}Cj}ClBn}{{{Bl{c}}Cj}ClBn}{{{C`{c}}Cj}ClBn}{cc{}}0000{ce{}{}}10011001100101{{{C`{c}}}fBn}{{}{{Af{f}}}}{{{C`{c}}}CnBn}{{}{{Af{Cn}}}}{{{C`{c}}}D`Bn}{{{Db{c}}Ch}DdBn}`{c{{j{f}}}{}}00{{}B`}{{}}{{}{{j{Df}}}}{{}Ah}{ChAh}<<<<<<<<<<<<{{{C`{c}}e}ChBn{}}{{}Ch}3{{}Cn}0{{}{{h{f}}}}{Ch{{C`{c}}}Bn}{{}{{C`{c}}}Bn}{{}{{Dh{c}}}Bn}{{{Dh{c}}}AhBn}{{}Dj}1:{{{Dh{c}}Bh}BhBn}{{{Dh{c}}}BhBn}0{{}Bh}{{{Db{c}}}DdBn}`{{{Cd{c}}}B`{}}{{{Bl{c}}}B`Bn}{{{C`{c}}}B`Bn}{{}{{j{Dl}}}}`{{c{Af{f}}}{{j{f}}}{}}00{ce{}{}}00{c{{A`{e}}}{}{}}0000000```{c{{h{f}}}{}}00000{c{{j{f}}}{}}00{cBb{}}000{{}Bd}00555555555555`{{}{{j{Dn}}}}{{cBh}{{Eb{E`}}}{}}{{}}````````````{ChAh}{{}Ah}`````::::::::::{cc{}}0000;0;0;0;0;00;;00;0;0;;;;;;;;;;;;;;;;::::::::::77777;;;;;;;;;;;;;;;``;;0;0;0{{}Bh}0<<<00;;8<<<","c":[62],"p":[[10,"GetInflation",10],[1,"u32"],[1,"u8"],[1,"array"],[5,"Vec",380],[6,"InflationMethod",10],[5,"Error",381],[6,"Result",382],[10,"Input",383],[10,"Decode",383],[1,"slice"],[1,"unit"],[10,"Encode",383],[10,"Output",383],[10,"Sized",384],[1,"usize"],[5,"TypeId",385],[5,"Type",386],[5,"Private",387],[5,"Weight",388],[5,"Pallet",48],[6,"Event",48],[10,"Config",48],[6,"Call",48],[5,"CrateVersion",389],[6,"Error",48],[8,"DispatchResultWithPostInfo",390],[1,"bool"],[5,"Formatter",391],[8,"Result",391],[1,"str"],[5,"DispatchInfo",390],[8,"OriginFor",392],[8,"DispatchResult",390],[5,"PalletInfoData",389],[8,"BlockNumberFor",392],[5,"StorageVersion",389],[5,"StorageInfo",393],[5,"TrackedStorageKey",394],[5,"PostDispatchInfo",390],[5,"DispatchErrorWithPostInfo",395],[15,"halt_unhalt_pallet",259],[15,"InflationMinted",260],[15,"OverInflationDetected",260],[15,"NewEra",260],[15,"HaltChanged",260],[15,"NewYear",260],[5,"CurrentEra",273],[5,"NextEraStartingBlock",273],[5,"YearStartIssuance",273],[5,"YearlyInflationPerEra",273],[5,"Halted",273],[5,"SubstrateWeight",358],[10,"WeightInfo",358]],"b":[[200,"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E"],[201,"impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E"]]}],\
["pallet_inv4",{"doc":"Pallet INV4","t":"EFECCCCCCCCCCKMMHGGKPPRPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNMMNNNNNNNNNNNNNNNNNNNIIFNNNNNNNNNNNNNNNNNNISFINOONNNNNNNNNNNNNNNNOONNNNNNNNNNNOOOONOONNNNNNNNNNNNGPFNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNRIPGPPIKIPRRIIPRIRGGPRPPRRPRPPIIPPPPPPPPIPPPIFRPRRRRRSRRNNNNONNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNNNOONNENNNNNNNNNNNNNNNNNNNNPNONPNNNNCNNNNNNNPNPNNNNNNNNNEEENNNNNNNNNNNNNNNNNNNNNNNNNPNNNNCNNNPOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOHHHHHHHHFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPRIKRRPPFGIIRNNMNMNONNNNNNNNNNMNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNONNNNNNNMNNNNNNNNNNNNNNNNNNNNFKNNMNMNNNNNNNNNMNMNMNMNNNNNNMNNMN","n":["CoreAccountDerivation","INV4Lookup","WeightInfo","account_derivation","dispatch","fee_handling","inv4_core","lookup","multisig","origin","pallet","voting","weights","CoreAccountDerivation","core_location","derive_core_account","dispatch_call","FeeAsset","FeeAssetNegativeImbalance","MultisigFeeHandler","Native","Native","Pre","Relay","Relay","__clone_box","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","encode_to","eq","equivalent","equivalent","equivalent","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","handle_creation_fee","identity","into","into","into_mut","into_mut","into_ref","into_ref","max_encoded_len","post_dispatch","pre_dispatch","size_hint","to_keyed_vec","to_owned","try_from","try_from","try_into","try_into","twox_128","twox_256","twox_64_concat","type_id","type_id","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","CoreIndexOf","CoreMetadataOf","INV4Lookup","borrow","borrow_mut","from","from_mut","from_mut","from_ref","from_ref","into","into_mut","into_ref","lookup","try_from","try_into","type_id","unchecked_into","unique_saturated_into","unlookup","vzip","BoundedCallBytes","MAX_SIZE","MultisigOperation","MultisigOperationOf","__clone_box","actual_call","actual_call","blake2_128","blake2_128_concat","blake2_256","borrow","borrow_mut","clone","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","encode_to","eq","equivalent","equivalent","equivalent","fee_asset","fee_asset","fmt","from","from_mut","from_mut","from_ref","from_ref","identity","into","into_mut","into_ref","max_encoded_len","metadata","metadata","original_caller","original_caller","size_hint","tally","tally","to_keyed_vec","to_owned","try_from","try_into","twox_128","twox_256","twox_64_concat","type_id","type_info","unchecked_into","unique_saturated_into","vzip","INV4Origin","Multisig","MultisigInternalOrigin","__clone_box","__clone_box","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","encode","encode_to","encode_to","ensure_multisig","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","id","identity","identity","into","into","into_mut","into_mut","into_ref","into_ref","max_encoded_len","max_encoded_len","new","size_hint","size_hint","to_account_id","to_keyed_vec","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_into","try_into","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","using_encoded","vzip","vzip","AssetsProvider","BalanceOf","Burned","Call","CallFeePaymentFailed","CallHasTooFewBytes","CallOf","Config","CoreByAccount","CoreCreated","CoreCreationFee","CoreId","CoreInfoOf","CoreMembers","CoreNotFound","CoreSeedBalance","CoreStorage","Currency","Error","Event","FailedDecodingCall","FeeCharger","IncompleteVoteCleanup","MaxCallLengthExceeded","MaxCallSize","MaxCallers","MaxCallersExceeded","MaxMetadata","MaxMetadataExceeded","Minted","Module","Multisig","Multisig","MultisigCallAlreadyExists","MultisigCallNotFound","MultisigCanceled","MultisigExecuted","MultisigVoteAdded","MultisigVoteStarted","MultisigVoteWithdrawn","NextCoreId","NoAvailableCoreId","NoPermission","NotAVoter","Origin","Pallet","ParaId","ParametersSet","RelayAssetId","RelayCoreCreationFee","RuntimeCall","RuntimeEvent","RuntimeOrigin","STORAGE_VERSION","Tokens","WeightInfo","__clone_box","__clone_box","__clone_box","access_poll","account","add_member","as_ongoing","before_all_runtime_migrations","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel_multisig_proposal","cancel_multisig_proposal","classes","clone","clone","clone","clone_into","clone_into","clone_into","core_by_account","core_location","core_members","core_storage","count","crate_version","create_core","create_core","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deposit_event","derive_core_account","dispatch_bypass_filter","dispatchables","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","frozen_tokens","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","identity","identity","index","infos","inner_cancel_multisig_proposal","inner_create_core","inner_operate_multisig","inner_set_parameters","inner_token_burn","inner_token_mint","inner_vote_multisig","inner_withdraw_vote_multisig","integrity_test","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","inv4_core","is_asset_frozen","is_feeless","lookup_address","lookup_core","metadata","minimum_support","minimum_support_and_required_approval","module_name","multisig","multisig","name","name_hash","new_call_variant_cancel_multisig_proposal","new_call_variant_create_core","new_call_variant_operate_multisig","new_call_variant_set_parameters","new_call_variant_token_burn","new_call_variant_token_mint","new_call_variant_vote_multisig","new_call_variant_withdraw_vote_multisig","next_core_id","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","operate_multisig","operate_multisig","remove_member","required_approval","set_parameters","set_parameters","size_hint","size_hint","size_hint","storage_info","storage_types","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","token_burn","token_burn","token_mint","token_mint","try_access_poll","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vote_multisig","vote_multisig","vzip","vzip","vzip","vzip","warnings","whitelisted_storage_keys","with_weight","withdraw_vote_multisig","withdraw_vote_multisig","amount","amount","aye","call","call_hash","call_hash","call_hash","core_id","core_id","core_id","creation_fee_asset","fee_asset","frozen_tokens","metadata","metadata","metadata","minimum_support","minimum_support","required_approval","required_approval","target","target","amount","amount","call","call_hash","call_hash","call_hash","call_hash","call_hash","core_account","core_id","core_id","core_id","core_id","core_id","core_id","core_id","core_id","core_id","current_votes","executor_account","executor_account","executor_account","executor_account","frozen_tokens","metadata","metadata","minimum_support","minimum_support","required_approval","required_approval","result","target","target","voter","voter","voter","voter","votes_added","votes_added","votes_removed","cancel_multisig_proposal","create_core","operate_multisig","set_parameters","token_burn","token_mint","vote_multisig","withdraw_vote_multisig","CoreByAccount","CoreMembers","CoreStorage","Multisig","NextCoreId","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","Aye","Aye","Class","Core","CustomPolling","Index","Moment","Nay","Nay","Tally","Vote","VoteRecord","Votes","Votes","__clone_box","__clone_box","access_poll","approval","as_ongoing","ayes","ayes","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow_mut","borrow_mut","classes","clone","clone","clone_into","clone_into","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","dummy","encode_to","encode_to","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_parts","from_ref","from_ref","from_ref","from_ref","identity","identity","into","into","into_mut","into_mut","into_ref","into_ref","max_encoded_len","max_encoded_len","nays","new","process_vote","records","size_hint","size_hint","support","to_keyed_vec","to_keyed_vec","to_owned","to_owned","try_access_poll","try_from","try_from","try_into","try_into","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","SubstrateWeight","WeightInfo","borrow","borrow_mut","cancel_multisig_proposal","cancel_multisig_proposal","create_core","create_core","from","from_mut","from_mut","from_ref","from_ref","into","into_mut","into_ref","operate_multisig","operate_multisig","set_parameters","set_parameters","token_burn","token_burn","token_mint","token_mint","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vote_multisig","vote_multisig","vzip","withdraw_vote_multisig","withdraw_vote_multisig"],"q":[[0,"pallet_inv4"],[13,"pallet_inv4::account_derivation"],[16,"pallet_inv4::dispatch"],[17,"pallet_inv4::fee_handling"],[85,"pallet_inv4::inv4_core"],[87,"pallet_inv4::lookup"],[106,"pallet_inv4::multisig"],[161,"pallet_inv4::origin"],[252,"pallet_inv4::pallet"],[535,"pallet_inv4::pallet::Call"],[557,"pallet_inv4::pallet::Event"],[597,"pallet_inv4::pallet::dispatchables"],[605,"pallet_inv4::pallet::storage_types"],[690,"pallet_inv4::voting"],[800,"pallet_inv4::weights"],[834,"staging_xcm::v3::junctions"],[835,"frame_support::dispatch"],[836,"dyn_clone::sealed"],[837,"alloc::vec"],[838,"parity_scale_codec::error"],[839,"core::result"],[840,"parity_scale_codec::codec"],[841,"parity_scale_codec::codec"],[842,"core::fmt"],[843,"core::fmt"],[844,"core::option"],[845,"sp_runtime::traits"],[846,"sp_runtime::traits"],[847,"sp_runtime::transaction_validity"],[848,"core::any"],[849,"scale_info::ty"],[850,"sp_runtime::traits"],[851,"parity_scale_codec::codec"],[852,"core::fmt"],[853,"frame_system::pallet_prelude"],[854,"frame_support::traits::voting"],[855,"sp_weights::weight_v2"],[856,"frame_system::pallet_prelude"],[857,"frame_support::traits::metadata"],[858,"bounded_collections::bounded_vec"],[859,"sp_arithmetic::per_things"],[860,"frame_support::dispatch"],[861,"sp_runtime::multiaddress"],[862,"frame_support::traits::metadata"],[863,"sp_runtime"],[864,"frame_support::dispatch"]],"d":["","StaticLookup implementor using MultiAddress::Index for â€¦","","Core Account Derivation.","Dispatches calls internally, charging fees to the multisig â€¦","MultisigFeeHandler trait.","Core creation and internal management.","Custom account lookup implementation.","Multisig Operations.","Custom Multisig Origin (<code>INV4Origin</code>).","The <code>pallet</code> module in each FRAME pallet hosts the most â€¦","Voting Mechanism.","Autogenerated weights for <code>pallet_inv4</code>","Trait providing the XCM location and the derived account â€¦","Specifies a coreâ€™s location.","Derives the coreâ€™s AccountId.","Dispatch a call executing pre/post dispatch for proper fee â€¦","Represents the asset to be used by the multisig for paying â€¦","Represents a potential negative asset balance incurred â€¦","Fee handler trait.","","","Type returned by <code>pre_dispatch</code> - implementation dependent.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Charges the fee for creating the core (multisig).","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Charges the call dispatching fee from the multisig â€¦","Checks if the fee can be paid using the selected asset.","","","","","","","","","","","","","","","","","","","","","","StaticLookup implementor using MultiAddress::Index for â€¦","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Maximum size of call we store is 50kb.","Details of a multisig operation.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Origin representing a core by its id.","","Internal origin for identifying the multisig CoreId.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ensures the passed origin is a multisig, returning â€¦","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Provider of assets functionality for the voting tokens","","A coreâ€™s voting token was burned","Dispatch functions","Multisig fee payment failed, probably due to lack of funds â€¦","Failed to extract metadata from a call","","Configuration trait of this pallet.","Mapping of account id -&gt; core id.","A core was created","Fee for creating a core in the native token","Integer id type for the core id","","Stores a list of members for each Core. This storage â€¦","Core not found","Base voting token balance to give callers when creating a â€¦","Core info storage.","Currency type","Errors for INV4 pallet","The <code>Event</code> enum of this pallet","Failed to decode stored multisig call","Implementation of the fee handler for both core creation â€¦","Incomplete vote cleanup","Call is too long","Maximum size of a multisig proposal call","The maximum numbers of caller accounts on a single â€¦","Maximum amount of callers exceeded","The maximum length of the core metadata and the metadata â€¦","Maximum metadata length exceeded","A coreâ€™s voting token was minted","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","Details of a multisig call.","","Multisig proposal already exists and is being voted on","Multisig call not found","A multisig proposal was cancelled","A multisig proposal passed and itâ€™s call was executed","A vote was added to an existing multisig proposal","A multisig proposal has started, it needs more votes to â€¦","A vote was removed from an existing multisig proposal","Next available Core ID.","No available Core ID","The caller has no permissions in the core","Cannot withdraw a vote on a multisig transaction you have â€¦","The custom core origin.","The <code>Pallet</code> struct, the main type that implements traits â€¦","ParaId of the parachain, to be used for deriving the core â€¦","A core had parameters changed","Relay token asset id in the runtime","Fee for creating a core in the relay token","The overarching call type","Runtime event type","The outer <code>Origin</code> type.","The current storage version.","Provider of balance tokens in the runtime","Weight info for dispatchable calls","","","","","IPS parentage","","","","","","","","","","","","","","","","","","","","","Cancel an existing multisig proposal (called by a core â€¦","See <code>Pallet::cancel_multisig_proposal</code>.","","","","","","","","An auto-generated getter for <code>CoreByAccount</code>.","Core location is defined as a plurality within the â€¦","An auto-generated getter for <code>CoreMembers</code>.","An auto-generated getter for <code>CoreStorage</code>.","","","Create a new core","See <code>Pallet::create_core</code>.","","","","","","","","","","","","","","","HashedDescription of the core location from the â€¦","","Auto-generated docs-only module listing all defined â€¦","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","Inner function for the cancel_multisig_proposal call.","Inner function for the create_core call.","Inner function for the operate_multisig call.","Inner function for the set_parameters call.","Inner function for the token_burn call.","Inner function for the token_mint call.","Inner function for the vote_multisig call.","Inner function for the withdraw_token_multisig call.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Checks if the voting asset is frozen.","","Matches <code>MultiAddress</code> to allow for a <code>MultiAddress::Index</code> â€¦","Queries <code>CoreStorage</code> to retrieve the AccountId of a core.","IPS metadata","Aye vote percentage required to execute a multisig call.","Returns the minimum support and required approval â€¦","","","An auto-generated getter for <code>Multisig</code>.","","","Create a call with the variant <code>cancel_multisig_proposal</code>.","Create a call with the variant <code>create_core</code>.","Create a call with the variant <code>operate_multisig</code>.","Create a call with the variant <code>set_parameters</code>.","Create a call with the variant <code>token_burn</code>.","Create a call with the variant <code>token_mint</code>.","Create a call with the variant <code>vote_multisig</code>.","Create a call with the variant <code>withdraw_vote_multisig</code>.","An auto-generated getter for <code>NextCoreId</code>.","","","","","","","","Create a new multisig proposal, auto-executing if caller â€¦","See <code>Pallet::operate_multisig</code>.","","","Change core parameters incl. voting thresholds and token â€¦","See <code>Pallet::set_parameters</code>.","","","","","Auto-generated docs-only module listing all (public and â€¦","","","","","","","Burn the coreâ€™s voting token from a target (called by a â€¦","See <code>Pallet::token_burn</code>.","Mint the coreâ€™s voting token to a target (called by a â€¦","See <code>Pallet::token_mint</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Vote on an existing multisig proposal, auto-executing if â€¦","See <code>Pallet::vote_multisig</code>.","","","","","","","","Remove callerâ€™s vote from an existing multisig proposal","See <code>Pallet::withdraw_vote_multisig</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Cancel an existing multisig proposal (called by a core â€¦","Create a new core","Create a new multisig proposal, auto-executing if caller â€¦","Change core parameters incl. voting thresholds and token â€¦","Burn the coreâ€™s voting token from a target (called by a â€¦","Mint the coreâ€™s voting token to a target (called by a â€¦","Vote on an existing multisig proposal, auto-executing if â€¦","Remove callerâ€™s vote from an existing multisig proposal","Mapping of account id -&gt; core id.","Stores a list of members for each Core. This storage â€¦","Core info storage.","Details of a multisig call.","Next available Core ID.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Aggregated votes for an ongoing poll by members of a core.","Represents a proposal vote within a multisig context.","Type alias for <code>Vote</code> with <code>BalanceOf</code>.","","","","","","","<code>Some</code> if the referendum <code>index</code> can be voted on, along with â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Allows for building a <code>Tally</code> manually.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Check if a vote is valid and add the memberâ€™s total â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Weights for <code>pallet_inv4</code> using the Substrate node and â€¦","Weight functions needed for <code>pallet_inv4</code>.","","","","Storage: INV4 Multisig (r:0 w:1) Proof: INV4 Multisig â€¦","","Storage: INV4 NextCoreId (r:1 w:1) Proof: INV4 NextCoreId â€¦","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Calls <code>U::from(self)</code>.","","","","Storage: CoreAssets Accounts (r:1 w:0) Proof: CoreAssets â€¦","","Storage: INV4 CoreStorage (r:1 w:1) Proof: INV4 â€¦","","Storage: CoreAssets Accounts (r:1 w:1) Proof: CoreAssets â€¦","","Storage: CoreAssets Accounts (r:1 w:1) Proof: CoreAssets â€¦","","","","","","","Storage: INV4 Multisig (r:1 w:1) Proof: INV4 Multisig â€¦","","","Storage: INV4 Multisig (r:1 w:1) Proof: INV4 Multisig â€¦"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,75,75,0,0,0,0,20,2,76,20,2,2,2,2,2,20,2,20,2,2,2,2,2,2,2,2,2,2,2,2,2,20,2,20,20,2,2,20,20,2,2,76,2,20,2,20,2,20,2,2,76,76,2,2,2,20,2,20,2,2,2,2,20,2,2,20,2,20,2,20,2,0,0,0,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,0,0,0,0,30,64,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,64,30,30,30,30,30,30,30,30,30,30,30,30,64,30,64,30,30,64,30,30,30,30,30,30,30,30,30,30,30,30,30,0,36,0,36,38,36,38,36,38,36,38,36,38,36,38,36,38,36,38,36,38,36,38,36,38,36,38,38,36,38,0,36,38,36,36,36,38,38,38,36,38,36,38,36,36,38,38,36,36,38,38,38,36,38,36,38,36,38,36,38,36,38,38,36,38,38,36,38,36,38,36,38,36,38,36,38,36,38,36,38,36,38,36,38,36,38,36,38,38,36,38,37,0,49,0,56,56,0,0,0,49,37,37,0,0,56,37,0,37,0,0,56,37,56,56,37,37,56,37,56,49,0,0,78,56,56,49,49,49,49,49,0,56,56,56,0,0,37,49,37,37,37,37,37,0,37,37,48,49,50,48,52,48,48,48,49,56,50,49,56,50,49,56,50,48,49,56,50,48,49,56,50,48,50,48,48,49,50,48,49,50,48,48,48,48,48,48,48,50,48,49,56,50,49,56,50,49,56,50,49,56,50,48,48,50,0,49,56,50,48,49,50,48,48,48,49,49,49,50,50,50,48,49,56,50,48,49,56,50,48,48,49,49,56,56,50,50,48,48,49,49,56,56,50,50,52,50,50,50,50,50,49,56,50,48,48,48,48,48,48,48,48,48,48,48,48,49,56,50,48,49,56,50,48,49,56,50,0,48,50,48,48,52,52,48,48,0,48,48,48,50,50,50,50,50,50,50,50,48,48,48,48,48,48,48,48,48,50,48,52,48,50,49,56,50,48,0,49,56,50,48,49,50,48,50,48,50,48,48,49,56,50,48,49,56,50,0,0,0,49,56,50,49,56,50,49,56,50,48,49,56,50,49,56,50,48,49,56,50,48,49,56,50,48,50,48,49,56,50,0,48,56,48,50,79,80,81,82,81,83,84,82,81,83,85,82,86,85,82,86,85,86,85,86,79,80,87,88,89,90,91,92,89,93,94,94,95,87,88,90,91,92,89,93,91,90,91,92,89,95,94,95,94,95,94,95,89,87,88,90,91,92,89,90,91,92,0,0,0,0,0,0,0,0,0,0,0,0,0,96,97,98,99,100,96,97,98,99,100,96,97,98,99,100,96,96,97,97,98,98,99,99,100,100,96,96,97,97,98,98,99,99,100,100,96,97,98,99,100,96,97,98,99,100,96,97,98,99,100,96,97,98,99,100,96,97,98,99,100,96,97,98,99,100,96,97,98,99,100,96,97,98,99,100,96,97,98,99,100,101,73,102,0,0,102,102,101,73,0,0,0,0,102,42,73,102,42,102,42,42,42,73,42,73,42,73,42,73,42,73,102,42,73,42,73,42,73,42,73,42,73,42,73,42,42,73,42,73,42,42,42,73,73,73,42,73,42,73,42,42,73,73,42,42,42,73,73,42,73,42,73,42,73,42,73,42,73,42,42,42,42,42,73,42,42,73,42,73,102,42,73,42,73,42,73,42,73,42,73,42,73,42,73,42,73,42,73,42,73,0,0,103,103,104,103,104,103,103,103,103,103,103,103,103,103,104,103,104,103,104,103,104,103,103,103,103,103,103,104,103,103,104,103],"f":"``````````````{{}b}{{}}{df}````````{{ch}j{}}{c{{n{l}}}{}}{c{{A`{l}}}{}}1{ce{}{}}000{dd}{{ce}j{}{}}{c{{Ad{dAb}}}Af}{{{Ah{l}}}{{Ad{cAb}}}{}}{{Aj{Ah{l}}}{{Ad{cAb}}}{}}{{Ajc}{{Ad{eAb}}}Af{}}{{dc}j{AlAn}}{{dd}B`}{{ce}B`{}{}}00{{dBb}Bd}{cc{}}00;;00;0;{{{Bh{Bf}}}j}=<<<<<<{{}Bj}{{d{Bl{c}}BnC`BjCb}{{Ad{jCd}}}{}}{{dBnBj}{{Ad{cCd}}}{}}{dBj}{{c{Ah{l}}}{{A`{l}}}{}}{ce{}{}}{c{{Ad{e}}}{}{}}000{c{{n{l}}}{}}0{c{{A`{l}}}{}}{cCf{}}0{{}Ch}555555```55<<5<5555{c{{Ad{eCj}}}{}{}}5526666````{{ch}j{}}``54577{{{Cl{cegi}}}{{Cl{cegi}}}CnCnCnCn}{{ce}j{}{}}{c{{Ad{{Cl{egik}}Ab}}}AfD`D`D`{}}{{{Ah{l}}}{{Ad{cAb}}}{}}{{Aj{Ah{l}}}{{Ad{cAb}}}{}}{{Ajc}{{Ad{eAb}}}Af{}}{{{Cl{cegi}}k}jDbDbDb{}{AlAn}}{{{Cl{cegi}}{Cl{cegi}}}B`DdDdDdDd}{{ce}B`{}{}}00``{{{Cl{cegi}}Bb}BdDfDfDfDf}{cc{}}{ce{}{}}101{c{{A`{l}}}{}}111{{}Bj}````{{{Cl{cegi}}}BjDbDbDb{}}``{{c{Ah{l}}}{{A`{l}}}{}}4{c{{Ad{e}}}{}{}}0{c{{n{l}}}{}}05{cCf{}}{{}Ch}888```{{ch}j{}}03388339999{{{Dh{c}}}{{Dh{c}}}{CnDj}}{{{Dl{c}}}{{Dl{c}}}{CnDj}}{{ce}j{}{}}0{c{{Ad{{Dh{e}}Ab}}}AfDj}{c{{Ad{{Dl{e}}Ab}}}AfDj}{{{Ah{l}}}{{Ad{cAb}}}{}}0{{Aj{Ah{l}}}{{Ad{cAb}}}{}}0{{Ajc}{{Ad{eAb}}}Af{}}0{{{Dl{c}}}{{A`{l}}}Dj}{{{Dh{c}}e}jDj{AlAn}}{{{Dl{c}}e}jDj{AlAn}}{e{{Ad{{Dl{c}}Dn}}}Dj{}}{{{Dh{c}}{Dh{c}}}B`{DdDj}}{{{Dl{c}}{Dl{c}}}B`{DdDj}}{{ce}B`{}{}}00000{{{Dh{c}}Bb}Bd{DfDj}}{{{Dl{c}}Bb}Bd{DfDj}}{cc{}}00{ce{}{}}101010`{c{{A`{l}}}{}}0111111{{}Bj}0{{}{{Dl{c}}}Dj}{{{Dh{c}}}BjDj}{{{Dl{c}}}BjDj}{{{Dl{c}}}{}Dj}{{c{Ah{l}}}{{A`{l}}}{}}077{c{{Ad{e}}}{}{}}000{c{{n{l}}}{}}00088{cCf{}}0{{}Ch}0;;;;{{{Dl{c}}g}eDj{}{{Eb{{Ah{l}}}{{E`{e}}}}}}<<````````````````````````````````````````````````````````{{ch}j{}}00{{cek}i{}{}Dj{}{{Eb{{Eh{{Ed{g}}{Ef{g}}}}}{{E`{i}}}}}}`{{}j}{{ce}{{Bl{{Ej{{Ed{g}}}}}}}{}{}Dj}{{}El}888{c{{A`{l}}}{}}00999{ce{}{}}0000000{{{En{c}}}fDj}`{{}{{A`{c}}}{}}{{{F`{c}}}{{F`{c}}}{}}{{{Fb{c}}}{{Fb{c}}}Dj}{{{Fd{c}}}{{Fd{c}}}Dj}{{ce}j{}{}}00{cBlFf}{{}b}{{ce}{{Bl{j}}}FfFf}{c{{Bl{{Fh{e}}}}}FfDj}{{}Bj}{{}Fj}{{{En{c}}{Fl{l}}FnFnd}fDj}`{{}c{}}{c{{Ad{{Fb{e}}Ab}}}AfDj}{c{{Ad{{G`{e}}Ab}}}Af{}}{c{{Ad{{Fd{e}}Ab}}}AfDj}{{{Ah{l}}}{{Ad{cAb}}}{}}00{{Aj{Ah{l}}}{{Ad{cAb}}}{}}00{{Ajc}{{Ad{eAb}}}Af{}}00{{{Fb{c}}}jDj}{{}}{{{Fd{c}}e}fDj{}}`{{{Fb{c}}e}jDj{AlAn}}{{{G`{c}}e}j{}{AlAn}}{{{Fd{c}}e}jDj{AlAn}}{{{F`{c}}{F`{c}}}B`{}}{{{Fb{c}}{Fb{c}}}B`Dj}{{{Fd{c}}{Fd{c}}}B`Dj}{{ce}B`{}{}}00000000{{{F`{c}}Bb}Bd{}}{{{Fb{c}}Bb}BdDj}{{{G`{c}}Bb}BdDj}{{{Fd{c}}Bb}BdDj}{cc{}}0000{ce{}{}}01011001101010`{{{Fd{c}}}lDj}{{}{{Ah{l}}}}{{{Fd{c}}}GbDj}{{}{{Ah{Gb}}}}{{{Fd{c}}}GdDj}{c{{A`{l}}}{}}00{{}Bj}{{}{{A`{Gf}}}}{{{En{c}}}fDj}{{{En{c}}{Fl{l}}FnFnd}GhDj}{{{En{c}}{Bl{{Fl{l}}}}dGj}fDj}{{{En{c}}{Bl{{Fl{l}}}}{Bl{Fn}}{Bl{Fn}}{Bl{B`}}}GhDj}{{{En{c}}{Gl{c}}}GhDj}0{{{En{c}}B`}fDj}5{{}j}????????????`{{}{{Bl{B`}}}}{{{Fd{c}}e}B`Dj{}}{GnBl}{{}Bl}``{{}{{Bl{{Ej{FnFn}}}}}}{{}Gb}`{{ce}{{Bl{{H`{g}}}}}FfFfDj}1{{}{{n{l}}}}{{}{{Fd{c}}}Dj}{{{Fl{l}}FnFnd}{{Fd{c}}}Dj}{{{Bl{{Fl{l}}}}dGj}{{Fd{c}}}Dj}{{{Bl{{Fl{l}}}}{Bl{Fn}}{Bl{Fn}}{Bl{B`}}}{{Fd{c}}}Dj}{{{Gl{c}}}{{Fd{c}}}Dj}0{B`{{Fd{c}}}Dj}5{{}}{{{Ef{c}}}jDj}{{}Hb}1{{}j}{{{Ef{c}}El}ElDj}{{{Ef{c}}}ElDj}{{}El}{{{En{c}}{Bl{{Fl{l}}}}dGj}fDj}`4`{{{En{c}}{Bl{{Fl{l}}}}{Bl{Fn}}{Bl{Fn}}{Bl{B`}}}GhDj}`{{{Fb{c}}}BjDj}{{{G`{c}}}Bj{}}{{{Fd{c}}}BjDj}{{}{{A`{Hd}}}}`{{c{Ah{l}}}{{A`{l}}}{}}00{ce{}{}}00{{{En{c}}{Gl{c}}}GhDj}`0`{{cek}{{Ad{iHf}}}{}{}Dj{}{{Eb{{Eh{{Ed{g}}{Ef{g}}}}}{{E`{{Ad{iHf}}}}}}}}{c{{Ad{e}}}{}{}}0000000```{c{{n{l}}}{}}00000{c{{A`{l}}}{}}00{cCf{}}000{{}Ch}0077777777{{{En{c}}B`}fDj}`8888`{{}{{A`{Hh}}}}{{cEl}{{Hl{Hj}}}{}}{{{En{c}}}fDj}```````````````````````````````````````````````````````````````{{}j}{{{Fl{l}}FnFnd}j}{{{Bl{{Fl{l}}}}dGj}j}{{{Bl{{Fl{l}}}}{Bl{Fn}}{Bl{Fn}}{Bl{B`}}}j}{{{Gl{c}}}jDj}0{B`j}5`````{ce{}{}}000000000{cc{}}000010010110101010011001111111111111111{c{{Ad{e}}}{}{}}000000000>>>>>222222222222222``````````````{{ch}j{}}0{{cem}k{}{}{}{}{}{{Eb{{Eh{gic}}}{{E`{k}}}}}}{{{Ed{c}}{Hn{c}}}FnDj}{{ce}{{Bl{{Ej{gc}}}}}{}{}{}}{{{Ed{c}}{Hn{c}}}{{I`{c}}}Dj}`{c{{n{l}}}{}}0{c{{A`{l}}}{}}0119999{{}{{A`{c}}}{}}{{{Ed{c}}}{{Ed{c}}}Dj}{{{Ib{c}}}{{Ib{c}}}Cn}{{ce}j{}{}}0{c{{Ad{{Ed{e}}Ab}}}AfDj}{c{{Ad{{Ib{e}}Ab}}}AfD`}{{{Ah{l}}}{{Ad{cAb}}}{}}0{{Aj{Ah{l}}}{{Ad{cAb}}}{}}0{{Ajc}{{Ad{eAb}}}Af{}}0`{{{Ed{c}}e}jDj{AlAn}}{{{Ib{c}}e}jDb{AlAn}}{{{Ed{c}}{Ed{c}}}B`Dj}{{{Ib{c}}{Ib{c}}}B`Dd}{{ce}B`{}{}}00000{{{Ed{c}}Bb}BdDj}{{{Ib{c}}Bb}BdDf}{cc{}}00{ce{}{}}01{{{I`{c}}{I`{c}}{Id{{Ib{{I`{c}}}}}}}{{Ed{c}}}Dj}2112{c{{A`{l}}}{}}0222222{{}Bj}0`{{{Hn{c}}}{{Ed{c}}}Dj}{{{Ed{c}}{Bl{{Ib{{I`{c}}}}}}}{{Ad{{Ib{{I`{c}}}}Hf}}}Dj}`{{{Ed{c}}}BjDj}{{{Ib{c}}}BjDb}{{{Ed{c}}{Hn{c}}}FnDj}{{c{Ah{l}}}{{A`{l}}}{}}099{{cem}{{Ad{kHf}}}{}{}{}{}{}{{Eb{{Eh{gic}}}{{E`{{Ad{kHf}}}}}}}}{c{{Ad{e}}}{}{}}000{c{{n{l}}}{}}000::{cCf{}}0{{}Ch}0>>>>>>``>>{{}El}0{AjEl}0{cc{}}{ce{}{}}110000{{AjAj}El}03344448861144144","c":[282],"p":[[6,"Junctions",834],[6,"FeeAsset",17],[8,"DispatchResultWithPostInfo",835],[5,"Private",836],[1,"unit"],[1,"u8"],[1,"array"],[5,"Vec",837],[5,"Error",838],[6,"Result",839],[10,"Input",840],[1,"slice"],[1,"u32"],[10,"Output",840],[10,"Sized",841],[1,"bool"],[5,"Formatter",842],[8,"Result",842],[8,"Credit",843],[6,"FeeAssetNegativeImbalance",17],[1,"usize"],[6,"Option",844],[8,"DispatchInfoOf",845],[8,"PostDispatchInfoOf",845],[8,"DispatchResult",846],[6,"TransactionValidityError",847],[5,"TypeId",848],[5,"Type",849],[5,"LookupError",845],[5,"MultisigOperation",106],[10,"Clone",850],[10,"Decode",840],[10,"Encode",840],[10,"PartialEq",851],[10,"Debug",842],[6,"INV4Origin",161],[10,"Config",252],[5,"MultisigInternalOrigin",161],[5,"BadOrigin",845],[17,"Output"],[10,"FnOnce",852],[5,"Tally",690],[8,"BlockNumberFor",853],[6,"PollStatus",854],[1,"tuple"],[5,"Weight",855],[8,"OriginFor",853],[5,"Pallet",252],[6,"Event",252],[6,"Call",252],[10,"EncodeLike",856],[8,"CoreInfoOf",252],[5,"CrateVersion",857],[5,"BoundedVec",858],[5,"Perbill",859],[6,"Error",252],[1,"str"],[5,"DispatchInfo",835],[5,"PalletInfoData",857],[8,"DispatchResult",835],[5,"Box",860],[8,"BalanceOf",252],[6,"MultiAddress",861],[8,"MultisigOperationOf",106],[5,"StorageVersion",857],[5,"StorageInfo",862],[6,"DispatchError",846],[5,"TrackedStorageKey",863],[5,"PostDispatchInfo",835],[5,"DispatchErrorWithPostInfo",846],[8,"Core",690],[8,"Votes",690],[6,"Vote",690],[5,"BoundedBTreeMap",864],[10,"CoreAccountDerivation",13],[10,"MultisigFeeHandler",17],[5,"INV4Lookup",87],[8,"Origin",252],[15,"token_mint",535],[15,"token_burn",535],[15,"vote_multisig",535],[15,"operate_multisig",535],[15,"withdraw_vote_multisig",535],[15,"cancel_multisig_proposal",535],[15,"create_core",535],[15,"set_parameters",535],[15,"Minted",557],[15,"Burned",557],[15,"MultisigExecuted",557],[15,"MultisigVoteStarted",557],[15,"MultisigVoteAdded",557],[15,"MultisigVoteWithdrawn",557],[15,"MultisigCanceled",557],[15,"CoreCreated",557],[15,"ParametersSet",557],[5,"NextCoreId",605],[5,"CoreStorage",605],[5,"CoreByAccount",605],[5,"Multisig",605],[5,"CoreMembers",605],[8,"VoteRecord",690],[10,"CustomPolling",690],[5,"SubstrateWeight",800],[10,"WeightInfo",800]],"b":[]}],\
["pallet_ocif_staking",{"doc":"OCIF Staking pallet","t":"SECCCIRGKPPIIIPPPRIIGGRIIPIPPPIPRRPRPRRPRPRIPIPIPPPPPPPFRRIIPRRPRPPPPPRPPPPPRPNNNONNNNNNNNNNNNNNNNNNNNNPNNNNNNNPNNNNNNNNNNNNNNNNNNNNONCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNONNNNNNNNNNNNNNNNNNNNNONNPNONNNNNNNNNNNNNNNNNNNNNPNNNNNNNNPNPNNCNNNNNNNNNNNNNNEEENNNNNNNNNNNNNNNNNNNNNNNNNNPNPNNNNNNCNNNPOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOHHHHHHHHHHFFFFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFIFFFFFSFFFFNNNNNNNNNNOOONNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNOOONOONNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNFKNNMNMNNNNNNMNNNNMNMNMNMNNNNNNMNMNNMN","n":["LOCK_ID","WeightInfo","pallet","primitives","weights","BalanceOf","BlocksPerEra","Call","Config","CoreAlreadyRegistered","CoreClaimed","CoreEraStake","CoreInfoOf","CoreMetadataOf","CoreNotFound","CoreRegistered","CoreUnregistered","Currency","CurrentEra","Era","Error","Event","ExistentialDeposit","GeneralEraInfo","GeneralStakerInfo","HaltChanged","Halted","Halted","IncorrectEra","InsufficientBalance","Ledger","MaxDescriptionExceeded","MaxDescriptionLength","MaxEraStakeValues","MaxImageExceeded","MaxImageUrlLength","MaxNameExceeded","MaxNameLength","MaxStakersPerCore","MaxStakersReached","MaxUnlocking","MetadataChanged","MinimumStakingAmount","Module","MoveStakeToSameCore","NegativeImbalanceOf","NewEra","NextEraStartingBlock","NoHaltChange","NoPermission","NoStakeAvailable","NotAStaker","NotRegistered","NotUnregisteredCore","NothingToWithdraw","Pallet","PotId","RegisterDeposit","RegisteredCore","RewardAccumulator","RewardAlreadyClaimed","RewardRatio","RuntimeEvent","StakeMoved","StakeThresholdForActiveCore","Staked","StakerClaimed","StakingNothing","TooManyEraStakeValues","TooManyUnlockingChunks","UnbondingPeriod","UnclaimedRewardsAvailable","UnexpectedStakeInfoEra","UnknownEraReward","Unstaked","UnstakingNothing","WeightInfo","Withdrawn","__clone_box","__clone_box","__clone_box","account","account_id","available_staking_balance","before_all_runtime_migrations","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","change_core_metadata","change_core_metadata","clone","clone","clone","clone_into","clone_into","clone_into","core_claim_rewards","core_claim_rewards","core_info","core_stake_info","core_stakers_split","count","crate_version","current_era","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deposit_event","description","dispatch_bypass_filter","dispatchables","encode_to","encode_to","encode_to","ensure_not_halted","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","general_era_info","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","halt_unhalt_pallet","halt_unhalt_pallet","identity","identity","identity","image","index","infos","integrity_test","internal_halt_unhalt","internal_stake","internal_unstake","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","is_feeless","is_halted","ledger","metadata","module_name","move_stake","move_stake","name","name","name_hash","new_call_variant_change_core_metadata","new_call_variant_core_claim_rewards","new_call_variant_halt_unhalt_pallet","new_call_variant_move_stake","new_call_variant_register_core","new_call_variant_stake","new_call_variant_staker_claim_rewards","new_call_variant_unregister_core","new_call_variant_unstake","new_call_variant_withdraw_unstaked","next_era_starting_block","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_initialize","on_runtime_upgrade","register_core","register_core","reward_accumulator","reward_balance_snapshot","rewards","rotate_staking_info","size_hint","size_hint","size_hint","stake","stake","staker_claim_rewards","staker_claim_rewards","staker_info","storage_info","storage_types","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","tt_default_parts","tt_error_token","tt_extra_parts","tvl","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unregister_core","unregister_core","unstake","unstake","update_ledger","update_staker_info","vzip","vzip","vzip","vzip","warnings","whitelisted_storage_keys","with_weight","withdraw_unstaked","withdraw_unstaked","amount","core_id","core_id","core_id","core_id","description","description","era","from_core","halt","image","image","name","name","to_core","value","value","amount","amount","amount","amount","amount","amount","core","core","core","core","core","core","core","destination_account","era","era","era","from_core","is_halted","new_metadata","old_metadata","staker","staker","staker","staker","staker","to_core","change_core_metadata","core_claim_rewards","halt_unhalt_pallet","move_stake","register_core","stake","staker_claim_rewards","unregister_core","unstake","withdraw_unstaked","CoreEraStake","CurrentEra","GeneralEraInfo","GeneralStakerInfo","Halted","Ledger","NextEraStartingBlock","RegisteredCore","RewardAccumulator","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","into","into","into","into","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AccountLedger","BalanceOf","CoreInfo","CoreMetadata","CoreStakeInfo","EraInfo","EraStake","MAX_ASSUMED_VEC_LEN","RewardInfo","StakerInfo","UnbondingInfo","UnlockingChunk","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","account","active","active_stake","add","add_amount","amount","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","claim","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","core","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","default","default","default","default","default","description","encode","encode","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","era","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","image","into","into","into","into","into","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_clear","is_clear","is_clear","is_clear","is_clear","is_clear","is_clear","is_empty","is_empty","is_empty","latest_staked_value","len","len","locked","locked","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","metadata","name","number_of_stakers","partition","reward_claimed","rewards","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","stake","staked","staked","stakers","stakes","sum","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unbonding_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unlock_era","unlocking_chunks","unstake","using_encoded","using_encoded","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","SubstrateWeight","WeightInfo","borrow","borrow_mut","change_core_metadata","change_core_metadata","core_claim_rewards","core_claim_rewards","from","from_mut","from_mut","from_ref","from_ref","halt_unhalt_pallet","halt_unhalt_pallet","into","into_mut","into_ref","move_stake","move_stake","register_core","register_core","stake","stake","staker_claim_rewards","staker_claim_rewards","try_from","try_into","type_id","unchecked_into","unique_saturated_into","unregister_core","unregister_core","unstake","unstake","vzip","withdraw_unstaked","withdraw_unstaked"],"q":[[0,"pallet_ocif_staking"],[5,"pallet_ocif_staking::pallet"],[307,"pallet_ocif_staking::pallet::Call"],[324,"pallet_ocif_staking::pallet::Event"],[351,"pallet_ocif_staking::pallet::dispatchables"],[361,"pallet_ocif_staking::pallet::storage_types"],[514,"pallet_ocif_staking::primitives"],[997,"pallet_ocif_staking::weights"],[1035,"dyn_clone::sealed"],[1036,"sp_weights::weight_v2"],[1037,"alloc::vec"],[1038,"frame_system::pallet_prelude"],[1039,"bounded_collections::bounded_vec"],[1040,"frame_support::dispatch"],[1041,"core::option"],[1042,"parity_scale_codec::encode_like"],[1043,"frame_support::traits::metadata"],[1044,"parity_scale_codec::error"],[1045,"core::result"],[1046,"parity_scale_codec::codec"],[1047,"parity_scale_codec::codec"],[1048,"core::fmt"],[1049,"core::fmt"],[1050,"core::any"],[1051,"scale_info::ty"],[1052,"sp_storage"],[1053,"frame_support::dispatch"],[1054,"sp_arithmetic::traits"],[1055,"core::default"],[1056,"core::marker"],[1057,"core::ops::arith"],[1058,"core::clone"],[1059,"parity_scale_codec::compact"],[1060,"parity_scale_codec::codec"],[1061,"core::fmt"]],"d":["Staking lock identifier.","","The <code>pallet</code> module in each FRAME pallet hosts the most â€¦","Provides supporting types and traits for the staking â€¦","Autogenerated weights for <code>pallet_ocif_staking</code>","The balance type of this pallet.","Number of blocks per era.","Contains a variant per dispatchable extrinsic that this â€¦","Configuration trait of this pallet.","Core already registered.","Rewards claimed for core.","Staking information about a core in a particular era.","The core information type, containing a coreâ€™s AccountId â€¦","The core metadata type of this pallet.","Core not found.","New core registered for staking.","Core unregistered.","The currency used in staking.","The current era index.","Alias type for the era identifier type.","The <code>Error</code> enum of this pallet.","The <code>Event</code> enum of this pallet","The minimum amount required to keep an account open.","General information about an era.","Info about stakerâ€™s stakes on a particular core.","Halt status changed.","Denotes whether the pallet is halted (disabled).","Halted.","Incorrect era.","Attempted to stake less than the minimum amount.","General information about the staker.","Description exceeds maximum length.","Maximum length of a coreâ€™s description.","Max number of unique <code>EraStake</code> values that can exist for a â€¦","Image URL exceeds maximum length.","Maximum length of a coreâ€™s image URL.","Name exceeds maximum length.","Maximum length of a coreâ€™s name.","Maximum number of unique stakers per core.","Maximum number of stakers reached.","Max number of unlocking chunks per account Id &lt;-&gt; core Id â€¦","Core metadata changed.","Minimum amount user must have staked on a core. User can â€¦","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","Attempted to move stake to the same core.","The opaque token type for an imbalance. This is returned â€¦","Beginning of a new era.","Stores the block number of when the next era starts.","No halt change.","No permission.","No stake available for withdrawal.","Not a staker.","Core not registered.","Core is not unregistered.","Nothing available for withdrawal.","The <code>Pallet</code> struct, the main type that implements traits â€¦","Account Identifier from which the internal Pot is â€¦","Deposit amount that will be reserved as part of new core â€¦","Simple map where CoreId points to the respective core â€¦","Accumulator for block rewards during an era. It is reset â€¦","Reward already claimed.","Reward ratio of the pot to be distributed between the core â€¦","The overarching event type.","Staker moved an amount of stake to another core.","Threshold of staked tokens necessary for a core to become â€¦","Account has staked funds to a core.","Staker claimed rewards.","Staking nothing.","Too many era stake values.","Too many unlocking chunks.","Number of eras that need to pass until unstaked value can â€¦","Unclaimed rewards available.","Unexpected stake info for era.","Unknown rewards for era.","Account has unstaked funds from a core.","Unstaking nothing.","Weight information for extrinsics in this pallet.","Account has withdrawn unbonded funds.","","","","","","Returns available staking balance for the potential staker.","","","","","","","","","","","","","","","","","","","Used to change the metadata of a core.","See <code>Pallet::change_core_metadata</code>.","","","","","","","Claim core reward for the specified era.","See <code>Pallet::core_claim_rewards</code>.","An auto-generated getter for <code>RegisteredCore</code>.","An auto-generated getter for <code>CoreEraStake</code>.","Calculate reward split between core and stakers.","","","An auto-generated getter for <code>CurrentEra</code>.","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined â€¦","","","","Ensure the pallet is not halted.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","An auto-generated getter for <code>GeneralEraInfo</code>.","","","","","","Halt or unhalt the pallet.","See <code>Pallet::halt_unhalt_pallet</code>.","","","","","","","","Sets the halt state of the pallet.","Internal function responsible for validating a stake and â€¦","Internal function responsible for validating an unstake â€¦","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","An auto-generated getter for <code>Halted</code>.","An auto-generated getter for <code>Ledger</code>.","","","Move stake from one core to another.","See <code>Pallet::move_stake</code>.","","","","Create a call with the variant <code>change_core_metadata</code>.","Create a call with the variant <code>core_claim_rewards</code>.","Create a call with the variant <code>halt_unhalt_pallet</code>.","Create a call with the variant <code>move_stake</code>.","Create a call with the variant <code>register_core</code>.","Create a call with the variant <code>stake</code>.","Create a call with the variant <code>staker_claim_rewards</code>.","Create a call with the variant <code>unregister_core</code>.","Create a call with the variant <code>unstake</code>.","Create a call with the variant <code>withdraw_unstaked</code>.","An auto-generated getter for <code>NextEraStartingBlock</code>.","","","","","","","","","Used to register core for staking.","See <code>Pallet::register_core</code>.","An auto-generated getter for <code>RewardAccumulator</code>.","The block rewards are accumulated on the palletâ€™s â€¦","Adds <code>stakers</code> and <code>cores</code> rewards to the reward pool.","Used to copy all <code>CoreStakeInfo</code> from the ending era over to â€¦","","","","Lock up and stake balance of the origin account.","See <code>Pallet::stake</code>.","Claim the stakerâ€™s rewards.","See <code>Pallet::staker_claim_rewards</code>.","An auto-generated getter for <code>GeneralStakerInfo</code>.","","Auto-generated docs-only module listing all (public and â€¦","","","","","","","","","","","","","","","","","","Returns total value locked by staking.","","","","","","","","","","","","","","","","","","","","","","","","","Unregister existing core for staking, making it ineligible â€¦","See <code>Pallet::unregister_core</code>.","Start unbonding process and unstake balance from the core.","See <code>Pallet::unstake</code>.","Update the ledger for a staker. This will also update the â€¦","Updates staker info for a core.","","","","","","","","Withdraw all funds that have completed the unbonding â€¦","See <code>Pallet::withdraw_unstaked</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Used to change the metadata of a core.","Claim core reward for the specified era.","Halt or unhalt the pallet.","Move stake from one core to another.","Used to register core for staking.","Lock up and stake balance of the origin account.","Claim the stakerâ€™s rewards.","Unregister existing core for staking, making it ineligible â€¦","Start unbonding process and unstake balance from the core.","Withdraw all funds that have completed the unbonding â€¦","Staking information about a core in a particular era.","The current era index.","General information about an era.","Info about stakerâ€™s stakes on a particular core.","Denotes whether the pallet is halted (disabled).","General information about the staker.","Stores the block number of when the next era starts.","Simple map where CoreId points to the respective core â€¦","Accumulator for block rewards during an era. It is reset â€¦","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Information about an accountâ€™s locked balance and â€¦","The balance type of this pallet.","Information about a core entity, including its account ID â€¦","Metadata for a core entity in the system.","Information about a coreâ€™s stake, including the total â€¦","Information about a specific era, including rewards, â€¦","Information about the stake for a specific era.","","Information about rewards, including the balance for â€¦","Information about a stakerâ€™s stakes across different â€¦","Information about unbonding chunks of balance.","A chunk of balance that is unlocking until a specific era.","","","","","","","","","","","","","","Adds the given chunk to the unbonding info.","Adds the given amount to the chunkâ€™s amount.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Claims the stake for the current era, mutates StakerInfo â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the latest staked balance.","","","","","","","","","","","","","","","","","","returns the chucks before and after a given era.","","","","","","","","","","","","","Stakes the given value in the current era, mutates â€¦","","","","","Returns the total amount of the unlocking chunks.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unstakes the given value in the current era, mutates â€¦","","","","","","","","","","","","","Weights for <code>pallet_ocif_staking</code> using the Substrate node â€¦","Weight functions needed for <code>pallet_ocif_staking</code>.","","","","Storage: OcifStaking Halted (r:1 w:0) Proof: OcifStaking â€¦","","Storage: OcifStaking Halted (r:1 w:0) Proof: OcifStaking â€¦","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Storage: OcifStaking Halted (r:1 w:1) Proof: OcifStaking â€¦","Calls <code>U::from(self)</code>.","","","","Storage: OcifStaking Halted (r:1 w:0) Proof: OcifStaking â€¦","","Storage: OcifStaking Halted (r:1 w:0) Proof: OcifStaking â€¦","","Storage: OcifStaking Halted (r:1 w:0) Proof: OcifStaking â€¦","","Storage: OcifStaking Halted (r:1 w:0) Proof: OcifStaking â€¦","","","","","","","Storage: OcifStaking Halted (r:1 w:0) Proof: OcifStaking â€¦","","Storage: OcifStaking Halted (r:1 w:0) Proof: OcifStaking â€¦","","","Storage: OcifStaking Halted (r:1 w:0) Proof: OcifStaking â€¦"],"i":[0,0,0,0,0,0,5,0,0,28,14,0,0,0,28,14,14,5,0,0,0,0,5,0,0,14,0,28,28,28,0,28,5,5,28,5,28,5,5,28,5,14,5,0,28,0,14,0,28,28,28,28,28,28,28,0,5,5,0,0,28,5,5,14,5,14,14,28,28,28,5,28,28,28,14,28,5,14,13,14,15,17,13,13,13,14,28,15,14,28,15,14,28,15,13,14,28,15,13,14,28,15,13,15,13,14,15,13,14,15,13,15,13,13,13,13,13,13,13,14,28,15,14,28,15,14,28,15,14,28,15,13,67,15,0,14,28,15,13,13,14,15,13,13,13,14,14,14,15,15,15,13,14,28,15,13,14,28,15,13,13,14,14,28,28,15,15,13,13,14,14,28,28,15,15,13,15,15,15,15,15,13,15,14,28,15,67,13,13,13,13,13,13,13,14,28,15,13,14,28,15,13,14,28,15,15,13,13,17,13,13,15,13,67,13,15,15,15,15,15,15,15,15,15,15,13,13,13,13,13,13,13,13,13,13,15,13,13,13,13,14,28,15,13,15,13,15,13,13,0,14,28,15,13,14,15,13,14,28,15,13,14,28,15,0,0,0,13,14,28,15,14,28,15,14,28,15,13,14,28,15,14,28,15,13,14,28,15,13,14,28,15,13,15,13,15,13,13,13,14,28,15,0,13,28,13,15,68,69,70,71,72,73,74,72,68,75,73,74,73,74,68,69,70,76,77,78,79,80,81,76,77,82,83,79,80,84,80,85,79,80,81,86,84,84,76,77,78,79,81,81,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,87,88,89,90,91,92,93,94,95,87,88,89,90,91,92,93,94,95,87,88,89,90,91,92,93,94,95,87,87,88,88,89,89,90,90,91,91,92,92,93,93,94,94,95,95,87,87,88,88,89,89,90,90,91,91,92,92,93,93,94,94,95,95,87,88,89,90,91,92,93,94,95,87,88,89,90,91,92,93,94,95,87,88,89,90,91,92,93,94,95,87,88,89,90,91,92,93,94,95,87,88,89,90,91,92,93,94,95,87,88,89,90,91,92,93,94,95,87,88,89,90,91,92,93,94,95,87,88,89,90,91,92,93,94,95,87,88,89,90,91,92,93,94,95,0,0,0,0,0,0,0,0,0,0,0,0,57,59,42,21,20,61,39,50,49,4,59,20,21,49,50,50,57,59,42,21,20,61,39,50,49,4,57,59,42,21,20,61,39,50,49,4,57,59,42,21,20,61,39,50,49,4,57,59,42,21,20,61,39,50,49,4,57,59,42,21,20,61,39,50,49,4,39,42,21,20,39,50,49,4,57,59,42,21,20,61,39,50,49,4,57,59,42,21,20,61,39,50,49,4,42,57,59,42,21,20,61,39,50,49,4,57,59,42,21,20,61,39,50,49,4,57,59,42,21,20,61,39,50,49,4,57,59,42,21,20,61,39,50,49,4,42,21,20,39,50,49,4,57,39,49,57,59,42,21,20,61,39,50,49,4,57,59,42,21,20,61,39,50,49,4,57,57,57,59,59,59,42,42,42,21,21,21,20,20,20,61,61,61,39,39,39,50,50,50,49,49,49,4,4,4,61,57,59,42,21,20,61,39,50,49,4,57,59,42,21,20,61,39,50,49,4,57,57,59,59,42,42,21,21,20,20,61,61,39,39,50,50,49,49,4,4,57,57,59,59,42,42,21,21,20,20,61,61,39,39,50,50,49,49,4,4,57,59,42,21,20,61,39,50,49,4,57,57,59,42,21,20,61,39,50,49,4,57,59,42,21,20,61,39,50,49,4,57,59,42,21,20,61,39,50,49,4,42,21,20,39,50,49,4,39,49,4,39,39,49,21,4,57,59,42,21,20,61,39,50,49,4,59,57,20,49,20,21,57,59,42,21,20,61,39,50,49,4,39,21,61,42,39,49,57,59,42,21,20,61,39,50,49,4,57,59,42,21,20,61,39,50,49,4,20,57,59,42,21,20,61,39,50,49,4,57,59,42,21,20,61,39,50,49,4,57,59,42,21,20,61,39,50,49,4,57,59,42,21,20,61,39,50,49,4,57,59,42,21,20,61,39,50,49,4,57,59,42,21,20,61,39,50,49,4,57,59,42,21,20,61,39,50,49,4,4,57,59,42,21,20,61,39,50,49,4,57,59,42,21,20,61,39,50,49,4,50,49,39,39,49,57,59,42,21,20,61,39,50,49,4,0,0,96,96,97,96,97,96,96,96,96,96,96,97,96,96,96,96,97,96,97,96,97,96,97,96,96,96,96,96,96,97,96,97,96,96,97,96],"f":"``````````````````````````````````````````````````````````````````````````````{{cb}d{}}00`{{}}{{{h{{f{c}}}}}{{f{c}}}j}{{}l}{c{{A`{n}}}{}}00{c{{Ab{n}}}{}}00111{ce{}{}}0000000{{{Ad{c}}{Af{n}}{Af{n}}{Af{n}}}Ahj}`{{{Aj{c}}}{{Aj{c}}}{}}{{{Al{c}}}{{Al{c}}}j}{{{An{c}}}{{An{c}}}j}{{ce}d{}{}}00{{{Ad{c}}B`}Ahj}`{c{{Bd{{Bb{e}}}}}Bfj}{{ce}{{Bd{{Bh{{f{g}}}}}}}Bf{{Bf{B`}}}j}{{{Bh{{f{c}}}}{Bj{{f{c}}}}}{{Bl{{f{c}}{f{c}}}}}j}{{}Bn}{{}C`}{{}B`}{{}c{}}{c{{Cd{{Al{e}}Cb}}}Cfj}{c{{Cd{{Ch{e}}Cb}}}Cf{}}{c{{Cd{{An{e}}Cb}}}Cfj}{{{Cj{n}}}{{Cd{cCb}}}{}}00{{Cl{Cj{n}}}{{Cd{cCb}}}{}}00{{Clc}{{Cd{eCb}}}Cf{}}00{{{Al{c}}}dj}`{{{An{c}}e}Ahj{}}`{{{Al{c}}e}dj{CnD`}}{{{Ch{c}}e}d{}{CnD`}}{{{An{c}}e}dj{CnD`}}{{}{{Cd{d{Ch{c}}}}}j}{{{Aj{c}}{Aj{c}}}Db{}}{{{Al{c}}{Al{c}}}Dbj}{{{An{c}}{An{c}}}Dbj}{{ce}Db{}{}}00000000{{{Aj{c}}Dd}Df{}}{{{Al{c}}Dd}Dfj}{{{Ch{c}}Dd}Dfj}{{{An{c}}Dd}Dfj}{cc{}}0000{ce{}{}}01100101101001{c{{Bd{{Bj{{f{e}}}}}}}{{Bf{B`}}}j}{{{An{c}}}nj}{{}{{Cj{n}}}}{{{An{c}}}Dhj}{{}{{Cj{Dh}}}}{{{An{c}}}Djj}{{{Ad{c}}Db}Ahj}`{c{{Ab{n}}}{}}00`{{}Bn}{{}{{Ab{Dl}}}}{{}d}{Dbd}{{{Dn{{f{c}}}}{Bh{{f{c}}}}{f{c}}B`}{{Cd{d{Ch{c}}}}}j}{{{Dn{{f{c}}}}{Bh{{f{c}}}}{f{c}}B`}{{Cd{{f{c}}{Ch{c}}}}}j}>>>>>>>>>>>>{{{An{c}}e}Dbj{}}{{}Db}{c{{h{{f{e}}}}}Bfj}`{{}Dh}{{{Ad{c}}{f{c}}}Ahj}`1`{{}{{A`{n}}}}{{{Af{n}}{Af{n}}{Af{n}}}{{An{c}}}j}{B`{{An{c}}}j}{Db{{An{c}}}j}{{{f{c}}}{{An{c}}}j}30{{}{{An{c}}}j}010{{}{{E`{c}}}j}{{{E`{c}}}dj}{{}Eb}1{{}d}{{{E`{c}}l}lj}{{{E`{c}}}lj}0{{}l}{{{Ad{c}}{Af{n}}{Af{n}}{Af{n}}}Ahj}`{{}{{Ed{{f{c}}}}}j}{{B`{Ed{{f{c}}}}{f{c}}}dj}6{B`{{Bl{l{f{c}}}}}j}{{{Al{c}}}Bnj}{{{Ch{c}}}Bn{}}{{{An{c}}}Bnj}{{{Ad{c}}{f{c}}}Ahj}`{{{Ad{c}}}Ahj}`{{ce}{{Dn{{f{g}}}}}BfBfj}{{}{{Ab{Ef}}}}`{{c{Cj{n}}}{{Ab{n}}}{}}00{ce{}{}}00{c{{Cd{e}}}{}{}}0000000```{{}{{f{c}}}j}{c{{A`{n}}}{}}00000{c{{Ab{n}}}{}}00{cEh{}}000{{}Ej}0066666666:`;`{{{h{{f{c}}}}}dj}{{{Dn{{f{c}}}}}dj}8888`{{}{{Ab{El}}}}{{cl}{{F`{En}}}{}}>`````````````````````````````````````````````{{{Af{n}}{Af{n}}{Af{n}}}d}{B`d}{Dbd}{{{f{c}}}dj}30{{}d}010`````````??????????????????{cc{}}00000000{ce{}{}}11001101001100110101010101001010101000000000000000000000000000{c{{Cd{e}}}{}{}}00000000000000000=========111111111111111111111111111````````````{{cb}d{}}000000000```{{{Fb{c}}{Fd{c}}}d{FfFhFjFl}}{{{Fd{c}}c}d{{G`{}{{Fn{}}}}FjFl}}`{c{{A`{n}}}{}}000000000{c{{Ab{n}}}{}}000000000111111111166666666666666666666{{{Dn{c}}}{{Bl{B`c}}}{FfFjFl}}{{}c{}}000000{{{Gb{ceg}}}{{Gb{ceg}}}GdGdGd}{{{Gf{ce}}}{{Gf{ce}}}GdGd}{{{Ed{c}}}{{Ed{c}}}{GdGhFl}}{{{Bj{c}}}{{Bj{c}}}{GdGhFl}}{{{Bh{c}}}{{Bh{c}}}{GdGhFl}}{{{Gj{c}}}{{Gj{c}}}{GdFfFjFl}}{{{Dn{c}}}{{Dn{c}}}{GdFfFjFl}}{{{Fd{c}}}{{Fd{c}}}{GdFl}}{{{Fb{c}}}{{Fb{c}}}{GdFfFhFjFl}}{{{h{c}}}{{h{c}}}{GdFfFhFjFl}}{{ce}d{}{}}000000000`{c{{Cd{{Gb{egi}}Cb}}}CfGlGlGl}{c{{Cd{{Gf{eg}}Cb}}}CfGlGl}{c{{Cd{{Ed{e}}Cb}}}Cf{GhGhFl}}{c{{Cd{{Bj{e}}Cb}}}Cf{GhGhFl}}{c{{Cd{{Bh{e}}Cb}}}Cf{GhGhFl}}{c{{Cd{{Gj{e}}Cb}}}Cf{GhFfFjFl}}{c{{Cd{{Dn{e}}Cb}}}Cf{FfFjFl}}{c{{Cd{{Fd{e}}Cb}}}Cf{GhFl}}{c{{Cd{{Fb{e}}Cb}}}Cf{FfFhFjFl}}{c{{Cd{{h{e}}Cb}}}Cf{GhFfFhFjFl}}{{{Cj{n}}}{{Cd{cCb}}}{}}000000000{{Cl{Cj{n}}}{{Cd{cCb}}}{}}000000000{{Clc}{{Cd{eCb}}}Cf{}}000000000{{}{{Ed{c}}}{FhGhFl}}{{}{{Bj{c}}}{FhGhFl}}{{}{{Bh{c}}}{FhGhFl}}{{}{{Dn{c}}}{FhFfFjFl}}{{}{{Fd{c}}}{FhFl}}{{}{{Fb{c}}}{FhFfFhFjFl}}{{}{{h{c}}}{FhFfFhFjFl}}`{{{Dn{c}}}{{Ab{n}}}{FfFjFl}}{{{Fb{c}}}{{Ab{n}}}{FfFhFjFl}}{{{Gb{ceg}}i}dGnGnGn{CnD`}}{{{Gf{ce}}g}dGnGn{CnD`}}{{{Ed{c}}e}d{GhGhFl}{CnD`}}{{{Bj{c}}e}d{GhGhFl}{CnD`}}{{{Bh{c}}e}d{GhGhFl}{CnD`}}{{{Gj{c}}e}d{GhFfFjFl}{CnD`}}{{{Dn{c}}e}d{FfFjFl}{CnD`}}{{{Fd{c}}e}d{GhFl}{CnD`}}{{{Fb{c}}e}d{FfFhFjFl}{CnD`}}{{{h{c}}e}d{GhFfFhFjFl}{CnD`}}{{{Gb{ceg}}{Gb{ceg}}}DbH`H`H`}{{{Gf{ce}}{Gf{ce}}}DbH`H`}{{{Ed{c}}{Ed{c}}}Db{H`GhFl}}{{{Bj{c}}{Bj{c}}}Db{H`GhFl}}{{{Bh{c}}{Bh{c}}}Db{H`GhFl}}{{{Gj{c}}{Gj{c}}}Db{H`FfFjFl}}{{{Dn{c}}{Dn{c}}}Db{H`FfFjFl}}{{{Fd{c}}{Fd{c}}}Db{H`Fl}}{{{Fb{c}}{Fb{c}}}Db{H`FfFhFjFl}}{{{h{c}}{h{c}}}Db{H`FfFhFjFl}}{{ce}Db{}{}}00000000000000000000000000000`{{{Gb{ceg}}Dd}DfHbHbHb}{{{Gf{ce}}Dd}DfHbHb}{{{Ed{c}}Dd}Df{HbGhFl}}{{{Bj{c}}Dd}Df{HbGhFl}}{{{Bh{c}}Dd}Df{HbGhFl}}{{{Gj{c}}Dd}Df{HbFfFjFl}}{{{Dn{c}}Dd}Df{HbFfFjFl}}{{{Fd{c}}Dd}Df{HbFl}}{{{Fb{c}}Dd}Df{HbFfFhFjFl}}{{{h{c}}Dd}Df{HbFfFhFjFl}}{cc{}}000000000{ce{}{}}101100110011001100110011010011001011001{c{{Ab{n}}}{}}000000000`111111111111111111111111111111{cDb{}}000000{{{Dn{c}}}Db{FfFjFl}}{{{Fb{c}}}Db{FfFhFjFl}}{{{h{c}}}Db{FfFhFjFl}}{{{Dn{c}}}c{FfFjFl}}{{{Dn{c}}}Cl{FfFjFl}}{{{Fb{c}}}Cl{FfFhFjFl}}``{{}Bn}000000000```{{{Fb{c}}B`}{{Bl{{Fb{c}}{Fb{c}}}}}{FfFhFjFl}}``{{{Gb{ceg}}}BnGnGnGn}{{{Gf{ce}}}BnGnGn}{{{Ed{c}}}Bn{GhGhFl}}{{{Bj{c}}}Bn{GhGhFl}}{{{Bh{c}}}Bn{GhGhFl}}{{{Gj{c}}}Bn{GhFfFjFl}}{{{Dn{c}}}Bn{FfFjFl}}{{{Fd{c}}}Bn{GhFl}}{{{Fb{c}}}Bn{FfFhFjFl}}{{{h{c}}}Bn{GhFfFhFjFl}}{{{Dn{c}}B`c}{{Cd{dDh}}}{FfFjFl}}````{{{Fb{c}}}c{FfFhFjFl}}{{c{Cj{n}}}{{Ab{n}}}{}}000000000{ce{}{}}000000000`{c{{Cd{e}}}{}{}}0000000000000000000{c{{A`{n}}}{}}0000000000000000000{c{{Ab{n}}}{}}000000000{cEh{}}000000000{{}Ej}000000000`55555555555555555555``8{{{Dn{c}}g}e{FfFjFl}{}{{Hd{{Cj{n}}}{{Fn{e}}}}}}{{{Fb{c}}g}e{FfFhFjFl}{}{{Hd{{Cj{n}}}{{Fn{e}}}}}}7777777777``77{{ClClCl}l}0{{}l}0{cc{}}:00:11:::11221111996::1111:11","c":[43],"p":[[5,"Private",1035],[1,"unit"],[8,"BalanceOf",5],[5,"AccountLedger",514],[10,"Config",5],[5,"Weight",1036],[1,"u8"],[1,"array"],[5,"Vec",1037],[8,"OriginFor",1038],[5,"BoundedVec",1039],[8,"DispatchResultWithPostInfo",1040],[5,"Pallet",5],[6,"Event",5],[6,"Call",5],[8,"Era",5],[8,"CoreInfoOf",5],[6,"Option",1041],[10,"EncodeLike",1042],[5,"CoreStakeInfo",514],[5,"EraInfo",514],[1,"tuple"],[1,"usize"],[5,"CrateVersion",1043],[5,"Error",1044],[6,"Result",1045],[10,"Input",1046],[6,"Error",5],[1,"slice"],[1,"u32"],[10,"Output",1046],[10,"Sized",1047],[1,"bool"],[5,"Formatter",1048],[8,"Result",1048],[1,"str"],[5,"DispatchInfo",1040],[5,"PalletInfoData",1043],[5,"StakerInfo",514],[8,"BlockNumberFor",1038],[5,"StorageVersion",1043],[5,"RewardInfo",514],[5,"StorageInfo",1049],[5,"TypeId",1050],[5,"Type",1051],[5,"TrackedStorageKey",1052],[5,"PostDispatchInfo",1040],[5,"DispatchErrorWithPostInfo",1053],[5,"UnbondingInfo",514],[5,"UnlockingChunk",514],[10,"AtLeast32BitUnsigned",1054],[10,"Default",1055],[10,"Copy",1047],[10,"MaxEncodedLen",1056],[17,"Output"],[10,"Add",1057],[5,"CoreMetadata",514],[10,"Clone",1058],[5,"CoreInfo",514],[10,"HasCompact",1059],[5,"EraStake",514],[10,"Decode",1046],[10,"Encode",1046],[10,"PartialEq",1060],[10,"Debug",1048],[10,"FnOnce",1061],[8,"CoreMetadataOf",5],[15,"move_stake",307],[15,"stake",307],[15,"unstake",307],[15,"staker_claim_rewards",307],[15,"core_claim_rewards",307],[15,"register_core",307],[15,"change_core_metadata",307],[15,"halt_unhalt_pallet",307],[15,"Staked",324],[15,"Unstaked",324],[15,"Withdrawn",324],[15,"StakerClaimed",324],[15,"CoreClaimed",324],[15,"StakeMoved",324],[15,"CoreRegistered",324],[15,"CoreUnregistered",324],[15,"MetadataChanged",324],[15,"NewEra",324],[15,"HaltChanged",324],[5,"Ledger",361],[5,"CurrentEra",361],[5,"RewardAccumulator",361],[5,"NextEraStartingBlock",361],[5,"RegisteredCore",361],[5,"GeneralEraInfo",361],[5,"CoreEraStake",361],[5,"GeneralStakerInfo",361],[5,"Halted",361],[5,"SubstrateWeight",997],[10,"WeightInfo",997]],"b":[[231,"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E"],[232,"impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E"]]}],\
["pallet_rings",{"doc":"Rings Pallet","t":"RRKKREMMMMCCCPPGPPPRIKPGGPPPRRIFRPRPNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNPNPNNNNCNNNNNNNPNNNNNNNNEEENNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOHHHHFNNNNNNNNNNNNNNNNRRKKRMMMMFKNNMNNNNNNNNNMNMNMNNNNNNN","n":["Balance","ChainAssets","ChainAssetsList","ChainList","Chains","WeightInfo","get_asset_location","get_chain","get_location","get_main_asset","pallet","traits","weights","AssetsBridged","AssetsTransferred","Call","CallSent","ChainMaintenanceStatusChanged","ChainUnderMaintenance","Chains","ChainsUnderMaintenance","Config","DifferentChains","Error","Event","FailedToCalculateXcmFee","FailedToInvertLocation","FailedToReanchorAsset","MaintenanceOrigin","MaxXCMCallLength","Module","Pallet","RuntimeEvent","SendingFailed","WeightInfo","WeightTooHigh","__clone_box","__clone_box","__clone_box","before_all_runtime_migrations","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bridge_assets","bridge_assets","clone","clone","clone","clone_into","clone_into","clone_into","count","crate_version","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deposit_event","dispatch_bypass_filter","dispatchables","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","identity","identity","index","infos","integrity_test","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","is_feeless","is_under_maintenance","module_name","mutate_if_relay","name","name_hash","new_call_variant_bridge_assets","new_call_variant_send_call","new_call_variant_set_maintenance_status","new_call_variant_transfer_assets","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","send_call","send_call","set_maintenance_status","set_maintenance_status","size_hint","size_hint","size_hint","storage_info","storage_types","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","transfer_assets","transfer_assets","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","warnings","whitelisted_storage_keys","with_weight","amount","amount","asset","asset","call","chain","destination","destination","fee","fee","fee","fee_asset","fee_asset","to","to","under_maintenance","weight","amount","amount","asset","call","chain","chain","destination","from","from","origin_chain_asset","sender","to","to","under_maintenance","bridge_assets","send_call","set_maintenance_status","transfer_assets","ChainsUnderMaintenance","borrow","borrow_mut","from","from_mut","from_mut","from_ref","from_ref","into","into_mut","into_ref","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","Balance","ChainAssets","ChainAssetsList","ChainList","Chains","get_asset_location","get_chain","get_location","get_main_asset","SubstrateWeight","WeightInfo","borrow","borrow_mut","bridge_assets","bridge_assets","from","from_mut","from_mut","from_ref","from_ref","into","into_mut","into_ref","send_call","send_call","set_maintenance_status","set_maintenance_status","transfer_assets","transfer_assets","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"pallet_rings"],[13,"pallet_rings::pallet"],[221,"pallet_rings::pallet::Call"],[238,"pallet_rings::pallet::Event"],[252,"pallet_rings::pallet::dispatchables"],[256,"pallet_rings::pallet::storage_types"],[273,"pallet_rings::traits"],[282,"pallet_rings::weights"],[308,"staging_xcm::v3::multilocation"],[309,"core::convert"],[310,"dyn_clone::sealed"],[311,"sp_weights::weight_v2"],[312,"alloc::vec"],[313,"frame_system::pallet_prelude"],[314,"core::option"],[315,"frame_support::dispatch"],[316,"frame_support::traits::metadata"],[317,"parity_scale_codec::error"],[318,"core::result"],[319,"parity_scale_codec::codec"],[320,"frame_support::dispatch"],[321,"core::fmt"],[322,"core::fmt"],[323,"bounded_collections::bounded_vec"],[324,"frame_system::pallet_prelude"],[325,"core::any"],[326,"scale_info::ty"],[327,"sp_storage"],[328,"frame_support::dispatch"]],"d":["","","A chain asset <code>MultiLocation</code> abstraction trait.","A chain <code>MultiLocation</code> abstraction trait.","","","Returns the assetâ€™s <code>MultiLocation</code>.","Returns the assetâ€™s parent chain.","Returns the chainâ€™s <code>MultiLocation</code>.","Returns the chainâ€™s main asset as <code>ChainAssetsList</code>.","The <code>pallet</code> module in each FRAME pallet hosts the most â€¦","Provides supporting traits for the rings pallet.","Autogenerated weights for <code>pallet_rings</code>","Assets were bridged.","Assets were transferred.","Contains a variant per dispatchable extrinsic that this â€¦","A XCM call was sent.","A Chainâ€™s maintenance status changed.","Chain is under maintenance.","Higher level type providing an abstraction over a chainâ€™â€¦","Maps chainâ€™s and their maintenance status.","Configuration trait of this pallet.","Asset is not supported in the destination chain.","The <code>Error</code> enum of this pallet.","The <code>Event</code> enum of this pallet","Failed to calculate XCM fee.","Failed to invert location.","Failed to reanchor asset.","Origin that can set maintenance status.","Max length of an XCM call.","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","The <code>Pallet</code> struct, the main type that implements traits â€¦","The overarching event type.","Failed to send XCM.","Weight information for extrinsics in this pallet.","Weight exceeds <code>MaxXCMCallLength</code>.","","","","","","","","","","","","","","","","","","","","","","Bridge fungible assets to another chain.","See <code>Pallet::bridge_assets</code>.","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined â€¦","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","An auto-generated getter for <code>ChainsUnderMaintenance</code>.","","","","","Create a call with the variant <code>bridge_assets</code>.","Create a call with the variant <code>send_call</code>.","Create a call with the variant <code>set_maintenance_status</code>.","Create a call with the variant <code>transfer_assets</code>.","","","","","","","","Send a XCM call to a destination chain.","See <code>Pallet::send_call</code>.","Set the maintenance status of a chain.","See <code>Pallet::set_maintenance_status</code>.","","","","","Auto-generated docs-only module listing all (public and â€¦","","","","","","","Transfer fungible assets to another account in the â€¦","See <code>Pallet::transfer_assets</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bridge fungible assets to another chain.","Send a XCM call to a destination chain.","Set the maintenance status of a chain.","Transfer fungible assets to another account in the â€¦","Maps chainâ€™s and their maintenance status.","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Calls <code>U::from(self)</code>.","","","","","","","","","","","A chain asset <code>MultiLocation</code> abstraction trait.","A chain <code>MultiLocation</code> abstraction trait.","","Returns the assetâ€™s <code>MultiLocation</code>.","Returns the assetâ€™s parent chain.","Returns the chainâ€™s <code>MultiLocation</code>.","Returns the chainâ€™s main asset as <code>ChainAssetsList</code>.","Weights for <code>pallet_rings</code> using the Substrate node and â€¦","Weight functions needed for <code>pallet_rings</code>.","","","","Storage: Rings ChainsUnderMaintenance (r:1 w:0) Proof: â€¦","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Calls <code>U::from(self)</code>.","","","","Storage: Rings ChainsUnderMaintenance (r:1 w:0) Proof: â€¦","","Storage: Rings ChainsUnderMaintenance (r:0 w:1) Proof: â€¦","","Storage: Rings ChainsUnderMaintenance (r:1 w:0) Proof: â€¦","","","","","",""],"i":[4,4,0,0,2,0,2,2,4,4,0,0,0,20,20,0,20,20,24,18,0,0,24,0,0,24,24,24,18,18,0,0,18,24,18,24,19,20,21,19,24,20,21,24,20,21,24,20,21,19,24,20,21,19,24,20,21,19,21,19,20,21,19,20,21,19,19,19,24,20,21,24,20,21,24,20,21,24,20,21,19,21,0,24,20,21,19,20,21,19,19,19,20,20,20,21,21,21,19,24,20,21,19,24,20,21,19,19,24,24,20,20,21,21,19,19,24,24,20,20,21,21,21,21,21,21,21,24,20,21,19,19,19,19,24,20,21,19,24,20,21,19,24,20,21,21,19,19,0,19,19,21,21,21,21,19,19,19,19,19,19,19,19,21,19,21,24,20,21,19,0,24,20,21,19,20,21,19,21,19,24,20,21,19,24,20,21,0,0,0,24,20,21,24,20,21,24,20,21,19,24,20,21,24,20,21,19,24,20,21,19,24,20,21,19,24,20,21,0,19,24,49,50,49,50,51,52,51,50,51,49,50,51,49,49,50,52,51,53,54,53,55,53,56,55,53,54,54,55,53,54,56,0,0,0,0,0,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,4,4,0,0,2,2,2,4,4,0,0,58,58,59,58,58,58,58,58,58,58,58,58,59,58,59,58,59,58,58,58,58,58,58,58],"f":"``````{{{d{}{{b{c}}}}}fh}{{{d{}{{b{c}}}}}ch}{{{h{}{{j{c}}{l{e}}}}}f{{A`{n}}}d}{{{h{}{{j{c}}{l{e}}}}}e{{A`{n}}}d}``````````````````````````{{cAb}Ad{}}00{{}Af}{c{{Aj{Ah}}}{}}00{c{{Al{Ah}}}{}}00111{ce{}{}}0000000{{{An{c}}nnB`}BbBd}`{{{Bf{c}}}{{Bf{c}}}{}}{{{Bh{c}}}{{Bh{c}}}Bd}{{{Bj{c}}}{{Bj{c}}}Bd}{{ce}Ad{}{}}00{{}Bl}{{}Bn}{{}c{}}{c{{Cd{{C`{e}}Cb}}}Cf{}}{c{{Cd{{Bh{e}}Cb}}}CfBd}{c{{Cd{{Bj{e}}Cb}}}CfBd}{{{Ch{Ah}}}{{Cd{cCb}}}{}}00{{Cj{Ch{Ah}}}{{Cd{cCb}}}{}}00{{Cjc}{{Cd{eCb}}}Cf{}}00{{{Bh{c}}}AdBd}{{{Bj{c}}e}ClBd{}}`{{{C`{c}}e}Ad{}{CnD`}}{{{Bh{c}}e}AdBd{CnD`}}{{{Bj{c}}e}AdBd{CnD`}}{{{Bf{c}}{Bf{c}}}Db{}}{{{Bh{c}}{Bh{c}}}DbBd}{{{Bj{c}}{Bj{c}}}DbBd}{{ce}Db{}{}}00000000{{{Bf{c}}Dd}Df{}}{{{C`{c}}Dd}DfBd}{{{Bh{c}}Dd}DfBd}{{{Bj{c}}Dd}DfBd}{cc{}}0000{ce{}{}}01100101100110{{{Bj{c}}}AhBd}{{}{{Ch{Ah}}}}{{{Bj{c}}}DhBd}{{}{{Ch{Dh}}}}{{{Bj{c}}}DjBd}{c{{Al{Ah}}}{}}00{{}Bl}{{}{{Al{Dl}}}}{{}Ad}999999999999{{{Bj{c}}e}DbBd{}}{c{{B`{Db}}}{{Dn{f}}}}{{}Dh}{{ff}Ad}1{{}{{Aj{Ah}}}}{{nnB`}{{Bj{c}}}Bd}{{Afn{E`{Ah}}}{{Bj{c}}}Bd}{Db{{Bj{c}}}Bd}{{nn}{{Bj{c}}}Bd}{{{Eb{c}}}AdBd}{{}Ed}1;{{{Eb{c}}Af}AfBd}{{{Eb{c}}}AfBd}{{}Af}{{{An{c}}Afn{E`{Ah}}}BbBd}`{{{An{c}}Db}BbBd}`{{{C`{c}}}Bl{}}{{{Bh{c}}}BlBd}{{{Bj{c}}}BlBd}{{}{{Al{Ef}}}}`{{c{Ch{Ah}}}{{Al{Ah}}}{}}00{ce{}{}}00{{{An{c}}nn}BbBd}`{c{{Cd{e}}}{}{}}0000000```{c{{Aj{Ah}}}{}}00000{c{{Al{Ah}}}{}}00{cEh{}}000{{}Ej}00666666666666`{{}{{Al{El}}}}{{cAf}{{F`{En}}}{}}```````````````````````````````{{nnB`}Ad}{{Afn{E`{Ah}}}Ad}{DbAd}{{nn}Ad}`<<{cc{}}0=0====;;8===`````{{{d{}{{b{c}}}}}fh}{{{d{}{{b{c}}}}}ch}{{{h{}{{j{c}}{l{e}}}}}f{{A`{n}}}d}{{{h{}{{j{c}}{l{e}}}}}e{{A`{n}}}d}``{ce{}{}}0{{}Af}066161111{CjAf}01111{c{{Cd{e}}}{}{}}0{cEh{}}444","c":[30],"p":[[17,"Chains"],[10,"ChainAssetsList",273],[5,"MultiLocation",308],[10,"ChainList",273],[17,"Balance"],[17,"ChainAssets"],[1,"u128"],[10,"Into",309],[5,"Private",310],[1,"unit"],[5,"Weight",311],[1,"u8"],[1,"array"],[5,"Vec",312],[8,"OriginFor",313],[6,"Option",314],[8,"DispatchResult",315],[10,"Config",13],[5,"Pallet",13],[6,"Event",13],[6,"Call",13],[1,"usize"],[5,"CrateVersion",316],[6,"Error",13],[5,"Error",317],[6,"Result",318],[10,"Input",319],[1,"slice"],[1,"u32"],[8,"DispatchResultWithPostInfo",315],[10,"Output",319],[10,"Sized",320],[1,"bool"],[5,"Formatter",321],[8,"Result",321],[1,"str"],[5,"DispatchInfo",315],[5,"PalletInfoData",316],[10,"EncodeLike",322],[5,"BoundedVec",323],[8,"BlockNumberFor",313],[5,"StorageVersion",316],[5,"StorageInfo",324],[5,"TypeId",325],[5,"Type",326],[5,"TrackedStorageKey",327],[5,"PostDispatchInfo",315],[5,"DispatchErrorWithPostInfo",328],[15,"transfer_assets",221],[15,"bridge_assets",221],[15,"send_call",221],[15,"set_maintenance_status",221],[15,"AssetsTransferred",238],[15,"AssetsBridged",238],[15,"CallSent",238],[15,"ChainMaintenanceStatusChanged",238],[5,"ChainsUnderMaintenance",256],[5,"SubstrateWeight",282],[10,"WeightInfo",282]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
