var searchIndex = JSON.parse('{\
"invarch_primitives":{"doc":"","t":"PGFPFFGPPGPGPFPPNNNNNNNNONNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Bool","BoolOrWasm","CallInfo","Child","CoreInfo","IpfInfo","IpsType","Normal","One","OneOrPercent","Parent","Parentage","Replica","SubTokenInfo","Wasm","ZeroPoint","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","account","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","author","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","data","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","frozen_tokens","function","id","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","metadata","metadata","metadata","minimum_support","owner","pallet","required_approval","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"invarch_primitives"],[309,"dyn_clone::sealed"],[310,"core::any"],[311,"core::clone"],[312,"parity_scale_codec::error"],[313,"core::result"],[314,"parity_scale_codec::codec"],[315,"parity_scale_codec::codec"],[316,"parity_scale_codec::codec"],[317,"core::fmt"],[318,"core::fmt"],[319,"alloc::sync"],[320,"alloc::rc"],[321,"alloc::vec"],[322,"core::any"]],"d":["","","","Child IP (Id of the immediate parent, Account Id of the â€¦","Core IP Set struct","IPF Info","Normal or replica IPS","Normal IPS (original)","Represents 100%","Voting weight of an IPT","Parent IP (Account Id of itself)","Entity is parent or child?","IP Replica (Id of the original IP)","","","Represents 0% - 99% inclusive","","","","","","","","","IPS parentage","","","","","","","","","","","","","","","","","Original IPF author","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","IPF data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","IPS metadata","IPF metadata","","Aye vote percentage required to execute a multisig call.","IPF owner","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[8,0,0,5,0,0,0,7,4,0,5,0,7,0,8,4,4,5,7,8,9,10,11,12,9,4,5,7,8,9,10,11,12,4,5,7,8,9,10,11,12,10,4,5,7,8,9,10,11,12,4,5,7,8,9,10,11,12,4,5,7,8,9,10,11,12,4,5,7,8,9,10,11,12,10,4,5,7,8,9,10,11,12,4,5,7,8,9,10,11,12,4,5,7,8,9,10,11,12,4,5,7,8,9,10,11,12,4,5,7,8,9,10,11,12,4,5,7,8,9,10,11,12,4,4,4,5,5,5,7,7,7,8,8,8,9,9,9,10,10,10,11,11,11,12,12,12,4,5,7,8,9,10,11,12,4,5,7,8,9,10,11,12,4,5,7,8,9,10,11,12,4,5,7,8,9,10,11,12,9,12,11,4,5,7,8,9,10,11,12,4,5,7,8,9,10,11,12,4,5,7,8,9,10,11,12,4,5,7,8,9,10,11,12,4,5,7,8,9,10,11,12,9,10,11,9,10,12,9,4,5,7,8,9,10,11,12,4,5,7,8,9,10,11,12,4,5,7,8,9,10,11,12,4,5,7,8,9,10,11,12,4,5,7,8,9,10,11,12,4,5,7,8,9,10,11,12,4,5,7,8,9,10,11,12,4,5,7,8,9,10,11,12,4,5,7,8,9,10,11,12,4,5,7,8,9,10,11,12],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],0,[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[4,4],[[[5,[-1,-2]]],[[5,[-1,-2]]],6,6],[[[7,[-1]]],[[7,[-1]]],6],[[[8,[-1]]],[[8,[-1]]],6],[[[9,[-1,-2]]],[[9,[-1,-2]]],6,6],[[[10,[-1,-2,-3]]],[[10,[-1,-2,-3]]],6,6,6],[[[11,[-1,-2]]],[[11,[-1,-2]]],6,6],[[[12,[-1]]],[[12,[-1]]],6],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[-1,[[14,[4,13]]],15],[-1,[[14,[[5,[-2,-3]],13]]],15,16,16],[-1,[[14,[[7,[-2]],13]]],15,16],[-1,[[14,[[8,[-2]],13]]],15,16],[-1,[[14,[[9,[-2,-3]],13]]],15,16,16],[-1,[[14,[[10,[-2,-3,-4]],13]]],15,16,16,16],[-1,[[14,[[11,[-2,-3]],13]]],15,16,16],[-1,[[14,[[12,[-2]],13]]],15,16],[[[18,[17]]],[[14,[-1,13]]],[]],[[[18,[17]]],[[14,[-1,13]]],[]],[[[18,[17]]],[[14,[-1,13]]],[]],[[[18,[17]]],[[14,[-1,13]]],[]],[[[18,[17]]],[[14,[-1,13]]],[]],[[[18,[17]]],[[14,[-1,13]]],[]],[[[18,[17]]],[[14,[-1,13]]],[]],[[[18,[17]]],[[14,[-1,13]]],[]],[[19,[18,[17]]],[[14,[-1,13]]],[]],[[19,[18,[17]]],[[14,[-1,13]]],[]],[[19,[18,[17]]],[[14,[-1,13]]],[]],[[19,[18,[17]]],[[14,[-1,13]]],[]],[[19,[18,[17]]],[[14,[-1,13]]],[]],[[19,[18,[17]]],[[14,[-1,13]]],[]],[[19,[18,[17]]],[[14,[-1,13]]],[]],[[19,[18,[17]]],[[14,[-1,13]]],[]],[[19,-1],[[14,[-2,13]]],15,[]],[[19,-1],[[14,[-2,13]]],15,[]],[[19,-1],[[14,[-2,13]]],15,[]],[[19,-1],[[14,[-2,13]]],15,[]],[[19,-1],[[14,[-2,13]]],15,[]],[[19,-1],[[14,[-2,13]]],15,[]],[[19,-1],[[14,[-2,13]]],15,[]],[[19,-1],[[14,[-2,13]]],15,[]],[[4,-1],2,[20,21]],[[[5,[-1,-2]],-3],2,22,22,[20,21]],[[[7,[-1]],-2],2,22,[20,21]],[[[8,[-1]],-2],2,22,[20,21]],[[[9,[-1,-2]],-3],2,22,22,[20,21]],[[[10,[-1,-2,-3]],-4],2,22,22,22,[20,21]],[[[11,[-1,-2]],-3],2,22,22,[20,21]],[[[12,[-1]],-2],2,22,[20,21]],[[4,4],23],[[[5,[-1,-2]],[5,[-1,-2]]],23,24,24],[[[7,[-1]],[7,[-1]]],23,24],[[[8,[-1]],[8,[-1]]],23,24],[[[9,[-1,-2]],[9,[-1,-2]]],23,24,24],[[[10,[-1,-2,-3]],[10,[-1,-2,-3]]],23,24,24,24],[[[11,[-1,-2]],[11,[-1,-2]]],23,24,24],[[[12,[-1]],[12,[-1]]],23,24],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[4,25],26],[[[5,[-1,-2]],25],26,27,27],[[[7,[-1]],25],26,27],[[[8,[-1]],25],26,27],[[[9,[-1,-2]],25],26,27,27],[[[10,[-1,-2,-3]],25],26,27,27,27],[[[11,[-1,-2]],25],26,27,27],[[[12,[-1]],25],26,27],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[28,[-1]]],[[28,[3]]],[]],[[[28,[-1]]],[[28,[3]]],[]],[[[28,[-1]]],[[28,[3]]],[]],[[[28,[-1]]],[[28,[3]]],[]],[[[28,[-1]]],[[28,[3]]],[]],[[[28,[-1]]],[[28,[3]]],[]],[[[28,[-1]]],[[28,[3]]],[]],[[[28,[-1]]],[[28,[3]]],[]],[[[29,[-1]]],[[29,[3]]],[]],[[[29,[-1]]],[[29,[3]]],[]],[[[29,[-1]]],[[29,[3]]],[]],[[[29,[-1]]],[[29,[3]]],[]],[[[29,[-1]]],[[29,[3]]],[]],[[[29,[-1]]],[[29,[3]]],[]],[[[29,[-1]]],[[29,[3]]],[]],[[[29,[-1]]],[[29,[3]]],[]],[[[30,[-1]]],[[30,[3]]],[]],[[[30,[-1]]],[[30,[3]]],[]],[[[30,[-1]]],[[30,[3]]],[]],[[[30,[-1]]],[[30,[3]]],[]],[[[30,[-1]]],[[30,[3]]],[]],[[[30,[-1]]],[[30,[3]]],[]],[[[30,[-1]]],[[30,[3]]],[]],[[[30,[-1]]],[[30,[3]]],[]],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],0,0,0,0,0,0,0,[4,31],[[[5,[-1,-2]]],31,22,22],[[[7,[-1]]],31,22],[[[8,[-1]]],31,22],[[[9,[-1,-2]]],31,22,22],[[[10,[-1,-2,-3]]],31,22,22,22],[[[11,[-1,-2]]],31,22,22],[[[12,[-1]]],31,22],[[-1,[18,[17]]],[[32,[17]]],[]],[[-1,[18,[17]]],[[32,[17]]],[]],[[-1,[18,[17]]],[[32,[17]]],[]],[[-1,[18,[17]]],[[32,[17]]],[]],[[-1,[18,[17]]],[[32,[17]]],[]],[[-1,[18,[17]]],[[32,[17]]],[]],[[-1,[18,[17]]],[[32,[17]]],[]],[[-1,[18,[17]]],[[32,[17]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[5,"Private",309],[1,"tuple"],[10,"Any",310],[6,"OneOrPercent",0],[6,"Parentage",0],[10,"Clone",311],[6,"IpsType",0],[6,"BoolOrWasm",0],[5,"CoreInfo",0],[5,"IpfInfo",0],[5,"SubTokenInfo",0],[5,"CallInfo",0],[5,"Error",312],[6,"Result",313],[10,"Input",314],[10,"Decode",314],[1,"u8"],[1,"slice"],[1,"u32"],[10,"Output",314],[10,"Sized",315],[10,"Encode",314],[1,"bool"],[10,"PartialEq",316],[5,"Formatter",317],[8,"Result",317],[10,"Debug",317],[5,"Box",318],[5,"Arc",319],[5,"Rc",320],[1,"usize"],[5,"Vec",321],[5,"TypeId",310],[5,"Type",322]],"b":[]},\
"pallet_checked_inflation":{"doc":"","t":"PPKGPEMCCCPPKGPNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNIRGKRIRRGGPIRPIIPPIPPFRRIINNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNCNNNNNNNNNNNNNNEENNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNOOOOOOOOOOOOHHFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFKNNNNNNNNNMNNNNNNNMNNNNNNN","n":["FixedPerEra","FixedYearly","GetInflation","InflationMethod","Rate","WeightInfo","get_inflation_args","inflation","pallet","weights","FixedPerEra","FixedYearly","GetInflation","InflationMethod","Rate","as_any","as_any_mut","blake2_128","blake2_128_concat","blake2_256","borrow","borrow_mut","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","encode_to","from","from_mut","from_mut","from_ref","from_ref","get_inflation_args","get_inflation_args","identity","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","size_hint","to_keyed_vec","try_from","try_into","twox_128","twox_256","twox_64_concat","type_id","type_info","unchecked_into","unique_saturated_into","vzip","BalanceOf","BlocksPerEra","Call","Config","Currency","CurrentEra","DealWithInflation","ErasPerYear","Error","Event","HaltChanged","Halted","Inflation","InflationMinted","Module","NegativeImbalanceOf","NewEra","NewYear","NextEraStartingBlock","NoHaltChange","OverInflationDetected","Pallet","RuntimeEvent","WeightInfo","YearStartIssuance","YearlyInflationPerEra","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","count","crate_version","current_era","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deposit_event","dispatch_bypass_filter","dispatchables","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","halt_unhalt_pallet","halt_unhalt_pallet","identity","identity","identity","index","inflation_per_era","infos","integrity_test","internal_halt_unhalt","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","is_halted","mint","module_name","name","new_call_variant_halt_unhalt_pallet","new_call_variant_set_first_year_supply","next_era_starting_block","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_initialize","on_runtime_upgrade","set_first_year_supply","set_first_year_supply","size_hint","size_hint","size_hint","storage_info","storage_types","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","tt_default_parts","tt_error_token","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","warnings","whitelisted_storage_keys","with_weight","year_start_issuance","halt","current_issuance","current_issuance","era","expected_issuance","expected_new_issuance","is_halted","minted","next_era_starting_block","next_era_starting_block","starting_issuance","year_start_issuance","halt_unhalt_pallet","set_first_year_supply","CurrentEra","Halted","NextEraStartingBlock","YearStartIssuance","YearlyInflationPerEra","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","SubstrateWeight","WeightInfo","as_any","as_any_mut","borrow","borrow_mut","from","from_mut","from_mut","from_ref","from_ref","halt_unhalt_pallet","halt_unhalt_pallet","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","set_first_year_supply","set_first_year_supply","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"pallet_checked_inflation"],[10,"pallet_checked_inflation::inflation"],[53,"pallet_checked_inflation::pallet"],[280,"pallet_checked_inflation::pallet::Call"],[281,"pallet_checked_inflation::pallet::Event"],[292,"pallet_checked_inflation::pallet::dispatchables"],[294,"pallet_checked_inflation::pallet::storage_types"],[404,"pallet_checked_inflation::weights"],[431,"core::any"],[432,"alloc::vec"],[433,"parity_scale_codec::error"],[434,"core::result"],[435,"parity_scale_codec::codec"],[436,"parity_scale_codec::codec"],[437,"alloc::boxed"],[438,"alloc::sync"],[439,"alloc::rc"],[440,"core::any"],[441,"dyn_clone::sealed"],[442,"frame_support::traits::metadata"],[443,"frame_support::dispatch"],[444,"core::fmt"],[445,"core::fmt"],[446,"frame_support::dispatch"],[447,"frame_system::pallet_prelude"],[448,"sp_storage"],[449,"frame_support::dispatch"]],"d":["","","","","","","","","The module that hosts all the FRAME types needed to add â€¦","Autogenerated weights for <code>pallet_checked_inflation</code>","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Contains one variant per dispatchable that can be called â€¦","Configuration trait of this pallet.","","The current era. Starts from 1 and is reset every year.","","","Custom dispatch errors of this pallet.","The event emitted by this pallet.","","Wheter or not the inflation process should be halted.","","","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","","","","Block that the next era starts at.","","","The pallet implementing the on-chain logic.","","","Total token supply at the very beginning of the year â€¦","The number of tokens minted at the beginning of every era â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The current era. Starts from 1 and is reset every year.","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined â€¦","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","","","","The number of tokens minted at the beginning of every era â€¦","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Wheter or not the inflation process should be halted.","","","","Create a call with the variant <code>halt_unhalt_pallet</code>.","Create a call with the variant <code>set_first_year_supply</code>.","Block that the next era starts at.","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Total token supply at the very beginning of the year â€¦","","","","","","","","","","","","","NOTE: This function is an automatically generated, doc â€¦","NOTE: This function is an automatically generated, doc â€¦","The current era. Starts from 1 and is reset every year.","Wheter or not the inflation process should be halted.","Block that the next era starts at.","Total token supply at the very beginning of the year â€¦","The number of tokens minted at the beginning of every era â€¦","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Weights for <code>pallet_checked_inflation</code> using the Substrate â€¦","Weight functions needed for <code>pallet_checked_inflation</code>.","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Storage: CheckedInflation Halted (r:1 w:1) Proof: â€¦","Calls <code>U::from(self)</code>.","","","","","","","Storage: CheckedInflation YearStartIssuance (r:0 w:1) â€¦","","","","","",""],"i":[7,7,0,0,7,0,1,0,0,0,7,7,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,1,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,26,0,0,26,0,26,26,0,0,25,0,26,25,0,0,25,25,0,29,25,0,26,26,0,0,24,25,27,24,29,25,27,24,29,25,27,29,25,27,29,25,27,29,25,27,24,29,25,27,24,29,25,27,24,25,27,24,25,27,24,24,24,24,29,25,27,29,25,27,29,25,27,29,25,27,24,27,0,29,25,27,24,25,27,24,24,24,25,25,25,27,27,27,24,29,25,27,24,29,25,27,24,24,29,29,25,25,27,27,24,24,29,29,25,25,27,27,27,27,27,27,27,24,27,29,25,27,24,24,24,24,24,24,29,25,27,24,29,25,27,24,29,25,27,24,29,25,27,24,29,25,27,24,29,25,27,24,24,24,24,27,27,24,24,24,24,24,24,24,24,24,24,27,29,25,27,24,0,29,25,27,24,25,27,24,29,25,27,24,29,25,27,0,0,29,25,27,29,25,27,29,25,27,24,29,25,27,29,25,27,24,29,25,27,24,29,25,27,24,29,25,27,0,24,29,24,46,47,48,49,48,47,50,47,51,49,51,47,0,0,0,0,0,0,0,52,53,54,55,56,52,53,54,55,56,52,53,54,55,56,52,53,54,55,56,52,53,54,55,56,52,52,53,53,54,54,55,55,56,56,52,52,53,53,54,54,55,55,56,56,52,53,54,55,56,52,53,54,55,56,52,53,54,55,56,52,53,54,55,56,52,53,54,55,56,52,53,54,55,56,52,53,54,55,56,52,53,54,55,56,52,53,54,55,56,52,53,54,55,56,52,53,54,55,56,52,53,54,55,56,0,0,57,57,57,57,57,57,57,57,57,58,57,57,57,57,57,57,57,58,57,57,57,57,57,57,57],"f":[0,0,0,0,0,0,[[1,2]],0,0,0,0,0,0,0,0,[-1,3,[]],[-1,3,[]],[-1,[[5,[4]]],[]],[-1,[[6,[4]]],[]],[-1,[[5,[4]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[[7,[-2]],8]]],10,11],[[[12,[4]]],[[9,[-1,8]]],[]],[[2,[12,[4]]],[[9,[-1,8]]],[]],[[2,-1],[[9,[-2,8]]],10,[]],[[[7,[-1]],-2],13,14,[15,16]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[[1,2]],[[7,2]],[-1,[[6,[4]]],[]],[-1,-2,[],[]],[[[17,[-1]]],[[17,[3]]],[]],[[[18,[-1]]],[[18,[3]]],[]],[[[19,[-1]]],[[19,[3]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[7,[-1]]],20,14],[[-1,[12,[4]]],[[6,[4]]],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[6,[4]]],[]],[-1,21,[]],[[],22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,23],13,[]],[[-1,23],13,[]],[[-1,23],13,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[6,[4]]],[]],[-1,[[6,[4]]],[]],[-1,[[6,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[24,[-1]]],[[24,[-1]]],[]],[[[25,[-1]]],[[25,[-1]]],26],[[[27,[-1]]],[[27,[-1]]],26],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[],20],[[],28],[[],2],[[],-1,[]],[-1,[[9,[[29,[-2]],8]]],10,[]],[-1,[[9,[[25,[-2]],8]]],10,26],[-1,[[9,[[27,[-2]],8]]],10,26],[[[12,[4]]],[[9,[-1,8]]],[]],[[[12,[4]]],[[9,[-1,8]]],[]],[[[12,[4]]],[[9,[-1,8]]],[]],[[2,[12,[4]]],[[9,[-1,8]]],[]],[[2,[12,[4]]],[[9,[-1,8]]],[]],[[2,[12,[4]]],[[9,[-1,8]]],[]],[[2,-1],[[9,[-2,8]]],10,[]],[[2,-1],[[9,[-2,8]]],10,[]],[[2,-1],[[9,[-2,8]]],10,[]],[[[25,[-1]]],13,26],[[[27,[-1]],-2],30,26,[]],0,[[[29,[-1]],-2],13,[],[15,16]],[[[25,[-1]],-2],13,26,[15,16]],[[[27,[-1]],-2],13,26,[15,16]],[[[24,[-1]],[24,[-1]]],31,[]],[[[25,[-1]],[25,[-1]]],31,26],[[[27,[-1]],[27,[-1]]],31,26],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[[24,[-1]],32],33,[]],[[[29,[-1]],32],33,26],[[[25,[-1]],32],33,26],[[[27,[-1]],32],33,26],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[[[27,[-1]]],4,26],[[],[[12,[4]]]],[[[27,[-1]]],34,26],[[],[[12,[34]]]],[[[27,[-1]]],35,26],[[[36,[-1]],31],37,26],0,[-1,[[6,[4]]],[]],[-1,[[6,[4]]],[]],[-1,[[6,[4]]],[]],[[],20],[[]],[[],[[6,[38]]]],[[],13],[31,13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[17,[-1]]],[[17,[3]]],[]],[[[17,[-1]]],[[17,[3]]],[]],[[[17,[-1]]],[[17,[3]]],[]],[[[17,[-1]]],[[17,[3]]],[]],[[[18,[-1]]],[[18,[3]]],[]],[[[18,[-1]]],[[18,[3]]],[]],[[[18,[-1]]],[[18,[3]]],[]],[[[18,[-1]]],[[18,[3]]],[]],[[[19,[-1]]],[[19,[3]]],[]],[[[19,[-1]]],[[19,[3]]],[]],[[[19,[-1]]],[[19,[3]]],[]],[[[19,[-1]]],[[19,[3]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],31],[[],13],[[],34],[[],34],[31,[[27,[-1]]],26],[[],[[27,[-1]]],26],[[]],[[],13],[[],39],[[],13],[[],13],[40,40],[[],40],[[[41,[-1]]],40,26],[[],40],[[[36,[-1]]],37,26],0,[[[29,[-1]]],20,[]],[[[25,[-1]]],20,26],[[[27,[-1]]],20,26],[[],[[6,[42]]]],0,[[-1,[12,[4]]],[[6,[4]]],[]],[[-1,[12,[4]]],[[6,[4]]],[]],[[-1,[12,[4]]],[[6,[4]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],0,0,[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[6,[4]]],[]],[-1,[[6,[4]]],[]],[-1,[[6,[4]]],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[[],22],[[],22],[[],22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],[[6,[43]]]],[[-1,40],[[45,[44]]],[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[31,13],[[],13],0,0,0,0,0,[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[17,[-1]]],[[17,[3]]],[]],[[[17,[-1]]],[[17,[3]]],[]],[[[17,[-1]]],[[17,[3]]],[]],[[[17,[-1]]],[[17,[3]]],[]],[[[17,[-1]]],[[17,[3]]],[]],[[[18,[-1]]],[[18,[3]]],[]],[[[18,[-1]]],[[18,[3]]],[]],[[[18,[-1]]],[[18,[3]]],[]],[[[18,[-1]]],[[18,[3]]],[]],[[[18,[-1]]],[[18,[3]]],[]],[[[19,[-1]]],[[19,[3]]],[]],[[[19,[-1]]],[[19,[3]]],[]],[[[19,[-1]]],[[19,[3]]],[]],[[[19,[-1]]],[[19,[3]]],[]],[[[19,[-1]]],[[19,[3]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,3,[]],[-1,3,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],40],[[],40],[-1,-2,[],[]],[[[17,[-1]]],[[17,[3]]],[]],[[[18,[-1]]],[[18,[3]]],[]],[[[19,[-1]]],[[19,[3]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],40],[[],40],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[67],"p":[[10,"GetInflation",10],[1,"u32"],[10,"Any",431],[1,"u8"],[1,"array"],[5,"Vec",432],[6,"InflationMethod",10],[5,"Error",433],[6,"Result",434],[10,"Input",435],[10,"Decode",435],[1,"slice"],[1,"tuple"],[10,"Encode",435],[10,"Output",435],[10,"Sized",436],[5,"Box",437],[5,"Arc",438],[5,"Rc",439],[1,"usize"],[5,"TypeId",431],[5,"Type",440],[5,"Private",441],[5,"Pallet",53],[6,"Event",53],[10,"Config",53],[6,"Call",53],[5,"CrateVersion",442],[6,"Error",53],[8,"DispatchResultWithPostInfo",443],[1,"bool"],[5,"Formatter",444],[8,"Result",444],[1,"str"],[5,"DispatchInfo",443],[8,"OriginFor",445],[8,"DispatchResult",443],[5,"PalletInfoData",442],[5,"StorageVersion",442],[5,"Weight",446],[8,"BlockNumberFor",445],[5,"StorageInfo",447],[5,"TrackedStorageKey",448],[5,"PostDispatchInfo",443],[5,"DispatchErrorWithPostInfo",449],[15,"halt_unhalt_pallet",280],[15,"InflationMinted",281],[15,"OverInflationDetected",281],[15,"NewEra",281],[15,"HaltChanged",281],[15,"NewYear",281],[5,"CurrentEra",294],[5,"NextEraStartingBlock",294],[5,"YearStartIssuance",294],[5,"YearlyInflationPerEra",294],[5,"Halted",294],[5,"SubstrateWeight",404],[10,"WeightInfo",404]],"b":[[222,"impl-OnInitialize%3C%3CT+as+Config%3E::BlockNumber%3E-for-Pallet%3CT%3E"],[223,"impl-Hooks%3C%3CT+as+Config%3E::BlockNumber%3E-for-Pallet%3CT%3E"]]},\
"pallet_inv4":{"doc":"Pallet INV4","t":"EFECCCCCCCCCCKMMHGGKPPRPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNMMNNNNNNNNNNNNNNNNNNNIIFNNNNNNNNNNNNNNNNNNNNNNNISFINOONNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNOOOONOONNNNNNNNNNNNGPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNRIPGPPIKIPRRIIPRIRGGPRPPRRPRPPIIPPPPPPPPIPPPIFRPRRRRRSRRNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNNOONNENNNNNNNNNNNNNNNNNNNPNONPNNNNCNNNNNNNPNPNNNNNNNNNEENNNNNNNNNNNNNNNNNNNNNNNNNPNNNNCNNNPOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOHHHHHHHHFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPRIKRRPPFGIIRNNMNNNNNMNONNNNNNNNNNMNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNONNNNNNNMNNNNNNNNNNNNNNNNNNNNFKNNNNMNMNNNNNNNNNNNNMNMNMNMNNNNNNMNNMN","n":["CoreAccountDerivation","INV4Lookup","WeightInfo","account_derivation","dispatch","fee_handling","inv4_core","lookup","multisig","origin","pallet","voting","weights","CoreAccountDerivation","core_location","derive_core_account","dispatch_call","FeeAsset","FeeAssetNegativeImbalance","MultisigFeeHandler","Native","Native","Pre","Relay","Relay","__clone_box","as_any","as_any","as_any_mut","as_any_mut","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","encode_to","eq","equivalent","equivalent","equivalent","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","handle_creation_fee","identity","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","max_encoded_len","post_dispatch","pre_dispatch","size_hint","to_keyed_vec","to_owned","try_from","try_from","try_into","try_into","twox_128","twox_256","twox_64_concat","type_id","type_id","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","CoreIndexOf","CoreMetadataOf","INV4Lookup","as_any","as_any_mut","borrow","borrow_mut","from","from_mut","from_mut","from_ref","from_ref","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","lookup","try_from","try_into","type_id","unchecked_into","unique_saturated_into","unlookup","vzip","BoundedCallBytes","MAX_SIZE","MultisigOperation","MultisigOperationOf","__clone_box","actual_call","actual_call","as_any","as_any_mut","blake2_128","blake2_128_concat","blake2_256","borrow","borrow_mut","clone","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","encode_to","eq","equivalent","equivalent","equivalent","fee_asset","fee_asset","fmt","from","from_mut","from_mut","from_ref","from_ref","identity","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","max_encoded_len","metadata","metadata","original_caller","original_caller","size_hint","tally","tally","to_keyed_vec","to_owned","try_from","try_into","twox_128","twox_256","twox_64_concat","type_id","type_info","unchecked_into","unique_saturated_into","vzip","INV4Origin","Multisig","MultisigInternalOrigin","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","encode","encode_to","encode_to","ensure_multisig","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","id","identity","identity","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","max_encoded_len","max_encoded_len","new","size_hint","size_hint","to_account_id","to_keyed_vec","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_into","try_into","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","using_encoded","vzip","vzip","AssetsProvider","BalanceOf","Burned","Call","CallFeePaymentFailed","CallHasTooFewBytes","CallOf","Config","CoreByAccount","CoreCreated","CoreCreationFee","CoreId","CoreInfoOf","CoreMembers","CoreNotFound","CoreSeedBalance","CoreStorage","Currency","Error","Event","FailedDecodingCall","FeeCharger","IncompleteVoteCleanup","MaxCallLengthExceeded","MaxCallSize","MaxCallers","MaxCallersExceeded","MaxMetadata","MaxMetadataExceeded","Minted","Module","Multisig","Multisig","MultisigCallAlreadyExists","MultisigCallNotFound","MultisigCanceled","MultisigExecuted","MultisigVoteAdded","MultisigVoteStarted","MultisigVoteWithdrawn","NextCoreId","NoAvailableCoreId","NoPermission","NotAVoter","Origin","Pallet","ParaId","ParametersSet","RelayAssetId","RelayCoreCreationFee","RuntimeCall","RuntimeEvent","RuntimeOrigin","STORAGE_VERSION","Tokens","WeightInfo","__clone_box","__clone_box","__clone_box","access_poll","account","add_member","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_ongoing","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel_multisig_proposal","cancel_multisig_proposal","classes","clone","clone","clone","clone_into","clone_into","clone_into","core_by_account","core_location","core_members","core_storage","count","crate_version","create_core","create_core","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deposit_event","derive_core_account","dispatch_bypass_filter","dispatchables","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","frozen_tokens","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","identity","identity","index","infos","inner_cancel_multisig_proposal","inner_create_core","inner_operate_multisig","inner_set_parameters","inner_token_burn","inner_token_mint","inner_vote_multisig","inner_withdraw_vote_multisig","integrity_test","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","inv4_core","is_asset_frozen","lookup_address","lookup_core","metadata","minimum_support","minimum_support_and_required_approval","module_name","multisig","multisig","name","new_call_variant_cancel_multisig_proposal","new_call_variant_create_core","new_call_variant_operate_multisig","new_call_variant_set_parameters","new_call_variant_token_burn","new_call_variant_token_mint","new_call_variant_vote_multisig","new_call_variant_withdraw_vote_multisig","next_core_id","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","operate_multisig","operate_multisig","remove_member","required_approval","set_parameters","set_parameters","size_hint","size_hint","size_hint","storage_info","storage_types","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","token_burn","token_burn","token_mint","token_mint","try_access_poll","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","tt_default_parts","tt_error_token","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vote_multisig","vote_multisig","vzip","vzip","vzip","vzip","warnings","whitelisted_storage_keys","with_weight","withdraw_vote_multisig","withdraw_vote_multisig","amount","amount","aye","call","call_hash","call_hash","call_hash","core_id","core_id","core_id","creation_fee_asset","fee_asset","frozen_tokens","metadata","metadata","metadata","minimum_support","minimum_support","required_approval","required_approval","target","target","amount","amount","call","call_hash","call_hash","call_hash","call_hash","call_hash","core_account","core_id","core_id","core_id","core_id","core_id","core_id","core_id","core_id","core_id","current_votes","executor_account","executor_account","executor_account","executor_account","frozen_tokens","metadata","metadata","minimum_support","minimum_support","required_approval","required_approval","result","target","target","voter","voter","voter","voter","votes_added","votes_added","votes_removed","cancel_multisig_proposal","create_core","operate_multisig","set_parameters","token_burn","token_mint","vote_multisig","withdraw_vote_multisig","CoreByAccount","CoreMembers","CoreStorage","Multisig","NextCoreId","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","Aye","Aye","Class","Core","CustomPolling","Index","Moment","Nay","Nay","Tally","Vote","VoteRecord","Votes","Votes","__clone_box","__clone_box","access_poll","approval","as_any","as_any","as_any_mut","as_any_mut","as_ongoing","ayes","ayes","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow_mut","borrow_mut","classes","clone","clone","clone_into","clone_into","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","dummy","encode_to","encode_to","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_parts","from_ref","from_ref","from_ref","from_ref","identity","identity","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","max_encoded_len","max_encoded_len","nays","new","process_vote","records","size_hint","size_hint","support","to_keyed_vec","to_keyed_vec","to_owned","to_owned","try_access_poll","try_from","try_from","try_into","try_into","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","SubstrateWeight","WeightInfo","as_any","as_any_mut","borrow","borrow_mut","cancel_multisig_proposal","cancel_multisig_proposal","create_core","create_core","from","from_mut","from_mut","from_ref","from_ref","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","operate_multisig","operate_multisig","set_parameters","set_parameters","token_burn","token_burn","token_mint","token_mint","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vote_multisig","vote_multisig","vzip","withdraw_vote_multisig","withdraw_vote_multisig"],"q":[[0,"pallet_inv4"],[13,"pallet_inv4::account_derivation"],[16,"pallet_inv4::dispatch"],[17,"pallet_inv4::fee_handling"],[95,"pallet_inv4::inv4_core"],[97,"pallet_inv4::lookup"],[121,"pallet_inv4::multisig"],[181,"pallet_inv4::origin"],[282,"pallet_inv4::pallet"],[581,"pallet_inv4::pallet::Call"],[603,"pallet_inv4::pallet::Event"],[643,"pallet_inv4::pallet::dispatchables"],[651,"pallet_inv4::pallet::storage_types"],[761,"pallet_inv4::voting"],[881,"pallet_inv4::weights"],[920,"xcm::v3::junctions"],[921,"frame_support::dispatch"],[922,"dyn_clone::sealed"],[923,"core::any"],[924,"alloc::vec"],[925,"parity_scale_codec::error"],[926,"core::result"],[927,"parity_scale_codec::codec"],[928,"parity_scale_codec::codec"],[929,"core::fmt"],[930,"core::fmt"],[931,"alloc::boxed"],[932,"alloc::sync"],[933,"alloc::rc"],[934,"core::option"],[935,"sp_runtime::traits"],[936,"sp_runtime::traits"],[937,"sp_runtime::transaction_validity"],[938,"core::any"],[939,"sp_runtime::traits"],[940,"parity_scale_codec::codec"],[941,"core::fmt"],[942,"frame_support::traits::voting"],[943,"frame_system::pallet_prelude"],[944,"parity_scale_codec::encode_like"],[945,"frame_support::traits::metadata"],[946,"bounded_collections::bounded_vec"],[947,"sp_arithmetic::per_things"],[948,"frame_support::dispatch"],[949,"frame_support::traits::metadata"],[950,"frame_support::traits::storage"],[951,"sp_runtime"],[952,"frame_support::dispatch"]],"d":["","StaticLookup implementor using MultiAddress::Index for â€¦","","Core Account Derivation.","Dispatches calls internally, charging fees to the multisig â€¦","MultisigFeeHandler trait.","Core creation and internal management.","Custom account lookup implementation.","Multisig Operations.","Custom Multisig Origin (<code>INV4Origin</code>).","The module that hosts all the FRAME types needed to add â€¦","Voting Mechanism.","Autogenerated weights for <code>pallet_inv4</code>","Trait providing the XCM location and the derived account â€¦","Specifies a coreâ€™s location.","Derives the coreâ€™s AccountId.","Dispatch a call executing pre/post dispatch for proper fee â€¦","Represents the asset to be used by the multisig for paying â€¦","Represents a potential negative asset balance incurred â€¦","Fee handler trait.","","","Type returned by <code>pre_dispatch</code> - implementation dependent.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Charges the fee for creating the core (multisig).","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Charges the call dispatching fee from the multisig â€¦","Checks if the fee can be paid using the selected asset.","","","","","","","","","","","","","","","","","","","","","","StaticLookup implementor using MultiAddress::Index for â€¦","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Maximum size of call we store is 50kb.","Details of a multisig operation.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Origin representing a core by its id.","","Internal origin for identifying the multisig CoreId.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ensures the passed origin is a multisig, returning â€¦","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Provider of assets functionality for the voting tokens","","A coreâ€™s voting token was burned","Dispatch functions","Multisig fee payment failed, probably due to lack of funds â€¦","Failed to extract metadata from a call","","Configuration trait of this pallet.","Mapping of account id -&gt; core id.","A core was created","Fee for creating a core in the native token","Integer id type for the core id","","Stores a list of members for each Core. This storage â€¦","Core not found","Base voting token balance to give callers when creating a â€¦","Core info storage.","Currency type","Errors for INV4 pallet","The event emitted by this pallet.","Failed to decode stored multisig call","Implementation of the fee handler for both core creation â€¦","Incomplete vote cleanup","Call is too long","Maximum size of a multisig proposal call","The maximum numbers of caller accounts on a single â€¦","Maximum amount of callers exceeded","The maximum length of the core metadata and the metadata â€¦","Maximum metadata length exceeded","A coreâ€™s voting token was minted","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","Details of a multisig call.","","Multisig proposal already exists and is being voted on","Multisig call not found","A multisig proposal was cancelled","A multisig proposal passed and itâ€™s call was executed","A vote was added to an existing multisig proposal","A multisig proposal has started, it needs more votes to â€¦","A vote was removed from an existing multisig proposal","Next available Core ID.","No available Core ID","The caller has no permissions in the core","Cannot withdraw a vote on a multisig transaction you have â€¦","The custom core origin.","The pallet implementing the on-chain logic.","ParaId of the parachain, to be used for deriving the core â€¦","A core had parameters changed","Relay token asset id in the runtime","Fee for creating a core in the relay token","The overarching call type","Runtime event type","The outer <code>Origin</code> type.","The current storage version.","Provider of balance tokens in the runtime","Weight info for dispatchable calls","","","","","IPS parentage","","","","","","","","","","","","","","","","","","","","","","","","","","","","Cancel an existing multisig proposal (called by a core â€¦","Cancel an existing multisig proposal (called by a core â€¦","","","","","","","","Mapping of account id -&gt; core id.","Core location is defined as a plurality within the â€¦","Stores a list of members for each Core. This storage â€¦","Core info storage.","","","Create a new core","Create a new core","","","","","","","","","","","","","","","HashedDescription of the core location from the â€¦","","Auto-generated docs-only module listing all defined â€¦","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","Inner function for the cancel_multisig_proposal call.","Inner function for the create_core call.","Inner function for the operate_multisig call.","Inner function for the set_parameters call.","Inner function for the token_burn call.","Inner function for the token_mint call.","Inner function for the vote_multisig call.","Inner function for the withdraw_token_multisig call.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Checks if the voting asset is frozen.","Matches <code>MultiAddress</code> to allow for a <code>MultiAddress::Index</code> â€¦","Queries <code>CoreStorage</code> to retrieve the AccountId of a core.","IPS metadata","Aye vote percentage required to execute a multisig call.","Returns the minimum support and required approval â€¦","","","Details of a multisig call.","","Create a call with the variant <code>cancel_multisig_proposal</code>.","Create a call with the variant <code>create_core</code>.","Create a call with the variant <code>operate_multisig</code>.","Create a call with the variant <code>set_parameters</code>.","Create a call with the variant <code>token_burn</code>.","Create a call with the variant <code>token_mint</code>.","Create a call with the variant <code>vote_multisig</code>.","Create a call with the variant <code>withdraw_vote_multisig</code>.","Next available Core ID.","","","","","","","","Create a new multisig proposal, auto-executing if caller â€¦","Create a new multisig proposal, auto-executing if caller â€¦","","","Change core parameters incl. voting thresholds and token â€¦","Change core parameters incl. voting thresholds and token â€¦","","","","","Auto-generated docs-only module listing all defined â€¦","","","","","","","Burn the coreâ€™s voting token from a target (called by a â€¦","Burn the coreâ€™s voting token from a target (called by a â€¦","Mint the coreâ€™s voting token to a target (called by a â€¦","Mint the coreâ€™s voting token to a target (called by a â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Vote on an existing multisig proposal, auto-executing if â€¦","Vote on an existing multisig proposal, auto-executing if â€¦","","","","","","","","Remove callerâ€™s vote from an existing multisig proposal","Remove callerâ€™s vote from an existing multisig proposal","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Cancel an existing multisig proposal (called by a core â€¦","Create a new core","Create a new multisig proposal, auto-executing if caller â€¦","Change core parameters incl. voting thresholds and token â€¦","Burn the coreâ€™s voting token from a target (called by a â€¦","Mint the coreâ€™s voting token to a target (called by a â€¦","Vote on an existing multisig proposal, auto-executing if â€¦","Remove callerâ€™s vote from an existing multisig proposal","Mapping of account id -&gt; core id.","Stores a list of members for each Core. This storage â€¦","Core info storage.","Details of a multisig call.","Next available Core ID.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Aggregated votes for an ongoing poll by members of a core.","Represents a proposal vote within a multisig context.","Type alias for <code>Vote</code> with <code>BalanceOf</code>.","","","","","","","","","","","<code>Some</code> if the referendum <code>index</code> can be voted on, along with â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Allows for building a <code>Tally</code> manually.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Check if a vote is valid and add the memberâ€™s total â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Weights for <code>pallet_inv4</code> using the Substrate node and â€¦","Weight functions needed for <code>pallet_inv4</code>.","","","","","","Storage: INV4 Multisig (r:0 w:1) Proof: INV4 Multisig â€¦","","Storage: INV4 NextCoreId (r:1 w:1) Proof: INV4 NextCoreId â€¦","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","Storage: CoreAssets Accounts (r:1 w:0) Proof: CoreAssets â€¦","","Storage: INV4 CoreStorage (r:1 w:1) Proof: INV4 â€¦","","Storage: CoreAssets Accounts (r:1 w:1) Proof: CoreAssets â€¦","","Storage: CoreAssets Accounts (r:1 w:1) Proof: CoreAssets â€¦","","","","","","","Storage: INV4 Multisig (r:1 w:1) Proof: INV4 Multisig â€¦","","","Storage: INV4 Multisig (r:1 w:1) Proof: INV4 Multisig â€¦"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,76,0,0,0,0,21,2,77,21,2,2,21,2,21,2,2,2,2,21,2,21,2,2,2,2,2,2,2,2,2,2,2,2,2,21,2,21,21,2,2,21,21,2,2,77,2,21,2,21,2,21,2,21,2,21,2,21,2,2,77,77,2,2,2,21,2,21,2,2,2,2,21,2,2,21,2,21,2,21,2,0,0,0,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,0,0,0,0,34,64,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,64,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,64,34,64,34,34,64,34,34,34,34,34,34,34,34,34,34,34,34,34,0,40,0,40,42,40,42,40,42,40,42,40,42,40,42,40,42,40,42,40,42,40,42,40,42,40,42,40,42,40,42,42,40,42,0,40,42,40,40,40,42,42,42,40,42,40,42,40,40,42,42,40,40,42,42,42,40,42,40,42,40,42,40,42,40,42,40,42,40,42,40,42,42,40,42,42,40,42,40,42,40,42,40,42,40,42,40,42,40,42,40,42,40,42,40,42,40,42,42,40,42,41,0,50,0,57,57,0,0,0,50,41,41,0,0,57,41,0,41,0,0,57,41,57,57,41,41,57,41,57,50,0,0,79,57,57,50,50,50,50,50,0,57,57,57,0,0,41,50,41,41,41,41,41,0,41,41,49,50,51,49,53,49,49,50,57,51,49,50,57,51,49,50,57,51,50,57,51,50,57,51,49,50,57,51,49,50,57,51,49,51,49,49,50,51,49,50,51,49,49,49,49,49,49,49,51,49,50,57,51,50,57,51,50,57,51,50,57,51,49,49,51,0,50,57,51,49,50,51,49,49,49,50,50,50,51,51,51,49,50,57,51,49,50,57,51,49,49,50,50,57,57,51,51,49,49,50,50,57,57,51,51,53,51,51,51,51,51,50,57,51,49,49,49,49,49,49,49,49,49,49,49,49,50,57,51,49,50,57,51,49,50,57,51,49,50,57,51,49,50,57,51,49,50,57,51,0,49,49,49,53,53,49,49,0,49,49,51,51,51,51,51,51,51,51,49,49,49,49,49,49,49,49,49,51,49,53,49,51,50,57,51,49,0,50,57,51,49,50,51,49,51,49,51,49,49,50,57,51,49,50,57,51,0,0,50,57,51,50,57,51,50,57,51,49,50,57,51,50,57,51,49,50,57,51,49,50,57,51,49,51,49,50,57,51,0,49,57,49,51,80,81,82,83,82,84,85,83,82,84,86,83,87,86,83,87,86,87,86,87,80,81,88,89,90,91,92,93,90,94,95,95,96,88,89,91,92,93,90,94,92,91,92,93,90,96,95,96,95,96,95,96,90,88,89,91,92,93,90,91,92,93,0,0,0,0,0,0,0,0,0,0,0,0,0,97,98,99,100,101,97,98,99,100,101,97,98,99,100,101,97,98,99,100,101,97,98,99,100,101,97,97,98,98,99,99,100,100,101,101,97,97,98,98,99,99,100,100,101,101,97,98,99,100,101,97,98,99,100,101,97,98,99,100,101,97,98,99,100,101,97,98,99,100,101,97,98,99,100,101,97,98,99,100,101,97,98,99,100,101,97,98,99,100,101,97,98,99,100,101,97,98,99,100,101,97,98,99,100,101,102,74,103,0,0,103,103,102,74,0,0,0,0,103,46,74,103,46,46,74,46,74,103,46,46,46,74,46,74,46,74,46,74,46,74,103,46,74,46,74,46,74,46,74,46,74,46,74,46,46,74,46,74,46,46,46,74,74,74,46,74,46,74,46,46,74,74,46,46,46,74,74,46,74,46,74,46,74,46,74,46,74,46,74,46,74,46,74,46,46,46,46,46,74,46,46,74,46,74,103,46,74,46,74,46,74,46,74,46,74,46,74,46,74,46,74,46,74,46,74,0,0,104,104,104,104,105,104,105,104,104,104,104,104,104,104,104,104,104,104,104,105,104,105,104,105,104,105,104,104,104,104,104,104,105,104,104,105,104],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[]],[2,3],0,0,0,0,0,0,0,0,[[-1,4],5,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,[[8,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[8,[7]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,2],[[-1,-2],5,[],[]],[-1,[[11,[2,10]]],12],[[[13,[7]]],[[11,[-1,10]]],[]],[[14,[13,[7]]],[[11,[-1,10]]],[]],[[14,-1],[[11,[-2,10]]],12,[]],[[2,-1],5,[15,16]],[[2,2],17],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[2,18],19],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[[21,[20]]],5],[-1,[[9,[7]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[22,[-1]]],[[22,[6]]],[]],[[[22,[-1]]],[[22,[6]]],[]],[[[23,[-1]]],[[23,[6]]],[]],[[[23,[-1]]],[[23,[6]]],[]],[[[24,[-1]]],[[24,[6]]],[]],[[[24,[-1]]],[[24,[6]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],25],[[2,[26,[-1]],27,28,25,29],[[11,[5,30]]],[]],[[2,27,25],[[11,[-1,30]]],[]],[2,25],[[-1,[13,[7]]],[[9,[7]]],[]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[9,[7]]],[]],[-1,31,[]],[-1,31,[]],[[],32],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,6,[]],[-1,6,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[22,[-1]]],[[22,[6]]],[]],[[[23,[-1]]],[[23,[6]]],[]],[[[24,[-1]]],[[24,[6]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[11,[-2,33]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,31,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[-1,4],5,[]],0,0,[-1,6,[]],[-1,6,[]],[-1,[[8,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[8,[7]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[34,[-1,-2,-3,-4]]],[[34,[-1,-2,-3,-4]]],35,35,35,35],[[-1,-2],5,[],[]],[-1,[[11,[[34,[-2,-3,-4,-5]],10]]],12,36,36,36,[]],[[[13,[7]]],[[11,[-1,10]]],[]],[[14,[13,[7]]],[[11,[-1,10]]],[]],[[14,-1],[[11,[-2,10]]],12,[]],[[[34,[-1,-2,-3,-4]],-5],5,37,37,37,[],[15,16]],[[[34,[-1,-2,-3,-4]],[34,[-1,-2,-3,-4]]],17,38,38,38,38],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],0,0,[[[34,[-1,-2,-3,-4]],18],19,39,39,39,39],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,[[9,[7]]],[]],[-1,-2,[],[]],[[[22,[-1]]],[[22,[6]]],[]],[[[23,[-1]]],[[23,[6]]],[]],[[[24,[-1]]],[[24,[6]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],25],0,0,0,0,[[[34,[-1,-2,-3,-4]]],25,37,37,37,[]],0,0,[[-1,[13,[7]]],[[9,[7]]],[]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[9,[7]]],[]],[-1,31,[]],[[],32],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[-1,4],5,[]],[[-1,4],5,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[40,[-1]]],[[40,[-1]]],[35,41]],[[[42,[-1]]],[[42,[-1]]],[35,41]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[-1,[[11,[[40,[-2]],10]]],12,41],[-1,[[11,[[42,[-2]],10]]],12,41],[[[13,[7]]],[[11,[-1,10]]],[]],[[[13,[7]]],[[11,[-1,10]]],[]],[[14,[13,[7]]],[[11,[-1,10]]],[]],[[14,[13,[7]]],[[11,[-1,10]]],[]],[[14,-1],[[11,[-2,10]]],12,[]],[[14,-1],[[11,[-2,10]]],12,[]],[[[42,[-1]]],[[9,[7]]],41],[[[40,[-1]],-2],5,41,[15,16]],[[[42,[-1]],-2],5,41,[15,16]],[-2,[[11,[[42,[-1]],43]]],41,[]],[[[40,[-1]],[40,[-1]]],17,[38,41]],[[[42,[-1]],[42,[-1]]],17,[38,41]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[[40,[-1]],18],19,[39,41]],[[[42,[-1]],18],19,[39,41]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],0,[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[22,[-1]]],[[22,[6]]],[]],[[[22,[-1]]],[[22,[6]]],[]],[[[23,[-1]]],[[23,[6]]],[]],[[[23,[-1]]],[[23,[6]]],[]],[[[24,[-1]]],[[24,[6]]],[]],[[[24,[-1]]],[[24,[6]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],25],[[],25],[[],[[42,[-1]]],41],[[[40,[-1]]],25,41],[[[42,[-1]]],25,41],[[[42,[-1]]],[],41],[[-1,[13,[7]]],[[9,[7]]],[]],[[-1,[13,[7]]],[[9,[7]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],[-1,31,[]],[-1,31,[]],[[],32],[[],32],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[42,[-1]],-3],-2,41,[],[[45,[[13,[7]]],[[44,[-2]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,4],5,[]],[[-1,4],5,[]],[[-1,4],5,[]],[[-1,-2,-5],-4,[],[],41,[],[[45,[[47,[[46,[-3]]]]],[[44,[-4]]]]]],0,[[],5],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[[-1,-2],[[26,[[5,[[46,[-3]]]]]]],[],[],41],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[48,[-1]]],3,41],0,[[],[[9,[-1]]],[]],[[[49,[-1]]],[[49,[-1]]],[]],[[[50,[-1]]],[[50,[-1]]],41],[[[51,[-1]]],[[51,[-1]]],41],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[-1,26,52],[[],1],[[-1,-2],[[26,[5]]],52,52],[-1,[[26,[[53,[-2]]]]],52,41],[[],25],[[],54],[[[48,[-1]],[55,[7]],56,56,2],3,41],0,[[],-1,[]],[-1,[[11,[[50,[-2]],10]]],12,41],[-1,[[11,[[57,[-2]],10]]],12,[]],[-1,[[11,[[51,[-2]],10]]],12,41],[[[13,[7]]],[[11,[-1,10]]],[]],[[[13,[7]]],[[11,[-1,10]]],[]],[[[13,[7]]],[[11,[-1,10]]],[]],[[14,[13,[7]]],[[11,[-1,10]]],[]],[[14,[13,[7]]],[[11,[-1,10]]],[]],[[14,[13,[7]]],[[11,[-1,10]]],[]],[[14,-1],[[11,[-2,10]]],12,[]],[[14,-1],[[11,[-2,10]]],12,[]],[[14,-1],[[11,[-2,10]]],12,[]],[[[50,[-1]]],5,41],[[]],[[[51,[-1]],-2],3,41,[]],0,[[[50,[-1]],-2],5,41,[15,16]],[[[57,[-1]],-2],5,[],[15,16]],[[[51,[-1]],-2],5,41,[15,16]],[[[49,[-1]],[49,[-1]]],17,[]],[[[50,[-1]],[50,[-1]]],17,41],[[[51,[-1]],[51,[-1]]],17,41],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[[49,[-1]],18],19,[]],[[[50,[-1]],18],19,41],[[[57,[-1]],18],19,41],[[[51,[-1]],18],19,41],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],0,[[[51,[-1]]],7,41],[[],[[13,[7]]]],[[[51,[-1]]],58,41],[[],[[13,[58]]]],[[[51,[-1]]],59,41],[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],[[],25],[[],[[9,[60]]]],[[[48,[-1]]],3,41],[[[48,[-1]],[55,[7]],56,56,2],61,41],[[[48,[-1]],[26,[[55,[7]]]],2,22],3,41],[[[48,[-1]],[26,[[55,[7]]]],[26,[56]],[26,[56]],[26,[17]]],61,41],[[[48,[-1]],[62,[-1]]],61,41],[[[48,[-1]],[62,[-1]]],61,41],[[[48,[-1]],17],3,41],[[[48,[-1]]],3,41],[[],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[22,[-1]]],[[22,[6]]],[]],[[[22,[-1]]],[[22,[6]]],[]],[[[22,[-1]]],[[22,[6]]],[]],[[[22,[-1]]],[[22,[6]]],[]],[[[23,[-1]]],[[23,[6]]],[]],[[[23,[-1]]],[[23,[6]]],[]],[[[23,[-1]]],[[23,[6]]],[]],[[[23,[-1]]],[[23,[6]]],[]],[[[24,[-1]]],[[24,[6]]],[]],[[[24,[-1]]],[[24,[6]]],[]],[[[24,[-1]]],[[24,[6]]],[]],[[[24,[-1]]],[[24,[6]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],[[26,[17]]]],[63,26],[[],26],0,0,[[],[[26,[[5,[56,56]]]]]],[[],58],0,[[-1,-2],[[26,[[64,[-3]]]]],52,52,41],[[],58],[[],[[51,[-1]]],41],[[[55,[7]],56,56,2],[[51,[-1]]],41],[[[26,[[55,[7]]]],2,22],[[51,[-1]]],41],[[[26,[[55,[7]]]],[26,[56]],[26,[56]],[26,[17]]],[[51,[-1]]],41],[[[62,[-1]]],[[51,[-1]]],41],[[[62,[-1]]],[[51,[-1]]],41],[17,[[51,[-1]]],41],[[],[[51,[-1]]],41],[[]],[[],5],[[],65],[[],5],[[],5],[66,66],[[],66],[[],66],[[[48,[-1]],[26,[[55,[7]]]],2,22],3,41],0,[[],5],0,[[[48,[-1]],[26,[[55,[7]]]],[26,[56]],[26,[56]],[26,[17]]],61,41],0,[[[50,[-1]]],25,41],[[[57,[-1]]],25,[]],[[[51,[-1]]],25,41],[[],[[9,[67]]]],0,[[-1,[13,[7]]],[[9,[7]]],[]],[[-1,[13,[7]]],[[9,[7]]],[]],[[-1,[13,[7]]],[[9,[7]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[48,[-1]],[62,[-1]]],61,41],0,[[[48,[-1]],[62,[-1]]],61,41],0,[[-1,-2,-5],[[11,[-4,68]]],[],[],41,[],[[45,[[47,[[46,[-3]]]]],[[44,[[11,[-4,68]]]]]]]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],0,0,[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[[],32],[[],32],[[],32],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[48,[-1]],17],3,41],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],[[9,[69]]]],[[-1,66],[[71,[70]]],[]],[[[48,[-1]]],3,41],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],5],[[[55,[7]],56,56,2],5],[[[26,[[55,[7]]]],2,22],5],[[[26,[[55,[7]]]],[26,[56]],[26,[56]],[26,[17]]],5],[[[62,[-1]]],5,41],[[[62,[-1]]],5,41],[17,5],[[],5],0,0,0,0,0,[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[22,[-1]]],[[22,[6]]],[]],[[[22,[-1]]],[[22,[6]]],[]],[[[22,[-1]]],[[22,[6]]],[]],[[[22,[-1]]],[[22,[6]]],[]],[[[22,[-1]]],[[22,[6]]],[]],[[[23,[-1]]],[[23,[6]]],[]],[[[23,[-1]]],[[23,[6]]],[]],[[[23,[-1]]],[[23,[6]]],[]],[[[23,[-1]]],[[23,[6]]],[]],[[[23,[-1]]],[[23,[6]]],[]],[[[24,[-1]]],[[24,[6]]],[]],[[[24,[-1]]],[[24,[6]]],[]],[[[24,[-1]]],[[24,[6]]],[]],[[[24,[-1]]],[[24,[6]]],[]],[[[24,[-1]]],[[24,[6]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,4],5,[]],[[-1,4],5,[]],[[-1,-2,-6],-5,[],[],[],[],[],[[45,[[47,[-3,-4,-1]]],[[44,[-5]]]]]],[[[46,[-1]],[72,[-1]]],56,41],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[[-1,-2],[[26,[[5,[-3,-1]]]]],[],[],[]],[[[46,[-1]],[72,[-1]]],[[73,[-1]]],41],0,[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[9,[-1]]],[]],[[[46,[-1]]],[[46,[-1]]],41],[[[74,[-1]]],[[74,[-1]]],35],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[-1,[[11,[[46,[-2]],10]]],12,41],[-1,[[11,[[74,[-2]],10]]],12,36],[[[13,[7]]],[[11,[-1,10]]],[]],[[[13,[7]]],[[11,[-1,10]]],[]],[[14,[13,[7]]],[[11,[-1,10]]],[]],[[14,[13,[7]]],[[11,[-1,10]]],[]],[[14,-1],[[11,[-2,10]]],12,[]],[[14,-1],[[11,[-2,10]]],12,[]],0,[[[46,[-1]],-2],5,41,[15,16]],[[[74,[-1]],-2],5,37,[15,16]],[[[46,[-1]],[46,[-1]]],17,41],[[[74,[-1]],[74,[-1]]],17,38],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[[46,[-1]],18],19,41],[[[74,[-1]],18],19,39],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[[73,[-1]],[73,[-1]],[75,[[74,[[73,[-1]]]]]]],[[46,[-1]]],41],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[22,[-1]]],[[22,[6]]],[]],[[[22,[-1]]],[[22,[6]]],[]],[[[23,[-1]]],[[23,[6]]],[]],[[[23,[-1]]],[[23,[6]]],[]],[[[24,[-1]]],[[24,[6]]],[]],[[[24,[-1]]],[[24,[6]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],25],[[],25],0,[[[72,[-1]]],[[46,[-1]]],41],[[[46,[-1]],[26,[[74,[[73,[-1]]]]]]],[[11,[[74,[[73,[-1]]]],68]]],41],0,[[[46,[-1]]],25,41],[[[74,[-1]]],25,37],[[[46,[-1]],[72,[-1]]],56,41],[[-1,[13,[7]]],[[9,[7]]],[]],[[-1,[13,[7]]],[[9,[7]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2,-6],[[11,[-5,68]]],[],[],[],[],[],[[45,[[47,[-3,-4,-1]]],[[44,[[11,[-5,68]]]]]]]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],[-1,31,[]],[-1,31,[]],[[],32],[[],32],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,6,[]],[-1,6,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],66],[[],66],[14,66],[14,66],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[[22,[-1]]],[[22,[6]]],[]],[[[23,[-1]]],[[23,[6]]],[]],[[[24,[-1]]],[[24,[6]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[14,14],66],[[14,14],66],[14,66],[14,66],[[],66],[[],66],[[],66],[[],66],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,31,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],66],[[],66],[-1,-2,[],[]],[[],66],[[],66]],"c":[312],"p":[[6,"Junctions",920],[6,"FeeAsset",17],[8,"DispatchResultWithPostInfo",921],[5,"Private",922],[1,"tuple"],[10,"Any",923],[1,"u8"],[1,"array"],[5,"Vec",924],[5,"Error",925],[6,"Result",926],[10,"Input",927],[1,"slice"],[1,"u32"],[10,"Output",927],[10,"Sized",928],[1,"bool"],[5,"Formatter",929],[8,"Result",929],[8,"Credit",930],[6,"FeeAssetNegativeImbalance",17],[5,"Box",931],[5,"Arc",932],[5,"Rc",933],[1,"usize"],[6,"Option",934],[8,"DispatchInfoOf",935],[8,"PostDispatchInfoOf",935],[8,"DispatchResult",936],[6,"TransactionValidityError",937],[5,"TypeId",923],[5,"Type",938],[5,"LookupError",935],[5,"MultisigOperation",121],[10,"Clone",939],[10,"Decode",927],[10,"Encode",927],[10,"PartialEq",940],[10,"Debug",929],[6,"INV4Origin",181],[10,"Config",282],[5,"MultisigInternalOrigin",181],[5,"BadOrigin",935],[17,"Output"],[10,"FnOnce",941],[5,"Tally",761],[6,"PollStatus",942],[8,"OriginFor",943],[5,"Pallet",282],[6,"Event",282],[6,"Call",282],[10,"EncodeLike",944],[8,"CoreInfoOf",282],[5,"CrateVersion",945],[5,"BoundedVec",946],[5,"Perbill",947],[6,"Error",282],[1,"str"],[5,"DispatchInfo",921],[5,"PalletInfoData",945],[8,"DispatchResult",921],[8,"BalanceOf",282],[6,"MultiAddress",948],[8,"MultisigOperationOf",121],[5,"StorageVersion",945],[5,"Weight",949],[5,"StorageInfo",950],[6,"DispatchError",936],[5,"TrackedStorageKey",951],[5,"PostDispatchInfo",921],[5,"DispatchErrorWithPostInfo",936],[8,"Core",761],[8,"Votes",761],[6,"Vote",761],[5,"BoundedBTreeMap",952],[10,"CoreAccountDerivation",13],[10,"MultisigFeeHandler",17],[5,"INV4Lookup",97],[8,"Origin",282],[15,"token_mint",581],[15,"token_burn",581],[15,"vote_multisig",581],[15,"operate_multisig",581],[15,"withdraw_vote_multisig",581],[15,"cancel_multisig_proposal",581],[15,"create_core",581],[15,"set_parameters",581],[15,"Minted",603],[15,"Burned",603],[15,"MultisigExecuted",603],[15,"MultisigVoteStarted",603],[15,"MultisigVoteAdded",603],[15,"MultisigVoteWithdrawn",603],[15,"MultisigCanceled",603],[15,"CoreCreated",603],[15,"ParametersSet",603],[5,"NextCoreId",651],[5,"CoreStorage",651],[5,"CoreByAccount",651],[5,"Multisig",651],[5,"CoreMembers",651],[8,"VoteRecord",761],[10,"CustomPolling",761],[5,"SubstrateWeight",881],[10,"WeightInfo",881]],"b":[]},\
"pallet_ocif_staking":{"doc":"OCIF Staking pallet","t":"SECCCIRGKPPIIIPPPRIIGGRIIPIPPPIPRRPRPRRPRPRIPIPIPPPPPPPFRRIIPRRPRPPPPPRPPPPPRPNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNPNNNNNNNNNNNNNNNNNNNNONCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNPNONNNNNNNNNNNNNNNNNNNNPNNNNNNNNPNPNNCNNNNNNNNNNNNNNEENNNNNNNNNNNNNNNNNNNNNNNNNNPNPNNNNNNCNNNPOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOHHHHHHHHHHFFFFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFIFFFFFSFFFFNNNNNNNNNNOOONNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNOOONOONNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNFKNNNNMNMNNNNNNMNNNNNNNMNMNMNMNNNNNNMNMNNMN","n":["LOCK_ID","WeightInfo","pallet","primitives","weights","BalanceOf","BlocksPerEra","Call","Config","CoreAlreadyRegistered","CoreClaimed","CoreEraStake","CoreInfoOf","CoreMetadataOf","CoreNotFound","CoreRegistered","CoreUnregistered","Currency","CurrentEra","Era","Error","Event","ExistentialDeposit","GeneralEraInfo","GeneralStakerInfo","HaltChanged","Halted","Halted","IncorrectEra","InsufficientBalance","Ledger","MaxDescriptionExceeded","MaxDescriptionLength","MaxEraStakeValues","MaxImageExceeded","MaxImageUrlLength","MaxNameExceeded","MaxNameLength","MaxStakersPerCore","MaxStakersReached","MaxUnlocking","MetadataChanged","MinimumStakingAmount","Module","MoveStakeToSameCore","NegativeImbalanceOf","NewEra","NextEraStartingBlock","NoHaltChange","NoPermission","NoStakeAvailable","NotAStaker","NotRegistered","NotUnregisteredCore","NothingToWithdraw","Pallet","PotId","RegisterDeposit","RegisteredCore","RewardAccumulator","RewardAlreadyClaimed","RewardRatio","RuntimeEvent","StakeMoved","StakeThresholdForActiveCore","Staked","StakerClaimed","StakingNothing","TooManyEraStakeValues","TooManyUnlockingChunks","UnbondingPeriod","UnclaimedRewardsAvailable","UnexpectedStakeInfoEra","UnknownEraReward","Unstaked","UnstakingNothing","WeightInfo","Withdrawn","__clone_box","__clone_box","__clone_box","account","account_id","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","available_staking_balance","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","change_core_metadata","change_core_metadata","clone","clone","clone","clone_into","clone_into","clone_into","core_claim_rewards","core_claim_rewards","core_info","core_stake_info","core_stakers_split","count","crate_version","current_era","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deposit_event","description","dispatch_bypass_filter","dispatchables","encode_to","encode_to","encode_to","ensure_not_halted","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","general_era_info","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","halt_unhalt_pallet","halt_unhalt_pallet","identity","identity","identity","image","index","infos","integrity_test","internal_halt_unhalt","internal_stake","internal_unstake","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","is_halted","ledger","metadata","module_name","move_stake","move_stake","name","name","new_call_variant_change_core_metadata","new_call_variant_core_claim_rewards","new_call_variant_halt_unhalt_pallet","new_call_variant_move_stake","new_call_variant_register_core","new_call_variant_stake","new_call_variant_staker_claim_rewards","new_call_variant_unregister_core","new_call_variant_unstake","new_call_variant_withdraw_unstaked","next_era_starting_block","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_initialize","on_runtime_upgrade","register_core","register_core","reward_accumulator","reward_balance_snapshot","rewards","rotate_staking_info","size_hint","size_hint","size_hint","stake","stake","staker_claim_rewards","staker_claim_rewards","staker_info","storage_info","storage_types","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","tt_default_parts","tt_error_token","tvl","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unregister_core","unregister_core","unstake","unstake","update_ledger","update_staker_info","vzip","vzip","vzip","vzip","warnings","whitelisted_storage_keys","with_weight","withdraw_unstaked","withdraw_unstaked","amount","core_id","core_id","core_id","core_id","description","description","era","from_core","halt","image","image","name","name","to_core","value","value","amount","amount","amount","amount","amount","amount","core","core","core","core","core","core","core","destination_account","era","era","era","from_core","is_halted","new_metadata","old_metadata","staker","staker","staker","staker","staker","to_core","change_core_metadata","core_claim_rewards","halt_unhalt_pallet","move_stake","register_core","stake","staker_claim_rewards","unregister_core","unstake","withdraw_unstaked","CoreEraStake","CurrentEra","GeneralEraInfo","GeneralStakerInfo","Halted","Ledger","NextEraStartingBlock","RegisteredCore","RewardAccumulator","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AccountLedger","BalanceOf","CoreInfo","CoreMetadata","CoreStakeInfo","EraInfo","EraStake","MAX_ASSUMED_VEC_LEN","RewardInfo","StakerInfo","UnbondingInfo","UnlockingChunk","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","account","active","active_stake","add","add_amount","amount","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","claim","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","core","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","default","default","default","default","default","description","encode","encode","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","era","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","image","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_clear","is_clear","is_clear","is_clear","is_clear","is_clear","is_clear","is_empty","is_empty","is_empty","latest_staked_value","len","len","locked","locked","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","metadata","name","number_of_stakers","partition","reward_claimed","rewards","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","stake","staked","staked","stakers","stakes","sum","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unbonding_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unlock_era","unlocking_chunks","unstake","using_encoded","using_encoded","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","SubstrateWeight","WeightInfo","as_any","as_any_mut","borrow","borrow_mut","change_core_metadata","change_core_metadata","core_claim_rewards","core_claim_rewards","from","from_mut","from_mut","from_ref","from_ref","halt_unhalt_pallet","halt_unhalt_pallet","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","move_stake","move_stake","register_core","register_core","stake","stake","staker_claim_rewards","staker_claim_rewards","try_from","try_into","type_id","unchecked_into","unique_saturated_into","unregister_core","unregister_core","unstake","unstake","vzip","withdraw_unstaked","withdraw_unstaked"],"q":[[0,"pallet_ocif_staking"],[5,"pallet_ocif_staking::pallet"],[323,"pallet_ocif_staking::pallet::Call"],[340,"pallet_ocif_staking::pallet::Event"],[367,"pallet_ocif_staking::pallet::dispatchables"],[377,"pallet_ocif_staking::pallet::storage_types"],[575,"pallet_ocif_staking::primitives"],[1108,"pallet_ocif_staking::weights"],[1151,"dyn_clone::sealed"],[1152,"core::any"],[1153,"alloc::vec"],[1154,"frame_system::pallet_prelude"],[1155,"bounded_collections::bounded_vec"],[1156,"frame_support::dispatch"],[1157,"core::option"],[1158,"parity_scale_codec::encode_like"],[1159,"frame_support::traits::metadata"],[1160,"parity_scale_codec::error"],[1161,"core::result"],[1162,"parity_scale_codec::codec"],[1163,"parity_scale_codec::codec"],[1164,"core::fmt"],[1165,"core::fmt"],[1166,"alloc::sync"],[1167,"alloc::rc"],[1168,"frame_support::traits::metadata"],[1169,"frame_system::pallet_prelude"],[1170,"core::any"],[1171,"sp_storage"],[1172,"frame_support::dispatch"],[1173,"sp_arithmetic::traits"],[1174,"core::default"],[1175,"core::marker"],[1176,"core::ops::arith"],[1177,"core::clone"],[1178,"parity_scale_codec::compact"],[1179,"parity_scale_codec::codec"],[1180,"core::fmt"]],"d":["","","The module that hosts all the FRAME types needed to add â€¦","","Autogenerated weights for <code>pallet_ocif_staking</code>","","","Contains one variant per dispatchable that can be called â€¦","Configuration trait of this pallet.","","","","","","","","","","","","Custom dispatch errors of this pallet.","The event emitted by this pallet.","","","","","","","","","","","","","","","","","","","","","","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","","","","","","","","","","","","The pallet implementing the on-chain logic.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined â€¦","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a call with the variant <code>change_core_metadata</code>.","Create a call with the variant <code>core_claim_rewards</code>.","Create a call with the variant <code>halt_unhalt_pallet</code>.","Create a call with the variant <code>move_stake</code>.","Create a call with the variant <code>register_core</code>.","Create a call with the variant <code>stake</code>.","Create a call with the variant <code>staker_claim_rewards</code>.","Create a call with the variant <code>unregister_core</code>.","Create a call with the variant <code>unstake</code>.","Create a call with the variant <code>withdraw_unstaked</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","NOTE: This function is an automatically generated, doc â€¦","NOTE: This function is an automatically generated, doc â€¦","NOTE: This function is an automatically generated, doc â€¦","NOTE: This function is an automatically generated, doc â€¦","NOTE: This function is an automatically generated, doc â€¦","NOTE: This function is an automatically generated, doc â€¦","NOTE: This function is an automatically generated, doc â€¦","NOTE: This function is an automatically generated, doc â€¦","NOTE: This function is an automatically generated, doc â€¦","NOTE: This function is an automatically generated, doc â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeights for <code>pallet_ocif_staking</code> using the Substrate node â€¦","Weight functions needed for <code>pallet_ocif_staking</code>.","","","","","","Storage: OcifStaking Halted (r:1 w:0) Proof: OcifStaking â€¦","","Storage: OcifStaking Halted (r:1 w:0) Proof: OcifStaking â€¦","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Storage: OcifStaking Halted (r:1 w:1) Proof: OcifStaking â€¦","Calls <code>U::from(self)</code>.","","","","","","","Storage: OcifStaking Halted (r:1 w:0) Proof: OcifStaking â€¦","","Storage: OcifStaking Halted (r:1 w:0) Proof: OcifStaking â€¦","","Storage: OcifStaking Halted (r:1 w:0) Proof: OcifStaking â€¦","","Storage: OcifStaking Halted (r:1 w:0) Proof: OcifStaking â€¦","","","","","","","Storage: OcifStaking Halted (r:1 w:0) Proof: OcifStaking â€¦","","Storage: OcifStaking Halted (r:1 w:0) Proof: OcifStaking â€¦","","","Storage: OcifStaking Halted (r:1 w:0) Proof: OcifStaking â€¦"],"i":[0,0,0,0,0,0,6,0,0,27,14,0,0,0,27,14,14,6,0,0,0,0,6,0,0,14,0,27,27,27,0,27,6,6,27,6,27,6,6,27,6,14,6,0,27,0,14,0,27,27,27,27,27,27,27,0,6,6,0,0,27,6,6,14,6,14,14,27,27,27,6,27,27,27,14,27,6,14,13,14,15,17,13,13,14,27,15,13,14,27,15,13,14,27,15,14,27,15,14,27,15,13,14,27,15,13,14,27,15,13,15,13,14,15,13,14,15,13,15,13,13,13,13,13,13,13,14,27,15,14,27,15,14,27,15,14,27,15,13,70,15,0,14,27,15,13,13,14,15,13,13,13,14,14,14,15,15,15,13,14,27,15,13,14,27,15,13,13,14,14,27,27,15,15,13,13,14,14,27,27,15,15,13,15,15,15,15,15,13,15,14,27,15,70,13,13,13,13,13,13,13,14,27,15,13,14,27,15,13,14,27,15,13,14,27,15,13,14,27,15,13,14,27,15,13,13,17,13,13,15,13,70,15,15,15,15,15,15,15,15,15,15,13,13,13,13,13,13,13,13,13,13,15,13,13,13,13,14,27,15,13,15,13,15,13,13,0,14,27,15,13,14,15,13,14,27,15,13,14,27,15,0,0,13,14,27,15,14,27,15,14,27,15,13,14,27,15,14,27,15,13,14,27,15,13,14,27,15,13,15,13,15,13,13,13,14,27,15,0,13,27,13,15,71,72,73,74,75,76,77,75,71,78,76,77,76,77,71,72,73,79,80,81,82,83,84,79,80,85,86,82,83,87,83,88,82,83,84,89,87,87,79,80,81,82,84,84,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,91,92,93,94,95,96,97,98,90,91,92,93,94,95,96,97,98,90,91,92,93,94,95,96,97,98,90,91,92,93,94,95,96,97,98,90,91,92,93,94,95,96,97,98,90,90,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,90,90,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,90,91,92,93,94,95,96,97,98,90,91,92,93,94,95,96,97,98,90,91,92,93,94,95,96,97,98,90,91,92,93,94,95,96,97,98,90,91,92,93,94,95,96,97,98,90,91,92,93,94,95,96,97,98,90,91,92,93,94,95,96,97,98,90,91,92,93,94,95,96,97,98,90,91,92,93,94,95,96,97,98,90,91,92,93,94,95,96,97,98,90,91,92,93,94,95,96,97,98,90,91,92,93,94,95,96,97,98,0,0,0,0,0,0,0,0,0,0,0,0,60,62,45,21,20,64,38,53,52,5,62,20,21,52,53,53,60,62,45,21,20,64,38,53,52,5,60,62,45,21,20,64,38,53,52,5,60,62,45,21,20,64,38,53,52,5,60,62,45,21,20,64,38,53,52,5,60,62,45,21,20,64,38,53,52,5,60,62,45,21,20,64,38,53,52,5,60,62,45,21,20,64,38,53,52,5,38,45,21,20,38,53,52,5,60,62,45,21,20,64,38,53,52,5,60,62,45,21,20,64,38,53,52,5,45,60,62,45,21,20,64,38,53,52,5,60,62,45,21,20,64,38,53,52,5,60,62,45,21,20,64,38,53,52,5,60,62,45,21,20,64,38,53,52,5,45,21,20,38,53,52,5,60,38,52,60,62,45,21,20,64,38,53,52,5,60,62,45,21,20,64,38,53,52,5,60,60,60,62,62,62,45,45,45,21,21,21,20,20,20,64,64,64,38,38,38,53,53,53,52,52,52,5,5,5,64,60,62,45,21,20,64,38,53,52,5,60,62,45,21,20,64,38,53,52,5,60,60,62,62,45,45,21,21,20,20,64,64,38,38,53,53,52,52,5,5,60,60,62,62,45,45,21,21,20,20,64,64,38,38,53,53,52,52,5,5,60,62,45,21,20,64,38,53,52,5,60,60,62,45,21,20,64,38,53,52,5,60,62,45,21,20,64,38,53,52,5,60,62,45,21,20,64,38,53,52,5,60,62,45,21,20,64,38,53,52,5,60,62,45,21,20,64,38,53,52,5,60,62,45,21,20,64,38,53,52,5,45,21,20,38,53,52,5,38,52,5,38,38,52,21,5,60,62,45,21,20,64,38,53,52,5,62,60,20,52,20,21,60,62,45,21,20,64,38,53,52,5,38,21,64,45,38,52,60,62,45,21,20,64,38,53,52,5,60,62,45,21,20,64,38,53,52,5,20,60,62,45,21,20,64,38,53,52,5,60,62,45,21,20,64,38,53,52,5,60,62,45,21,20,64,38,53,52,5,60,62,45,21,20,64,38,53,52,5,60,62,45,21,20,64,38,53,52,5,60,62,45,21,20,64,38,53,52,5,60,62,45,21,20,64,38,53,52,5,5,60,62,45,21,20,64,38,53,52,5,60,62,45,21,20,64,38,53,52,5,53,52,38,38,52,60,62,45,21,20,64,38,53,52,5,0,0,99,99,99,99,100,99,100,99,99,99,99,99,99,100,99,99,99,99,99,99,99,100,99,100,99,100,99,100,99,99,99,99,99,99,100,99,100,99,99,100,99],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],0,[[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[[[5,[[4,[-1]]]]],[[4,[-1]]],6],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[10,[-1]],[11,[7]],[11,[7]],[11,[7]]],12,6],0,[[[13,[-1]]],[[13,[-1]]],[]],[[[14,[-1]]],[[14,[-1]]],6],[[[15,[-1]]],[[15,[-1]]],6],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[10,[-1]],16],12,6],0,[-1,[[18,[[17,[-2]]]]],19,6],[[-1,-2],[[18,[[20,[[4,[-3]]]]]]],19,[[19,[16]]],6],[[[20,[[4,[-1]]]],[21,[[4,[-1]]]]],[[2,[[4,[-1]],[4,[-1]]]]],6],[[],22],[[],23],[[],16],[[],-1,[]],[-1,[[25,[[14,[-2]],24]]],26,6],[-1,[[25,[[27,[-2]],24]]],26,[]],[-1,[[25,[[15,[-2]],24]]],26,6],[[[28,[7]]],[[25,[-1,24]]],[]],[[[28,[7]]],[[25,[-1,24]]],[]],[[[28,[7]]],[[25,[-1,24]]],[]],[[29,[28,[7]]],[[25,[-1,24]]],[]],[[29,[28,[7]]],[[25,[-1,24]]],[]],[[29,[28,[7]]],[[25,[-1,24]]],[]],[[29,-1],[[25,[-2,24]]],26,[]],[[29,-1],[[25,[-2,24]]],26,[]],[[29,-1],[[25,[-2,24]]],26,[]],[[[14,[-1]]],2,6],0,[[[15,[-1]],-2],12,6,[]],0,[[[14,[-1]],-2],2,6,[30,31]],[[[27,[-1]],-2],2,[],[30,31]],[[[15,[-1]],-2],2,6,[30,31]],[[],[[25,[2,[27,[-1]]]]],6],[[[13,[-1]],[13,[-1]]],32,[]],[[[14,[-1]],[14,[-1]]],32,6],[[[15,[-1]],[15,[-1]]],32,6],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[[13,[-1]],33],34,[]],[[[14,[-1]],33],34,6],[[[27,[-1]],33],34,6],[[[15,[-1]],33],34,6],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[18,[[21,[[4,[-2]]]]]]],[[19,[16]]],6],[[[15,[-1]]],7,6],[[],[[28,[7]]]],[[[15,[-1]]],35,6],[[],[[28,[35]]]],[[[15,[-1]]],36,6],[[[10,[-1]],32],12,6],0,[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],0,[[],22],[[],[[9,[37]]]],[[],2],[32,2],[[[38,[[4,[-1]]]],[20,[[4,[-1]]]],[4,[-1]],16],[[25,[2,[27,[-1]]]]],6],[[[38,[[4,[-1]]]],[20,[[4,[-1]]]],[4,[-1]],16],[[25,[[4,[-1]],[27,[-1]]]]],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[39,[-1]]],[[39,[3]]],[]],[[[39,[-1]]],[[39,[3]]],[]],[[[39,[-1]]],[[39,[3]]],[]],[[[39,[-1]]],[[39,[3]]],[]],[[[40,[-1]]],[[40,[3]]],[]],[[[40,[-1]]],[[40,[3]]],[]],[[[40,[-1]]],[[40,[3]]],[]],[[[40,[-1]]],[[40,[3]]],[]],[[[41,[-1]]],[[41,[3]]],[]],[[[41,[-1]]],[[41,[3]]],[]],[[[41,[-1]]],[[41,[3]]],[]],[[[41,[-1]]],[[41,[3]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],32],[-1,[[5,[[4,[-2]]]]],19,6],0,[[],35],[[[10,[-1]],[4,[-1]]],12,6],0,[[],35],0,[[[11,[7]],[11,[7]],[11,[7]]],[[15,[-1]]],6],[16,[[15,[-1]]],6],[32,[[15,[-1]]],6],[[[4,[-1]]],[[15,[-1]]],6],[[[11,[7]],[11,[7]],[11,[7]]],[[15,[-1]]],6],[[[4,[-1]]],[[15,[-1]]],6],[[],[[15,[-1]]],6],[[],[[15,[-1]]],6],[[[4,[-1]]],[[15,[-1]]],6],[[],[[15,[-1]]],6],[[]],[[],2],[[],42],[[],2],[[],2],[43,43],[[[44,[-1]]],43,6],[[],43],[[],43],[[[10,[-1]],[11,[7]],[11,[7]],[11,[7]]],12,6],0,[[],[[45,[[4,[-1]]]]],6],[[16,[45,[[4,[-1]]]],[4,[-1]]],2,6],[[],2],[16,[[2,[43,[4,[-1]]]]],6],[[[14,[-1]]],22,6],[[[27,[-1]]],22,[]],[[[15,[-1]]],22,6],[[[10,[-1]],[4,[-1]]],12,6],0,[[[10,[-1]]],12,6],0,[[-1,-2],[[38,[[4,[-3]]]]],19,19,6],[[],[[9,[46]]]],0,[[-1,[28,[7]]],[[9,[7]]],[]],[[-1,[28,[7]]],[[9,[7]]],[]],[[-1,[28,[7]]],[[9,[7]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],0,0,[[],[[4,[-1]]],6],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[[],48],[[],48],[[],48],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[10,[-1]]],12,6],0,[[[10,[-1]],[4,[-1]]],12,6],0,[[[5,[[4,[-1]]]]],2,6],[[[38,[[4,[-1]]]]],2,6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],[[9,[49]]]],[[-1,43],[[51,[50]]],[]],[[[10,[-1]]],12,6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[11,[7]],[11,[7]],[11,[7]]],2],[16,2],[32,2],[[[4,[-1]]],2,6],[[[11,[7]],[11,[7]],[11,[7]]],2],[[[4,[-1]]],2,6],[[],2],[[],2],[[[4,[-1]]],2,6],[[],2],0,0,0,0,0,0,0,0,0,[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[39,[-1]]],[[39,[3]]],[]],[[[39,[-1]]],[[39,[3]]],[]],[[[39,[-1]]],[[39,[3]]],[]],[[[39,[-1]]],[[39,[3]]],[]],[[[39,[-1]]],[[39,[3]]],[]],[[[39,[-1]]],[[39,[3]]],[]],[[[39,[-1]]],[[39,[3]]],[]],[[[39,[-1]]],[[39,[3]]],[]],[[[39,[-1]]],[[39,[3]]],[]],[[[40,[-1]]],[[40,[3]]],[]],[[[40,[-1]]],[[40,[3]]],[]],[[[40,[-1]]],[[40,[3]]],[]],[[[40,[-1]]],[[40,[3]]],[]],[[[40,[-1]]],[[40,[3]]],[]],[[[40,[-1]]],[[40,[3]]],[]],[[[40,[-1]]],[[40,[3]]],[]],[[[40,[-1]]],[[40,[3]]],[]],[[[40,[-1]]],[[40,[3]]],[]],[[[41,[-1]]],[[41,[3]]],[]],[[[41,[-1]]],[[41,[3]]],[]],[[[41,[-1]]],[[41,[3]]],[]],[[[41,[-1]]],[[41,[3]]],[]],[[[41,[-1]]],[[41,[3]]],[]],[[[41,[-1]]],[[41,[3]]],[]],[[[41,[-1]]],[[41,[3]]],[]],[[[41,[-1]]],[[41,[3]]],[]],[[[41,[-1]]],[[41,[3]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],0,0,0,[[[52,[-1]],[53,[-1]]],2,[54,55,56,57]],[[[53,[-1]],-1],2,[[59,[],[[58,[]]]],56,57]],0,[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[38,[-1]]],[[2,[16,-1]]],[54,56,57]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[[60,[-1,-2,-3]]],[[60,[-1,-2,-3]]],61,61,61],[[[62,[-1,-2]]],[[62,[-1,-2]]],61,61],[[[45,[-1]]],[[45,[-1]]],[61,63,57]],[[[21,[-1]]],[[21,[-1]]],[61,63,57]],[[[20,[-1]]],[[20,[-1]]],[61,63,57]],[[[64,[-1]]],[[64,[-1]]],[61,54,56,57]],[[[38,[-1]]],[[38,[-1]]],[61,54,56,57]],[[[53,[-1]]],[[53,[-1]]],[61,57]],[[[52,[-1]]],[[52,[-1]]],[61,54,55,56,57]],[[[5,[-1]]],[[5,[-1]]],[61,54,55,56,57]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[-1,[[25,[[60,[-2,-3,-4]],24]]],26,65,65,65],[-1,[[25,[[62,[-2,-3]],24]]],26,65,65],[-1,[[25,[[45,[-2]],24]]],26,[63,63,57]],[-1,[[25,[[21,[-2]],24]]],26,[63,63,57]],[-1,[[25,[[20,[-2]],24]]],26,[63,63,57]],[-1,[[25,[[64,[-2]],24]]],26,[63,54,56,57]],[-1,[[25,[[38,[-2]],24]]],26,[54,56,57]],[-1,[[25,[[53,[-2]],24]]],26,[63,57]],[-1,[[25,[[52,[-2]],24]]],26,[54,55,56,57]],[-1,[[25,[[5,[-2]],24]]],26,[63,54,55,56,57]],[[[28,[7]]],[[25,[-1,24]]],[]],[[[28,[7]]],[[25,[-1,24]]],[]],[[[28,[7]]],[[25,[-1,24]]],[]],[[[28,[7]]],[[25,[-1,24]]],[]],[[[28,[7]]],[[25,[-1,24]]],[]],[[[28,[7]]],[[25,[-1,24]]],[]],[[[28,[7]]],[[25,[-1,24]]],[]],[[[28,[7]]],[[25,[-1,24]]],[]],[[[28,[7]]],[[25,[-1,24]]],[]],[[[28,[7]]],[[25,[-1,24]]],[]],[[29,[28,[7]]],[[25,[-1,24]]],[]],[[29,[28,[7]]],[[25,[-1,24]]],[]],[[29,[28,[7]]],[[25,[-1,24]]],[]],[[29,[28,[7]]],[[25,[-1,24]]],[]],[[29,[28,[7]]],[[25,[-1,24]]],[]],[[29,[28,[7]]],[[25,[-1,24]]],[]],[[29,[28,[7]]],[[25,[-1,24]]],[]],[[29,[28,[7]]],[[25,[-1,24]]],[]],[[29,[28,[7]]],[[25,[-1,24]]],[]],[[29,[28,[7]]],[[25,[-1,24]]],[]],[[29,-1],[[25,[-2,24]]],26,[]],[[29,-1],[[25,[-2,24]]],26,[]],[[29,-1],[[25,[-2,24]]],26,[]],[[29,-1],[[25,[-2,24]]],26,[]],[[29,-1],[[25,[-2,24]]],26,[]],[[29,-1],[[25,[-2,24]]],26,[]],[[29,-1],[[25,[-2,24]]],26,[]],[[29,-1],[[25,[-2,24]]],26,[]],[[29,-1],[[25,[-2,24]]],26,[]],[[29,-1],[[25,[-2,24]]],26,[]],[[],[[45,[-1]]],[55,63,57]],[[],[[21,[-1]]],[55,63,57]],[[],[[20,[-1]]],[55,63,57]],[[],[[38,[-1]]],[55,54,56,57]],[[],[[53,[-1]]],[55,57]],[[],[[52,[-1]]],[55,54,55,56,57]],[[],[[5,[-1]]],[55,54,55,56,57]],0,[[[38,[-1]]],[[9,[7]]],[54,56,57]],[[[52,[-1]]],[[9,[7]]],[54,55,56,57]],[[[60,[-1,-2,-3]],-4],2,66,66,66,[30,31]],[[[62,[-1,-2]],-3],2,66,66,[30,31]],[[[45,[-1]],-2],2,[63,63,57],[30,31]],[[[21,[-1]],-2],2,[63,63,57],[30,31]],[[[20,[-1]],-2],2,[63,63,57],[30,31]],[[[64,[-1]],-2],2,[63,54,56,57],[30,31]],[[[38,[-1]],-2],2,[54,56,57],[30,31]],[[[53,[-1]],-2],2,[63,57],[30,31]],[[[52,[-1]],-2],2,[54,55,56,57],[30,31]],[[[5,[-1]],-2],2,[63,54,55,56,57],[30,31]],[[[60,[-1,-2,-3]],[60,[-1,-2,-3]]],32,67,67,67],[[[62,[-1,-2]],[62,[-1,-2]]],32,67,67],[[[45,[-1]],[45,[-1]]],32,[67,63,57]],[[[21,[-1]],[21,[-1]]],32,[67,63,57]],[[[20,[-1]],[20,[-1]]],32,[67,63,57]],[[[64,[-1]],[64,[-1]]],32,[67,54,56,57]],[[[38,[-1]],[38,[-1]]],32,[67,54,56,57]],[[[53,[-1]],[53,[-1]]],32,[67,57]],[[[52,[-1]],[52,[-1]]],32,[67,54,55,56,57]],[[[5,[-1]],[5,[-1]]],32,[67,54,55,56,57]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],0,[[[60,[-1,-2,-3]],33],34,68,68,68],[[[62,[-1,-2]],33],34,68,68],[[[45,[-1]],33],34,[68,63,57]],[[[21,[-1]],33],34,[68,63,57]],[[[20,[-1]],33],34,[68,63,57]],[[[64,[-1]],33],34,[68,54,56,57]],[[[38,[-1]],33],34,[68,54,56,57]],[[[53,[-1]],33],34,[68,57]],[[[52,[-1]],33],34,[68,54,55,56,57]],[[[5,[-1]],33],34,[68,54,55,56,57]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[39,[-1]]],[[39,[3]]],[]],[[[39,[-1]]],[[39,[3]]],[]],[[[39,[-1]]],[[39,[3]]],[]],[[[39,[-1]]],[[39,[3]]],[]],[[[39,[-1]]],[[39,[3]]],[]],[[[39,[-1]]],[[39,[3]]],[]],[[[39,[-1]]],[[39,[3]]],[]],[[[39,[-1]]],[[39,[3]]],[]],[[[39,[-1]]],[[39,[3]]],[]],[[[39,[-1]]],[[39,[3]]],[]],[[[40,[-1]]],[[40,[3]]],[]],[[[40,[-1]]],[[40,[3]]],[]],[[[40,[-1]]],[[40,[3]]],[]],[[[40,[-1]]],[[40,[3]]],[]],[[[40,[-1]]],[[40,[3]]],[]],[[[40,[-1]]],[[40,[3]]],[]],[[[40,[-1]]],[[40,[3]]],[]],[[[40,[-1]]],[[40,[3]]],[]],[[[40,[-1]]],[[40,[3]]],[]],[[[40,[-1]]],[[40,[3]]],[]],[[[41,[-1]]],[[41,[3]]],[]],[[[41,[-1]]],[[41,[3]]],[]],[[[41,[-1]]],[[41,[3]]],[]],[[[41,[-1]]],[[41,[3]]],[]],[[[41,[-1]]],[[41,[3]]],[]],[[[41,[-1]]],[[41,[3]]],[]],[[[41,[-1]]],[[41,[3]]],[]],[[[41,[-1]]],[[41,[3]]],[]],[[[41,[-1]]],[[41,[3]]],[]],[[[41,[-1]]],[[41,[3]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[[[38,[-1]]],32,[54,56,57]],[[[52,[-1]]],32,[54,55,56,57]],[[[5,[-1]]],32,[54,55,56,57]],[[[38,[-1]]],-1,[54,56,57]],[[[38,[-1]]],29,[54,56,57]],[[[52,[-1]]],29,[54,55,56,57]],0,0,[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],0,0,0,[[[52,[-1]],16],[[2,[[52,[-1]],[52,[-1]]]]],[54,55,56,57]],0,0,[[[60,[-1,-2,-3]]],22,66,66,66],[[[62,[-1,-2]]],22,66,66],[[[45,[-1]]],22,[63,63,57]],[[[21,[-1]]],22,[63,63,57]],[[[20,[-1]]],22,[63,63,57]],[[[64,[-1]]],22,[63,54,56,57]],[[[38,[-1]]],22,[54,56,57]],[[[53,[-1]]],22,[63,57]],[[[52,[-1]]],22,[54,55,56,57]],[[[5,[-1]]],22,[63,54,55,56,57]],[[[38,[-1]],16,-1],[[25,[2,35]]],[54,56,57]],0,0,0,0,[[[52,[-1]]],-1,[54,55,56,57]],[[-1,[28,[7]]],[[9,[7]]],[]],[[-1,[28,[7]]],[[9,[7]]],[]],[[-1,[28,[7]]],[[9,[7]]],[]],[[-1,[28,[7]]],[[9,[7]]],[]],[[-1,[28,[7]]],[[9,[7]]],[]],[[-1,[28,[7]]],[[9,[7]]],[]],[[-1,[28,[7]]],[[9,[7]]],[]],[[-1,[28,[7]]],[[9,[7]]],[]],[[-1,[28,[7]]],[[9,[7]]],[]],[[-1,[28,[7]]],[[9,[7]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[[38,[-1]],16,-1],[[25,[2,35]]],[54,56,57]],[[[38,[-1]],-3],-2,[54,56,57],[],[[69,[[28,[7]]],[[58,[-2]]]]]],[[[52,[-1]],-3],-2,[54,55,56,57],[],[[69,[[28,[7]]],[[58,[-2]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,3,[]],[-1,3,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[29,29,29],43],[[29,29,29],43],[[],43],[[],43],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[[],43],[[],43],[-1,-2,[],[]],[[[39,[-1]]],[[39,[3]]],[]],[[[40,[-1]]],[[40,[3]]],[]],[[[41,[-1]]],[[41,[3]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],43],[[],43],[[29,29,29],43],[[29,29,29],43],[[],43],[[],43],[[],43],[[],43],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,47,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],43],[[],43],[[],43],[[],43],[-1,-2,[],[]],[[],43],[[],43]],"c":[43],"p":[[5,"Private",1151],[1,"tuple"],[10,"Any",1152],[8,"BalanceOf",5],[5,"AccountLedger",575],[10,"Config",5],[1,"u8"],[1,"array"],[5,"Vec",1153],[8,"OriginFor",1154],[5,"BoundedVec",1155],[8,"DispatchResultWithPostInfo",1156],[5,"Pallet",5],[6,"Event",5],[6,"Call",5],[8,"Era",5],[8,"CoreInfoOf",5],[6,"Option",1157],[10,"EncodeLike",1158],[5,"CoreStakeInfo",575],[5,"EraInfo",575],[1,"usize"],[5,"CrateVersion",1159],[5,"Error",1160],[6,"Result",1161],[10,"Input",1162],[6,"Error",5],[1,"slice"],[1,"u32"],[10,"Output",1162],[10,"Sized",1163],[1,"bool"],[5,"Formatter",1164],[8,"Result",1164],[1,"str"],[5,"DispatchInfo",1156],[5,"PalletInfoData",1159],[5,"StakerInfo",575],[5,"Box",1165],[5,"Arc",1166],[5,"Rc",1167],[5,"StorageVersion",1159],[5,"Weight",1168],[8,"BlockNumberFor",1154],[5,"RewardInfo",575],[5,"StorageInfo",1169],[5,"TypeId",1152],[5,"Type",1170],[5,"TrackedStorageKey",1171],[5,"PostDispatchInfo",1156],[5,"DispatchErrorWithPostInfo",1172],[5,"UnbondingInfo",575],[5,"UnlockingChunk",575],[10,"AtLeast32BitUnsigned",1173],[10,"Default",1174],[10,"Copy",1163],[10,"MaxEncodedLen",1175],[17,"Output"],[10,"Add",1176],[5,"CoreMetadata",575],[10,"Clone",1177],[5,"CoreInfo",575],[10,"HasCompact",1178],[5,"EraStake",575],[10,"Decode",1162],[10,"Encode",1162],[10,"PartialEq",1179],[10,"Debug",1164],[10,"FnOnce",1180],[8,"CoreMetadataOf",5],[15,"move_stake",323],[15,"stake",323],[15,"unstake",323],[15,"staker_claim_rewards",323],[15,"core_claim_rewards",323],[15,"register_core",323],[15,"change_core_metadata",323],[15,"halt_unhalt_pallet",323],[15,"Staked",340],[15,"Unstaked",340],[15,"Withdrawn",340],[15,"StakerClaimed",340],[15,"CoreClaimed",340],[15,"StakeMoved",340],[15,"CoreRegistered",340],[15,"CoreUnregistered",340],[15,"MetadataChanged",340],[15,"NewEra",340],[15,"HaltChanged",340],[5,"Ledger",377],[5,"CurrentEra",377],[5,"RewardAccumulator",377],[5,"NextEraStartingBlock",377],[5,"RegisteredCore",377],[5,"GeneralEraInfo",377],[5,"CoreEraStake",377],[5,"GeneralStakerInfo",377],[5,"Halted",377],[5,"SubstrateWeight",1108],[10,"WeightInfo",1108]],"b":[[248,"impl-Hooks%3C%3CT+as+Config%3E::BlockNumber%3E-for-Pallet%3CT%3E"],[249,"impl-OnInitialize%3C%3CT+as+Config%3E::BlockNumber%3E-for-Pallet%3CT%3E"]]},\
"pallet_rings":{"doc":"","t":"RRKKREMMMMCCCPPGPPPRIKPGGPPPRRIFRPRPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNPNNNNCNNNNNNNPNNNNNNNNEENNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOHHHHFNNNNNNNNNNNNNNNNNNNNNRRKKRMMMMFKNNNNMNNNNNNNNNNNNMNMNMNNNNNNN","n":["Balance","ChainAssets","ChainAssetsList","ChainList","Chains","WeightInfo","get_asset_location","get_chain","get_location","get_main_asset","pallet","traits","weights","AssetsBridged","AssetsTransferred","Call","CallSent","ChainMaintenanceStatusChanged","ChainUnderMaintenance","Chains","ChainsUnderMaintenance","Config","DifferentChains","Error","Event","FailedToCalculateXcmFee","FailedToInvertLocation","FailedToReanchorAsset","MaintenanceOrigin","MaxXCMCallLength","Module","Pallet","RuntimeEvent","SendingFailed","WeightInfo","WeightTooHigh","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bridge_assets","bridge_assets","clone","clone","clone","clone_into","clone_into","clone_into","count","crate_version","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deposit_event","dispatch_bypass_filter","dispatchables","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","identity","identity","index","infos","integrity_test","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","is_under_maintenance","module_name","name","new_call_variant_bridge_assets","new_call_variant_send_call","new_call_variant_set_maintenance_status","new_call_variant_transfer_assets","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","send_call","send_call","set_maintenance_status","set_maintenance_status","size_hint","size_hint","size_hint","storage_info","storage_types","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","transfer_assets","transfer_assets","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","tt_default_parts","tt_error_token","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","warnings","whitelisted_storage_keys","with_weight","amount","amount","asset","asset","call","chain","destination","destination","fee","fee","fee","fee_asset","fee_asset","to","to","under_maintenance","weight","amount","amount","asset","call","chain","chain","destination","from","from","origin_chain_asset","sender","to","to","under_maintenance","bridge_assets","send_call","set_maintenance_status","transfer_assets","ChainsUnderMaintenance","as_any","as_any_mut","borrow","borrow_mut","from","from_mut","from_mut","from_ref","from_ref","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","Balance","ChainAssets","ChainAssetsList","ChainList","Chains","get_asset_location","get_chain","get_location","get_main_asset","SubstrateWeight","WeightInfo","as_any","as_any_mut","borrow","borrow_mut","bridge_assets","bridge_assets","from","from_mut","from_mut","from_ref","from_ref","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","send_call","send_call","set_maintenance_status","set_maintenance_status","transfer_assets","transfer_assets","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"pallet_rings"],[13,"pallet_rings::pallet"],[236,"pallet_rings::pallet::Call"],[253,"pallet_rings::pallet::Event"],[267,"pallet_rings::pallet::dispatchables"],[271,"pallet_rings::pallet::storage_types"],[293,"pallet_rings::traits"],[302,"pallet_rings::weights"],[333,"xcm::v3::multilocation"],[334,"core::convert"],[335,"dyn_clone::sealed"],[336,"core::any"],[337,"alloc::vec"],[338,"frame_system::pallet_prelude"],[339,"core::option"],[340,"frame_support::dispatch"],[341,"frame_support::traits::metadata"],[342,"parity_scale_codec::error"],[343,"core::result"],[344,"parity_scale_codec::codec"],[345,"frame_support::dispatch"],[346,"core::fmt"],[347,"core::fmt"],[348,"alloc::sync"],[349,"alloc::rc"],[350,"parity_scale_codec::encode_like"],[351,"sp_weights::weight_v2"],[352,"bounded_collections::bounded_vec"],[353,"frame_support::traits::metadata"],[354,"core::any"],[355,"sp_storage"],[356,"frame_support::dispatch"]],"d":["","","","","","","","","","","The module that hosts all the FRAME types needed to add â€¦","","Autogenerated weights for <code>pallet_rings</code>","","","Contains one variant per dispatchable that can be called â€¦","","","","","","Configuration trait of this pallet.","","Custom dispatch errors of this pallet.","The event emitted by this pallet.","","","","","","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","The pallet implementing the on-chain logic.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined â€¦","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Create a call with the variant <code>bridge_assets</code>.","Create a call with the variant <code>send_call</code>.","Create a call with the variant <code>set_maintenance_status</code>.","Create a call with the variant <code>transfer_assets</code>.","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","NOTE: This function is an automatically generated, doc â€¦","NOTE: This function is an automatically generated, doc â€¦","NOTE: This function is an automatically generated, doc â€¦","NOTE: This function is an automatically generated, doc â€¦","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Weights for <code>pallet_rings</code> using the Substrate node and â€¦","Weight functions needed for <code>pallet_rings</code>.","","","","","","Storage: Rings ChainsUnderMaintenance (r:1 w:0) Proof: â€¦","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Calls <code>U::from(self)</code>.","","","","","","","Storage: Rings ChainsUnderMaintenance (r:1 w:0) Proof: â€¦","","Storage: Rings ChainsUnderMaintenance (r:0 w:1) Proof: â€¦","","Storage: Rings ChainsUnderMaintenance (r:1 w:0) Proof: â€¦","","","","","",""],"i":[4,4,0,0,2,0,2,2,4,4,0,0,0,20,20,0,20,20,24,18,0,0,24,0,0,24,24,24,18,18,0,0,18,24,18,24,19,20,21,19,24,20,21,19,24,20,21,24,20,21,24,20,21,24,20,21,19,24,20,21,19,24,20,21,19,21,19,20,21,19,20,21,19,19,19,24,20,21,24,20,21,24,20,21,24,20,21,19,21,0,24,20,21,19,20,21,19,19,19,20,20,20,21,21,21,19,24,20,21,19,24,20,21,19,19,24,24,20,20,21,21,19,19,24,24,20,20,21,21,21,21,21,21,21,24,20,21,19,19,19,19,24,20,21,19,24,20,21,19,24,20,21,19,24,20,21,19,24,20,21,19,24,20,21,19,19,19,21,21,21,21,19,19,19,19,19,19,19,19,21,19,21,24,20,21,19,0,24,20,21,19,20,21,19,21,19,24,20,21,19,24,20,21,0,0,24,20,21,24,20,21,24,20,21,19,24,20,21,24,20,21,19,24,20,21,19,24,20,21,19,24,20,21,0,19,24,52,53,52,53,54,55,54,53,54,52,53,54,52,52,53,55,54,56,57,56,58,56,59,58,56,57,57,58,56,57,59,0,0,0,0,0,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,4,4,0,0,2,2,2,4,4,0,0,61,61,61,61,62,61,61,61,61,61,61,61,61,61,61,61,61,62,61,62,61,62,61,61,61,61,61,61,61],"f":[0,0,0,0,0,0,[[[2,[],[[1,[-1]]]]],3,4],[[[2,[],[[1,[-1]]]]],-1,4],[[[4,[],[[5,[-1]],[6,[-2]]]]],3,[[8,[7]]],2],[[[4,[],[[5,[-1]],[6,[-2]]]]],-2,[[8,[7]]],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,9],10,[]],[[-1,9],10,[]],[[-1,9],10,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[14,[12]]],[]],[-1,[[14,[12]]],[]],[-1,[[14,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[15,[-1]],7,7,16],17,18],0,[[[19,[-1]]],[[19,[-1]]],[]],[[[20,[-1]]],[[20,[-1]]],18],[[[21,[-1]]],[[21,[-1]]],18],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[],22],[[],23],[[],-1,[]],[-1,[[26,[[24,[-2]],25]]],27,[]],[-1,[[26,[[20,[-2]],25]]],27,18],[-1,[[26,[[21,[-2]],25]]],27,18],[[[28,[12]]],[[26,[-1,25]]],[]],[[[28,[12]]],[[26,[-1,25]]],[]],[[[28,[12]]],[[26,[-1,25]]],[]],[[29,[28,[12]]],[[26,[-1,25]]],[]],[[29,[28,[12]]],[[26,[-1,25]]],[]],[[29,[28,[12]]],[[26,[-1,25]]],[]],[[29,-1],[[26,[-2,25]]],27,[]],[[29,-1],[[26,[-2,25]]],27,[]],[[29,-1],[[26,[-2,25]]],27,[]],[[[20,[-1]]],10,18],[[[21,[-1]],-2],30,18,[]],0,[[[24,[-1]],-2],10,[],[31,32]],[[[20,[-1]],-2],10,18,[31,32]],[[[21,[-1]],-2],10,18,[31,32]],[[[19,[-1]],[19,[-1]]],33,[]],[[[20,[-1]],[20,[-1]]],33,18],[[[21,[-1]],[21,[-1]]],33,18],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[[19,[-1]],34],35,[]],[[[24,[-1]],34],35,18],[[[20,[-1]],34],35,18],[[[21,[-1]],34],35,18],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[[21,[-1]]],12,18],[[],[[28,[12]]]],[[[21,[-1]]],36,18],[[],[[28,[36]]]],[[[21,[-1]]],37,18],[-1,[[14,[12]]],[]],[-1,[[14,[12]]],[]],[-1,[[14,[12]]],[]],[[],22],[[],[[14,[38]]]],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[39,[-1]]],[[39,[11]]],[]],[[[39,[-1]]],[[39,[11]]],[]],[[[39,[-1]]],[[39,[11]]],[]],[[[39,[-1]]],[[39,[11]]],[]],[[[40,[-1]]],[[40,[11]]],[]],[[[40,[-1]]],[[40,[11]]],[]],[[[40,[-1]]],[[40,[11]]],[]],[[[40,[-1]]],[[40,[11]]],[]],[[[41,[-1]]],[[41,[11]]],[]],[[[41,[-1]]],[[41,[11]]],[]],[[[41,[-1]]],[[41,[11]]],[]],[[[41,[-1]]],[[41,[11]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[33]]],[[42,[3]]]],[[],36],[[],36],[[7,7,16],[[21,[-1]]],18],[[43,7,[44,[12]]],[[21,[-1]]],18],[33,[[21,[-1]]],18],[[7,7],[[21,[-1]]],18],[[],10],[[],45],[[],10],[[],10],[43,43],[[],43],[[],43],[[[15,[-1]],43,7,[44,[12]]],17,18],0,[[[15,[-1]],33],17,18],0,[[[24,[-1]]],22,[]],[[[20,[-1]]],22,18],[[[21,[-1]]],22,18],[[],[[14,[46]]]],0,[[-1,[28,[12]]],[[14,[12]]],[]],[[-1,[28,[12]]],[[14,[12]]],[]],[[-1,[28,[12]]],[[14,[12]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[15,[-1]],7,7],17,18],0,[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],0,0,[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[14,[12]]],[]],[-1,[[14,[12]]],[]],[-1,[[14,[12]]],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[[],48],[[],48],[[],48],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],[[14,[49]]]],[[-1,43],[[51,[50]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[7,7,16],10],[[43,7,[44,[12]]],10],[33,10],[[7,7],10],0,[-1,11,[]],[-1,11,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[39,[-1]]],[[39,[11]]],[]],[[[40,[-1]]],[[40,[11]]],[]],[[[41,[-1]]],[[41,[11]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,47,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[[2,[],[[1,[-1]]]]],3,4],[[[2,[],[[1,[-1]]]]],-1,4],[[[4,[],[[5,[-1]],[6,[-2]]]]],3,[[8,[7]]],2],[[[4,[],[[5,[-1]],[6,[-2]]]]],-2,[[8,[7]]],2],0,0,[-1,11,[]],[-1,11,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],43],[[],43],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[39,[-1]]],[[39,[11]]],[]],[[[40,[-1]]],[[40,[11]]],[]],[[[41,[-1]]],[[41,[11]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[29,43],[29,43],[[],43],[[],43],[[],43],[[],43],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,47,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[30],"p":[[17,"Chains"],[10,"ChainAssetsList",293],[5,"MultiLocation",333],[10,"ChainList",293],[17,"Balance"],[17,"ChainAssets"],[1,"u128"],[10,"Into",334],[5,"Private",335],[1,"tuple"],[10,"Any",336],[1,"u8"],[1,"array"],[5,"Vec",337],[8,"OriginFor",338],[6,"Option",339],[8,"DispatchResult",340],[10,"Config",13],[5,"Pallet",13],[6,"Event",13],[6,"Call",13],[1,"usize"],[5,"CrateVersion",341],[6,"Error",13],[5,"Error",342],[6,"Result",343],[10,"Input",344],[1,"slice"],[1,"u32"],[8,"DispatchResultWithPostInfo",340],[10,"Output",344],[10,"Sized",345],[1,"bool"],[5,"Formatter",346],[8,"Result",346],[1,"str"],[5,"DispatchInfo",340],[5,"PalletInfoData",341],[5,"Box",347],[5,"Arc",348],[5,"Rc",349],[10,"EncodeLike",350],[5,"Weight",351],[5,"BoundedVec",352],[5,"StorageVersion",341],[5,"StorageInfo",353],[5,"TypeId",336],[5,"Type",354],[5,"TrackedStorageKey",355],[5,"PostDispatchInfo",340],[5,"DispatchErrorWithPostInfo",356],[15,"transfer_assets",236],[15,"bridge_assets",236],[15,"send_call",236],[15,"set_maintenance_status",236],[15,"AssetsTransferred",253],[15,"AssetsBridged",253],[15,"CallSent",253],[15,"ChainMaintenanceStatusChanged",253],[5,"ChainsUnderMaintenance",271],[5,"SubstrateWeight",302],[10,"WeightInfo",302]],"b":[]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
