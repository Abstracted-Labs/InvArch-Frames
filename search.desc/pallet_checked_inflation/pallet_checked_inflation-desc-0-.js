searchState.loadedDescShard("pallet_checked_inflation", 0, "Checked Inflation Pallet\nThe inflation is a fixed amount per era.\nThe inflation is a fixed amount per year.\nGetter trait for the inflation amount to be minted in each …\nInflation methods.\nThe inflation is calculated as a percentage (<code>Perbill</code>) of …\nReturns the inflation amount to be minted per era.\nAvailable inflation methods and resulting inflation amount …\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nAutogenerated weights for <code>pallet_checked_inflation</code>\nThe inflation is a fixed amount per era.\nThe inflation is a fixed amount per year.\nGetter trait for the inflation amount to be minted in each …\nInflation methods.\nThe inflation is calculated as a percentage (<code>Perbill</code>) of …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the inflation amount to be minted per era.\nReturns the inflation amount to be minted per era based on …\nCalls <code>U::from(self)</code>.\nThe balance type of this pallet.\nNumber of blocks per era.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe currency (token) used in this pallet.\nThe current era. Starts from 1 and is reset every year.\nThe <code>NegativeImbalanceOf</code> the currency, i.e. the amount of …\nNumber of eras per year.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nHalt status changed.\nWhether the inflation process is halted.\nThe inflation method and its amount.\nTokens minted due to inflation.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe opaque token type for an imbalance. This is returned …\nBeginning of a new era.\nBeginning of a new year.\nBlock that the next era starts at.\nThe pallet is already in the state that the user is trying …\nTotal supply of the token is higher than expected by …\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe overarching event type.\nWeight information for extrinsics in this pallet.\nTotal token supply at the very beginning of the year …\nThe number of tokens minted at the beginning of every era …\nAn auto-generated getter for <code>CurrentEra</code>.\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nHalts or unhalts the inflation process.\nSee <code>Pallet::halt_unhalt_pallet</code>.\nAn auto-generated getter for <code>YearlyInflationPerEra</code>.\nInternal function to set the halt status to storage.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn auto-generated getter for <code>Halted</code>.\nInternal function for minting tokens to the currency due …\nCreate a call with the variant <code>halt_unhalt_pallet</code>.\nCreate a call with the variant <code>set_first_year_supply</code>.\nAn auto-generated getter for <code>NextEraStartingBlock</code>.\nThis call is used for configuring the inflation mechanism …\nSee <code>Pallet::set_first_year_supply</code>.\nAuto-generated docs-only module listing all (public and …\nAn auto-generated getter for <code>YearStartIssuance</code>.\nHalts or unhalts the inflation process.\nThis call is used for configuring the inflation mechanism …\nThe current era. Starts from 1 and is reset every year.\nWhether the inflation process is halted.\nBlock that the next era starts at.\nTotal token supply at the very beginning of the year …\nThe number of tokens minted at the beginning of every era …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWeights for <code>pallet_checked_inflation</code> using the Substrate …\nWeight functions needed for <code>pallet_checked_inflation</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nStorage: <code>CheckedInflation::Halted</code> (r:1 w:1) Proof: …\nCalls <code>U::from(self)</code>.\nStorage: <code>CheckedInflation::YearStartIssuance</code> (r:0 w:1) …")