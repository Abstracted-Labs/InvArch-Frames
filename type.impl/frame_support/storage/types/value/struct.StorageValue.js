(function() {var type_impls = {
"pallet_checked_inflation":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_checked_inflation::pallet::CurrentEra","pallet_checked_inflation::pallet::NextEraStartingBlock","pallet_checked_inflation::pallet::YearStartIssuance","pallet_checked_inflation::pallet::YearlyInflationPerEra","pallet_checked_inflation::pallet::Halted"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_checked_inflation::pallet::CurrentEra","pallet_checked_inflation::pallet::NextEraStartingBlock","pallet_checked_inflation::pallet::YearStartIssuance","pallet_checked_inflation::pallet::YearlyInflationPerEra","pallet_checked_inflation::pallet::Halted"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_checked_inflation::pallet::CurrentEra","pallet_checked_inflation::pallet::NextEraStartingBlock","pallet_checked_inflation::pallet::YearStartIssuance","pallet_checked_inflation::pallet::YearlyInflationPerEra","pallet_checked_inflation::pallet::Halted"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_checked_inflation::pallet::CurrentEra","pallet_checked_inflation::pallet::NextEraStartingBlock","pallet_checked_inflation::pallet::YearStartIssuance","pallet_checked_inflation::pallet::YearlyInflationPerEra","pallet_checked_inflation::pallet::Halted"]],
"pallet_inv4":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_inv4::pallet::NextCoreId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_inv4::pallet::NextCoreId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_inv4::pallet::NextCoreId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_inv4::pallet::NextCoreId"]],
"pallet_ocif_staking":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_ocif_staking::pallet::CurrentEra","pallet_ocif_staking::pallet::RewardAccumulator","pallet_ocif_staking::pallet::NextEraStartingBlock","pallet_ocif_staking::pallet::Halted"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_ocif_staking::pallet::CurrentEra","pallet_ocif_staking::pallet::RewardAccumulator","pallet_ocif_staking::pallet::NextEraStartingBlock","pallet_ocif_staking::pallet::Halted"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_ocif_staking::pallet::CurrentEra","pallet_ocif_staking::pallet::RewardAccumulator","pallet_ocif_staking::pallet::NextEraStartingBlock","pallet_ocif_staking::pallet::Halted"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_ocif_staking::pallet::CurrentEra","pallet_ocif_staking::pallet::RewardAccumulator","pallet_ocif_staking::pallet::NextEraStartingBlock","pallet_ocif_staking::pallet::Halted"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()